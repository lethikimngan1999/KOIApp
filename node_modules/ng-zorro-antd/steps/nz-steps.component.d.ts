/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { AfterContentInit, EventEmitter, OnChanges, OnDestroy, OnInit, QueryList, SimpleChanges, TemplateRef } from '@angular/core';
import { NgClassType, NzSizeDSType } from 'ng-zorro-antd/core';
import { NzStepComponent } from './nz-step.component';
import * as ɵngcc0 from '@angular/core';
export declare type NzDirectionType = 'horizontal' | 'vertical';
export declare type NzStatusType = 'wait' | 'process' | 'finish' | 'error';
export declare class NzStepsComponent implements OnChanges, OnInit, OnDestroy, AfterContentInit {
    steps: QueryList<NzStepComponent>;
    nzCurrent: number;
    nzDirection: NzDirectionType;
    nzLabelPlacement: 'horizontal' | 'vertical';
    nzType: 'default' | 'navigation';
    nzSize: NzSizeDSType;
    nzStartIndex: number;
    nzStatus: NzStatusType;
    nzProgressDot: boolean | TemplateRef<{
        $implicit: TemplateRef<void>;
        status: string;
        index: number;
    }>;
    readonly nzIndexChange: EventEmitter<number>;
    private destroy$;
    private indexChangeSubscription;
    showProcessDot: boolean;
    customProcessDotTemplate: TemplateRef<{
        $implicit: TemplateRef<void>;
        status: string;
        index: number;
    }>;
    classMap: NgClassType;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngAfterContentInit(): void;
    private updateChildrenSteps;
    private setClassMap;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzStepsComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzStepsComponent, "nz-steps", ["nzSteps"], { "nzCurrent": "nzCurrent"; "nzDirection": "nzDirection"; "nzLabelPlacement": "nzLabelPlacement"; "nzType": "nzType"; "nzSize": "nzSize"; "nzStartIndex": "nzStartIndex"; "nzStatus": "nzStatus"; "nzProgressDot": "nzProgressDot"; }, { "nzIndexChange": "nzIndexChange"; }, ["steps"], ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnotc3RlcHMuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbIm56LXN0ZXBzLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFsaWJhYmEuY29tIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5pbXBvcnQgeyBBZnRlckNvbnRlbnRJbml0LCBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBPbkluaXQsIFF1ZXJ5TGlzdCwgU2ltcGxlQ2hhbmdlcywgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nQ2xhc3NUeXBlLCBOelNpemVEU1R5cGUgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUnO1xuaW1wb3J0IHsgTnpTdGVwQ29tcG9uZW50IH0gZnJvbSAnLi9uei1zdGVwLmNvbXBvbmVudCc7XG5leHBvcnQgZGVjbGFyZSB0eXBlIE56RGlyZWN0aW9uVHlwZSA9ICdob3Jpem9udGFsJyB8ICd2ZXJ0aWNhbCc7XG5leHBvcnQgZGVjbGFyZSB0eXBlIE56U3RhdHVzVHlwZSA9ICd3YWl0JyB8ICdwcm9jZXNzJyB8ICdmaW5pc2gnIHwgJ2Vycm9yJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE56U3RlcHNDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMsIE9uSW5pdCwgT25EZXN0cm95LCBBZnRlckNvbnRlbnRJbml0IHtcbiAgICBzdGVwczogUXVlcnlMaXN0PE56U3RlcENvbXBvbmVudD47XG4gICAgbnpDdXJyZW50OiBudW1iZXI7XG4gICAgbnpEaXJlY3Rpb246IE56RGlyZWN0aW9uVHlwZTtcbiAgICBuekxhYmVsUGxhY2VtZW50OiAnaG9yaXpvbnRhbCcgfCAndmVydGljYWwnO1xuICAgIG56VHlwZTogJ2RlZmF1bHQnIHwgJ25hdmlnYXRpb24nO1xuICAgIG56U2l6ZTogTnpTaXplRFNUeXBlO1xuICAgIG56U3RhcnRJbmRleDogbnVtYmVyO1xuICAgIG56U3RhdHVzOiBOelN0YXR1c1R5cGU7XG4gICAgbnpQcm9ncmVzc0RvdDogYm9vbGVhbiB8IFRlbXBsYXRlUmVmPHtcbiAgICAgICAgJGltcGxpY2l0OiBUZW1wbGF0ZVJlZjx2b2lkPjtcbiAgICAgICAgc3RhdHVzOiBzdHJpbmc7XG4gICAgICAgIGluZGV4OiBudW1iZXI7XG4gICAgfT47XG4gICAgcmVhZG9ubHkgbnpJbmRleENoYW5nZTogRXZlbnRFbWl0dGVyPG51bWJlcj47XG4gICAgcHJpdmF0ZSBkZXN0cm95JDtcbiAgICBwcml2YXRlIGluZGV4Q2hhbmdlU3Vic2NyaXB0aW9uO1xuICAgIHNob3dQcm9jZXNzRG90OiBib29sZWFuO1xuICAgIGN1c3RvbVByb2Nlc3NEb3RUZW1wbGF0ZTogVGVtcGxhdGVSZWY8e1xuICAgICAgICAkaW1wbGljaXQ6IFRlbXBsYXRlUmVmPHZvaWQ+O1xuICAgICAgICBzdGF0dXM6IHN0cmluZztcbiAgICAgICAgaW5kZXg6IG51bWJlcjtcbiAgICB9PjtcbiAgICBjbGFzc01hcDogTmdDbGFzc1R5cGU7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkO1xuICAgIHByaXZhdGUgdXBkYXRlQ2hpbGRyZW5TdGVwcztcbiAgICBwcml2YXRlIHNldENsYXNzTWFwO1xufVxuIl19