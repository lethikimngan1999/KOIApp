{"version":3,"file":"ng-zorro-antd-core-addon.js","sources":["ng:/ng-zorro-antd/core/addon/classlist_add.ts","ng:/ng-zorro-antd/core/addon/string_template_outlet.ts","ng:/ng-zorro-antd/core/addon/addon.module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[nzClassListAdd]',\n  exportAs: 'nzClassListAdd'\n})\nexport class NzClassListAddDirective {\n  classList: string[] = [];\n\n  @Input()\n  set nzClassListAdd(list: string[]) {\n    this.classList.forEach(name => {\n      this.renderer.removeClass(this.elementRef.nativeElement, name);\n    });\n    list.forEach(name => {\n      this.renderer.addClass(this.elementRef.nativeElement, name);\n    });\n    this.classList = list;\n  }\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  Directive,\n  EmbeddedViewRef,\n  Input,\n  OnChanges,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\n\n@Directive({\n  selector: '[nzStringTemplateOutlet]',\n  exportAs: 'nzStringTemplateOutlet'\n})\nexport class NzStringTemplateOutletDirective implements OnChanges {\n  private isTemplate: boolean;\n  // tslint:disable-next-line:no-any\n  private inputTemplate: TemplateRef<any> | null = null;\n  private inputViewRef: EmbeddedViewRef<void> | null = null;\n  private defaultViewRef: EmbeddedViewRef<void> | null = null;\n\n  // tslint:disable-next-line:no-any\n  @Input() nzStringTemplateOutletContext: any | null = null;\n\n  @Input()\n  // tslint:disable-next-line:no-any\n  set nzStringTemplateOutlet(value: string | TemplateRef<any>) {\n    if (value instanceof TemplateRef) {\n      this.isTemplate = true;\n      this.inputTemplate = value;\n    } else {\n      this.isTemplate = false;\n    }\n  }\n\n  recreateView(): void {\n    if (!this.isTemplate) {\n      /** use default template when input is string **/\n      if (!this.defaultViewRef) {\n        if (this.defaultTemplate) {\n          this.defaultViewRef = this.viewContainer.createEmbeddedView(\n            this.defaultTemplate,\n            this.nzStringTemplateOutletContext\n          );\n        }\n      }\n    } else {\n      /** use input template when input is templateRef **/\n      if (!this.inputViewRef) {\n        if (this.inputTemplate) {\n          this.inputViewRef = this.viewContainer.createEmbeddedView(\n            this.inputTemplate,\n            this.nzStringTemplateOutletContext\n          );\n        }\n      }\n    }\n  }\n\n  // tslint:disable-next-line:no-any\n  private getType(value: string | TemplateRef<any>): 'template' | 'string' {\n    if (value instanceof TemplateRef) {\n      return 'template';\n    } else {\n      return 'string';\n    }\n  }\n\n  private shouldRecreateView(changes: SimpleChanges): boolean {\n    const { nzStringTemplateOutletContext, nzStringTemplateOutlet } = changes;\n    let shouldOutletRecreate = false;\n    if (nzStringTemplateOutlet) {\n      if (nzStringTemplateOutlet.firstChange) {\n        shouldOutletRecreate = true;\n      } else {\n        const previousOutletType = this.getType(nzStringTemplateOutlet.previousValue);\n        const currentOutletType = this.getType(nzStringTemplateOutlet.currentValue);\n        shouldOutletRecreate = !(previousOutletType === 'string' && currentOutletType === 'string');\n      }\n    }\n    const shouldContextRecreate =\n      nzStringTemplateOutletContext && this.hasContextShapeChanged(nzStringTemplateOutletContext);\n    return shouldContextRecreate || shouldOutletRecreate;\n  }\n\n  private hasContextShapeChanged(ctxChange: SimpleChange): boolean {\n    const prevCtxKeys = Object.keys(ctxChange.previousValue || {});\n    const currCtxKeys = Object.keys(ctxChange.currentValue || {});\n\n    if (prevCtxKeys.length === currCtxKeys.length) {\n      for (const propName of currCtxKeys) {\n        if (prevCtxKeys.indexOf(propName) === -1) {\n          return true;\n        }\n      }\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  // tslint:disable-next-line:no-any\n  private updateExistingContext(ctx: any): void {\n    for (const propName of Object.keys(ctx)) {\n      // tslint:disable-next-line:no-any\n      (this.inputViewRef!.context as any)[propName] = this.nzStringTemplateOutletContext[propName];\n    }\n  }\n\n  constructor(private viewContainer: ViewContainerRef, private defaultTemplate: TemplateRef<void>) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const recreateView = this.shouldRecreateView(changes);\n    if (recreateView) {\n      if (this.viewContainer) {\n        this.viewContainer.clear();\n        this.defaultViewRef = null;\n        this.inputViewRef = null;\n      }\n      this.recreateView();\n    } else {\n      if (this.inputViewRef && this.nzStringTemplateOutletContext) {\n        this.updateExistingContext(this.nzStringTemplateOutletContext);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzClassListAddDirective } from './classlist_add';\nimport { NzStringTemplateOutletDirective } from './string_template_outlet';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [NzStringTemplateOutletDirective, NzClassListAddDirective],\n  declarations: [NzStringTemplateOutletDirective, NzClassListAddDirective]\n})\nexport class NzAddOnModule {}\n"]}