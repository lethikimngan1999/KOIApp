{"version":3,"file":"ng-zorro-antd-modal.js","sources":["ng:/ng-zorro-antd/modal/nz-modal-config.ts","ng:/ng-zorro-antd/modal/nz-modal-control.service.module.ts","ng:/ng-zorro-antd/modal/nz-modal-control.service.ts","ng:/ng-zorro-antd/modal/nz-modal-ref.class.ts","ng:/ng-zorro-antd/modal/nz-modal-footer.directive.ts","ng:/ng-zorro-antd/modal/nz-modal.component.ts","ng:/ng-zorro-antd/modal/nz-modal.service.module.ts","ng:/ng-zorro-antd/modal/nz-modal.module.ts","ng:/ng-zorro-antd/modal/nz-modal.service.ts","ng:/ng-zorro-antd/modal/nz-modal.type.ts"],"names":["tslib_1.__decorate"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface NzModalConfig {\n  nzMask?: boolean;\n  nzMaskClosable?: boolean;\n}\nexport const NZ_MODAL_CONFIG = new InjectionToken<NzModalConfig>('NZ_MODAL_CONFIG');\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\n@NgModule()\nexport class NzModalControlServiceModule {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { NzModalControlServiceModule } from './nz-modal-control.service.module';\nimport { NzModalRef } from './nz-modal-ref.class';\n\ninterface RegisteredMeta {\n  modalRef: NzModalRef;\n  afterOpenSubscription: Subscription;\n  afterCloseSubscription: Subscription;\n}\n\n@Injectable({\n  providedIn: NzModalControlServiceModule\n})\nexport class NzModalControlService {\n  // Track singleton afterAllClose through over the injection tree\n  get afterAllClose(): Subject<void> {\n    return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose!;\n  }\n\n  // Track singleton openModals array through over the injection tree\n  get openModals(): NzModalRef[] {\n    return this.parentService ? this.parentService.openModals : this.rootOpenModals!;\n  }\n\n  private rootOpenModals: NzModalRef[] | null = this.parentService ? null : [];\n  private rootAfterAllClose: Subject<void> | null = this.parentService ? null : new Subject<void>();\n  private rootRegisteredMetaMap: Map<NzModalRef, RegisteredMeta> | null = this.parentService ? null : new Map();\n\n  private get registeredMetaMap(): Map<NzModalRef, RegisteredMeta> {\n    // Registered modal for later usage\n    return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap!;\n  }\n\n  constructor(@Optional() @SkipSelf() private parentService: NzModalControlService) {}\n\n  // Register a modal to listen its open/close\n  registerModal(modalRef: NzModalRef): void {\n    if (!this.hasRegistered(modalRef)) {\n      const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n      const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n      this.registeredMetaMap.set(modalRef, { modalRef, afterOpenSubscription, afterCloseSubscription });\n    }\n  }\n\n  // deregister modals\n  deregisterModal(modalRef: NzModalRef): void {\n    const registeredMeta = this.registeredMetaMap.get(modalRef);\n    if (registeredMeta) {\n      // Remove this modal if it is still in the opened modal list (NOTE: it may trigger \"afterAllClose\")\n      this.removeOpenModal(registeredMeta.modalRef);\n      registeredMeta.afterOpenSubscription.unsubscribe();\n      registeredMeta.afterCloseSubscription.unsubscribe();\n      this.registeredMetaMap.delete(modalRef);\n    }\n  }\n\n  hasRegistered(modalRef: NzModalRef): boolean {\n    return this.registeredMetaMap.has(modalRef);\n  }\n\n  // Close all registered opened modals\n  closeAll(): void {\n    let i = this.openModals.length;\n\n    while (i--) {\n      this.openModals[i].close();\n    }\n  }\n\n  private removeOpenModal(modalRef: NzModalRef): void {\n    const index = this.openModals.indexOf(modalRef);\n\n    if (index > -1) {\n      this.openModals.splice(index, 1);\n\n      if (!this.openModals.length) {\n        this.afterAllClose.next();\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Observable } from 'rxjs';\n\nimport { NzModalComponent } from './nz-modal.component';\n\n/**\n * API class that public to users to handle the modal instance.\n * NzModalRef is aim to avoid accessing to the modal instance directly by users.\n */\n// tslint:disable-next-line:no-any\nexport abstract class NzModalRef<T = any, R = any> {\n  abstract afterOpen: Observable<void>;\n  abstract afterClose: Observable<R>;\n\n  abstract open(): void;\n  abstract close(result?: R): void;\n  abstract destroy(result?: R): void;\n\n  /**\n   * Trigger the nzOnOk/nzOnCancel by manual\n   */\n  abstract triggerOk(): void;\n  abstract triggerCancel(): void;\n\n  // /**\n  //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n  //  * Note: this method may return undefined if the Component has not ready yet. (it only available after Modal's ngOnInit)\n  //  */\n  // abstract getContentComponentRef(): ComponentRef<{}>;\n\n  /**\n   * Return the component instance of nzContent when specify nzContent as a Component\n   * Note: this method may return undefined if the Component has not ready yet. (it only available after Modal's ngOnInit)\n   */\n  abstract getContentComponent(): T;\n\n  /**\n   * Get the dom element of this Modal\n   */\n  abstract getElement(): HTMLElement;\n\n  /**\n   * Get the instance of the Modal itself\n   */\n  abstract getInstance(): NzModalComponent;\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Optional, TemplateRef } from '@angular/core';\nimport { NzModalRef } from './nz-modal-ref.class';\n\n@Directive({\n  selector: '[nzModalFooter]',\n  exportAs: 'nzModalFooter'\n})\nexport class NzModalFooterDirective {\n  constructor(@Optional() private nzModalRef: NzModalRef, public templateRef: TemplateRef<{}>) {\n    if (this.nzModalRef) {\n      this.nzModalRef.getInstance().setFooterWithTemplate(this.templateRef);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusTrap, FocusTrapFactory } from '@angular/cdk/a11y';\n\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { BlockScrollStrategy, Overlay, OverlayKeyboardDispatcher, OverlayRef } from '@angular/cdk/overlay';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  Type,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { fromEvent, Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport {\n  getElementOffset,\n  isPromise,\n  warnDeprecation,\n  InputBoolean,\n  NzConfigService,\n  WithConfig\n} from 'ng-zorro-antd/core';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\n\nimport { NzModalConfig, NZ_MODAL_CONFIG } from './nz-modal-config';\nimport { NzModalControlService } from './nz-modal-control.service';\nimport { NzModalFooterDirective } from './nz-modal-footer.directive';\nimport { NzModalRef } from './nz-modal-ref.class';\nimport { ModalButtonOptions, ModalOptions, ModalType, OnClickCallback } from './nz-modal.type';\n\nexport const MODAL_ANIMATE_DURATION = 200; // Duration when perform animations (ms)\nexport const WRAP_CLASS_NAME = 'ant-modal-wrap';\n\ntype AnimationState = 'enter' | 'leave' | null;\n\nconst NZ_CONFIG_COMPONENT_NAME = 'modal';\n\n@Component({\n  selector: 'nz-modal',\n  exportAs: 'nzModal',\n  templateUrl: './nz-modal.component.html',\n  // Using OnPush for modal caused footer can not to detect changes. we can fix it when 8.x.\n  changeDetection: ChangeDetectionStrategy.Default\n})\n\n// tslint:disable-next-line:no-any\nexport class NzModalComponent<T = any, R = any> extends NzModalRef<T, R>\n  implements OnInit, OnChanges, AfterViewInit, OnDestroy, ModalOptions<T> {\n  @Input() @InputBoolean() nzVisible: boolean = false;\n  @Input() @InputBoolean() nzClosable: boolean = true;\n  @Input() @InputBoolean() nzOkLoading: boolean = false;\n  @Input() @InputBoolean() nzOkDisabled: boolean = false;\n  @Input() @InputBoolean() nzCancelDisabled: boolean = false;\n  @Input() @InputBoolean() nzCancelLoading: boolean = false;\n  @Input() @InputBoolean() nzKeyboard: boolean = true;\n  @Input() @InputBoolean() nzNoAnimation = false;\n\n  // TODO(hsuanxyz): add default value once old API is deprecated.\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() nzMask: boolean;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() nzMaskClosable: boolean;\n\n  @Input() nzContent: string | TemplateRef<{}> | Type<T>; // [STATIC] If not specified, will use <ng-content>\n  @Input() nzComponentParams: T; // [STATIC] ONLY avaliable when nzContent is a component\n  @Input() nzFooter: string | TemplateRef<{}> | Array<ModalButtonOptions<T>> | null; // [STATIC] Default Modal ONLY\n  @Input() nzGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create(); // [STATIC]\n  @Input() nzZIndex: number = 1000;\n  @Input() nzWidth: number | string = 520;\n  @Input() nzWrapClassName: string;\n  @Input() nzClassName: string;\n  @Input() nzStyle: object;\n  @Input() nzTitle: string | TemplateRef<{}>;\n  @Input() nzCloseIcon: string | TemplateRef<void> = 'close';\n  @Input() nzMaskStyle: object;\n  @Input() nzBodyStyle: object;\n  @Input() nzOkText: string | null;\n  @Input() nzCancelText: string | null;\n  @Input() nzOkType: string = 'primary';\n  @Input() nzIconType: string = 'question-circle'; // Confirm Modal ONLY\n  @Input() nzModalType: ModalType = 'default';\n\n  @Input() @Output() readonly nzOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n  @Input() @Output() readonly nzOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n\n  @Output() readonly nzAfterOpen = new EventEmitter<void>(); // Trigger when modal open(visible) after animations\n  @Output() readonly nzAfterClose = new EventEmitter<R>(); // Trigger when modal leave-animation over\n  @Output() readonly nzVisibleChange = new EventEmitter<boolean>();\n\n  @ViewChild('modalContainer', { static: true }) modalContainer: ElementRef;\n  @ViewChild('bodyContainer', { static: false, read: ViewContainerRef }) bodyContainer: ViewContainerRef;\n  @ViewChild('autoFocusButtonOk', { static: false, read: ElementRef }) autoFocusButtonOk: ElementRef; // Only aim to focus the ok button that needs to be auto focused\n\n  @ContentChild(NzModalFooterDirective, { static: false })\n  set modalFooter(value: NzModalFooterDirective) {\n    if (value && value.templateRef) {\n      this.setFooterWithTemplate(value.templateRef);\n    }\n  }\n\n  get afterOpen(): Observable<void> {\n    // Observable alias for nzAfterOpen\n    return this.nzAfterOpen.asObservable();\n  }\n\n  get afterClose(): Observable<R> {\n    // Observable alias for nzAfterClose\n    return this.nzAfterClose.asObservable();\n  }\n\n  get cancelText(): string {\n    return this.nzCancelText || this.locale.cancelText!;\n  }\n\n  get okText(): string {\n    return this.nzOkText || this.locale.okText!;\n  }\n\n  get hidden(): boolean {\n    return !this.nzVisible && !this.animationState;\n  } // Indicate whether this dialog should hidden\n\n  /**\n   * @description\n   * The calculated highest weight of mask value\n   *\n   * Weight of different mask input:\n   * component default value < global configuration < component input value\n   */\n  get mask(): boolean {\n    if (this.nzMask != null) {\n      return this.nzMask;\n    } else if (this.nzModalGlobalConfig && this.nzModalGlobalConfig.nzMask != null) {\n      return this.nzModalGlobalConfig.nzMask;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * @description\n   * The calculated highest weight of maskClosable value\n   *\n   * Weight of different maskClosable input:\n   * component default value < global configuration < component input value\n   */\n  get maskClosable(): boolean {\n    if (this.nzMaskClosable != null) {\n      return this.nzMaskClosable;\n    } else if (this.nzModalGlobalConfig && this.nzModalGlobalConfig.nzMaskClosable != null) {\n      return this.nzModalGlobalConfig.nzMaskClosable;\n    } else {\n      return true;\n    }\n  }\n\n  locale: { okText?: string; cancelText?: string } = {};\n  maskAnimationClassMap: object | null;\n  modalAnimationClassMap: object | null;\n  transformOrigin = '0px 0px 0px'; // The origin point that animation based on\n\n  private contentComponentRef: ComponentRef<T>; // Handle the reference when using nzContent as Component\n  private animationState: AnimationState; // Current animation state\n  private container: HTMLElement | OverlayRef;\n  private unsubscribe$ = new Subject<void>();\n  private previouslyFocusedElement: HTMLElement;\n  private focusTrap: FocusTrap;\n  private scrollStrategy: BlockScrollStrategy;\n  private overlayRef: OverlayRef;\n  private dialogMouseDown = false;\n  private timeoutId: number;\n\n  [key: string]: any; // tslint:disable-line:no-any\n\n  constructor(\n    public nzConfigService: NzConfigService,\n    private overlay: Overlay,\n    private overlayKeyboardDispatcher: OverlayKeyboardDispatcher,\n    private i18n: NzI18nService,\n    private cfr: ComponentFactoryResolver,\n    private elementRef: ElementRef,\n    private viewContainer: ViewContainerRef,\n    private modalControl: NzModalControlService,\n    private focusTrapFactory: FocusTrapFactory,\n    private cdr: ChangeDetectorRef,\n    @Optional() @Inject(NZ_MODAL_CONFIG) private nzModalGlobalConfig: NzModalConfig,\n    @Inject(DOCUMENT) private document: any // tslint:disable-line:no-any\n  ) {\n    super();\n    this.scrollStrategy = this.overlay.scrollStrategies.block();\n\n    if (this.nzModalGlobalConfig) {\n      warnDeprecation(\n        '`NZ_MODAL_CONFIG` has been deprecated and will be removed in 9.0.0. Please use global config instead.'\n      );\n    }\n  }\n\n  ngOnInit(): void {\n    this.i18n.localeChange.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Modal');\n    });\n\n    if (this.isComponent(this.nzContent)) {\n      this.createDynamicComponent(this.nzContent as Type<T>); // Create component along without View\n    }\n\n    if (this.isModalButtons(this.nzFooter)) {\n      // Setup default button options\n      this.nzFooter = this.formatModalButtons(this.nzFooter as Array<ModalButtonOptions<T>>);\n    }\n\n    // Place the modal dom to elsewhere\n    this.container = typeof this.nzGetContainer === 'function' ? this.nzGetContainer() : this.nzGetContainer;\n    if (this.container instanceof HTMLElement) {\n      this.container.appendChild(this.elementRef.nativeElement);\n      fromEvent<KeyboardEvent>(this.document.body, 'keydown')\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(e => this.keydownListener(e));\n    } else if (this.container instanceof OverlayRef) {\n      // NOTE: only attach the dom to overlay, the view container is not changed actually\n      this.setOverlayRef(this.container);\n      this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n    }\n\n    if (this.overlayRef) {\n      this.overlayRef\n        .keydownEvents()\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(e => this.keydownListener(e));\n    }\n\n    // Register modal when afterOpen/afterClose is stable\n    this.modalControl.registerModal(this);\n  }\n\n  // [NOTE] NOT available when using by service!\n  // Because ngOnChanges never be called when using by service,\n  // here we can't support \"nzContent\"(Component) etc. as inputs that initialized dynamically.\n  // BUT: User also can change \"nzContent\" dynamically to trigger UI changes (provided you don't use \bComponent that needs initializations)\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzVisible) {\n      this.handleVisibleStateChange(this.nzVisible, !changes.nzVisible.firstChange); // Do not trigger animation while initializing\n    }\n  }\n\n  ngAfterViewInit(): void {\n    // If using Component, it is the time to attach View while bodyContainer is ready\n    if (this.contentComponentRef) {\n      this.bodyContainer.insert(this.contentComponentRef.hostView);\n    }\n\n    if (this.autoFocusButtonOk) {\n      (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n    }\n  }\n\n  ngOnDestroy(): void {\n    // Close self before destructing\n    this.changeVisibleFromInside(false).then(() => {\n      this.modalControl.deregisterModal(this);\n\n      if (this.container instanceof OverlayRef) {\n        this.container.dispose();\n      }\n\n      this.unsubscribe$.next();\n      this.unsubscribe$.complete();\n    });\n    clearTimeout(this.timeoutId);\n  }\n\n  setFooterWithTemplate(templateRef: TemplateRef<{}>): void {\n    this.nzFooter = templateRef;\n    this.cdr.markForCheck();\n  }\n\n  setOverlayRef(overlayRef: OverlayRef): void {\n    this.overlayRef = overlayRef;\n  }\n\n  keydownListener(event: KeyboardEvent): void {\n    if (event.keyCode === ESCAPE && this.nzKeyboard) {\n      this.onClickOkCancel('cancel');\n    }\n  }\n\n  open(): void {\n    this.changeVisibleFromInside(true);\n  }\n\n  close(result?: R): void {\n    this.changeVisibleFromInside(false, result);\n  }\n\n  destroy(result?: R): void {\n    // Destroy equals Close\n    this.close(result);\n  }\n\n  triggerOk(): void {\n    this.onClickOkCancel('ok');\n  }\n\n  triggerCancel(): void {\n    this.onClickOkCancel('cancel');\n  }\n\n  getInstance(): NzModalComponent {\n    return this;\n  }\n\n  getContentComponentRef(): ComponentRef<T> {\n    return this.contentComponentRef;\n  }\n\n  getContentComponent(): T {\n    return this.contentComponentRef && this.contentComponentRef.instance;\n  }\n\n  getElement(): HTMLElement {\n    return this.elementRef && this.elementRef.nativeElement;\n  }\n\n  onMaskDialogDown(): void {\n    this.dialogMouseDown = true;\n  }\n\n  onDialogUp(): void {\n    if (this.dialogMouseDown) {\n      this.timeoutId = setTimeout(() => {\n        this.dialogMouseDown = false;\n      }, 0);\n    }\n  }\n\n  onClickMask($event: MouseEvent): void {\n    if (\n      this.mask &&\n      this.maskClosable &&\n      ($event.target as HTMLElement).classList.contains(WRAP_CLASS_NAME) &&\n      this.nzVisible &&\n      !this.dialogMouseDown\n    ) {\n      this.onClickOkCancel('cancel');\n    }\n  }\n\n  isModalType(type: ModalType): boolean {\n    return this.nzModalType === type;\n  }\n\n  public onClickCloseBtn(): void {\n    if (this.nzVisible) {\n      this.onClickOkCancel('cancel');\n    }\n  }\n\n  public onClickOkCancel(type: 'ok' | 'cancel'): void {\n    const trigger = { ok: this.nzOnOk, cancel: this.nzOnCancel }[type];\n    const loadingKey = { ok: 'nzOkLoading', cancel: 'nzCancelLoading' }[type];\n    if (trigger instanceof EventEmitter) {\n      trigger.emit(this.getContentComponent());\n    } else if (typeof trigger === 'function') {\n      const result = trigger(this.getContentComponent());\n      const caseClose = (doClose: boolean | void | {}) => doClose !== false && this.close(doClose as R); // Users can return \"false\" to prevent closing by default\n      if (isPromise(result)) {\n        this[loadingKey] = true;\n        const handleThen = (doClose: boolean | void | {}) => {\n          this[loadingKey] = false;\n          caseClose(doClose);\n        };\n        (result as Promise<void>).then(handleThen).catch(handleThen);\n      } else {\n        caseClose(result);\n      }\n    }\n  }\n\n  public isNonEmptyString(value: {}): boolean {\n    return typeof value === 'string' && value !== '';\n  }\n\n  public isTemplateRef(value: {}): boolean {\n    return value instanceof TemplateRef;\n  }\n\n  public isComponent(value: {}): boolean {\n    return value instanceof Type;\n  }\n\n  public isModalButtons(value: string | TemplateRef<{}> | Array<ModalButtonOptions<T>> | null): boolean {\n    return Array.isArray(value) && value.length > 0;\n  }\n\n  // Do rest things when visible state changed\n  private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<void> {\n    if (visible) {\n      // Hide scrollbar at the first time when shown up\n      this.scrollStrategy.enable();\n      this.savePreviouslyFocusedElement();\n      this.trapFocus();\n      if (this.container instanceof OverlayRef) {\n        this.overlayKeyboardDispatcher.add(this.overlayRef);\n      }\n    } else {\n      if (this.container instanceof OverlayRef) {\n        this.overlayKeyboardDispatcher.remove(this.overlayRef);\n      }\n    }\n\n    return Promise.resolve(animation ? this.animateTo(visible) : undefined).then(() => {\n      // Emit open/close event after animations over\n      if (visible) {\n        this.nzAfterOpen.emit();\n      } else {\n        this.nzAfterClose.emit(closeResult);\n        this.restoreFocus();\n        this.scrollStrategy.disable();\n        // Mark the for check so it can react if the view container is using OnPush change detection.\n        this.cdr.markForCheck();\n      }\n    });\n  }\n\n  // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n  public getButtonCallableProp(options: ModalButtonOptions<T>, prop: string): {} {\n    const value = options[prop];\n    const args: T[] = [];\n    if (this.contentComponentRef) {\n      args.push(this.contentComponentRef.instance);\n    }\n    return typeof value === 'function' ? value.apply(options, args) : value;\n  }\n\n  // On nzFooter's modal button click\n  public onButtonClick(button: ModalButtonOptions<T>): void {\n    const result = this.getButtonCallableProp(button, 'onClick'); // Call onClick directly\n    if (isPromise(result)) {\n      button.loading = true;\n      (result as Promise<{}>).then(() => (button.loading = false)).catch(() => (button.loading = false));\n    }\n  }\n\n  // Change nzVisible from inside\n  private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n    if (this.nzVisible !== visible) {\n      // Change nzVisible value immediately\n      this.nzVisible = visible;\n      this.nzVisibleChange.emit(visible);\n      return this.handleVisibleStateChange(visible, true, closeResult);\n    }\n    return Promise.resolve();\n  }\n\n  private changeAnimationState(state: AnimationState): void {\n    this.animationState = state;\n    if (state) {\n      this.maskAnimationClassMap = {\n        [`fade-${state}`]: true,\n        [`fade-${state}-active`]: true\n      };\n      this.modalAnimationClassMap = {\n        [`zoom-${state}`]: true,\n        [`zoom-${state}-active`]: true\n      };\n    } else {\n      this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n    }\n  }\n\n  private animateTo(isVisible: boolean): Promise<void> {\n    if (isVisible) {\n      // Figure out the lastest click position when shows up\n      setTimeout(() => this.updateTransformOrigin()); // [NOTE] Using timeout due to the document.click event is fired later than visible change, so if not postponed to next event-loop, we can't get the lastest click position\n    }\n\n    this.changeAnimationState(isVisible ? 'enter' : 'leave');\n    return new Promise(resolve =>\n      setTimeout(\n        () => {\n          // Return when animation is over\n          this.changeAnimationState(null);\n          resolve();\n        },\n        this.nzNoAnimation ? 0 : MODAL_ANIMATE_DURATION\n      )\n    );\n  }\n\n  private formatModalButtons(buttons: Array<ModalButtonOptions<T>>): Array<ModalButtonOptions<T>> {\n    return buttons.map(button => {\n      return {\n        ...{\n          type: 'default',\n          size: 'default',\n          autoLoading: true,\n          show: true,\n          loading: false,\n          disabled: false\n        },\n        ...button\n      };\n    });\n  }\n\n  /**\n   * Create a component dynamically but not attach to any View (this action will be executed when bodyContainer is ready)\n   * @param component Component class\n   */\n  private createDynamicComponent(component: Type<T>): void {\n    const factory = this.cfr.resolveComponentFactory(component);\n    const childInjector = Injector.create({\n      providers: [{ provide: NzModalRef, useValue: this }],\n      parent: this.viewContainer.parentInjector\n    });\n    this.contentComponentRef = factory.create(childInjector);\n    if (this.nzComponentParams) {\n      Object.assign(this.contentComponentRef.instance, this.nzComponentParams);\n    }\n    // Do the first change detection immediately (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n    this.contentComponentRef.changeDetectorRef.detectChanges();\n  }\n\n  // Update transform-origin to the last click position on document\n  private updateTransformOrigin(): void {\n    const modalElement = this.modalContainer.nativeElement as HTMLElement;\n    if (this.previouslyFocusedElement) {\n      const previouslyDOMRect = this.previouslyFocusedElement.getBoundingClientRect();\n      const lastPosition = getElementOffset(this.previouslyFocusedElement);\n      const x = lastPosition.left + previouslyDOMRect.width / 2;\n      const y = lastPosition.top + previouslyDOMRect.height / 2;\n      this.transformOrigin = `${x - modalElement.offsetLeft}px ${y - modalElement.offsetTop}px 0px`;\n    }\n  }\n\n  private savePreviouslyFocusedElement(): void {\n    if (this.document) {\n      this.previouslyFocusedElement = this.document.activeElement as HTMLElement;\n    }\n  }\n\n  private trapFocus(): void {\n    if (!this.focusTrap) {\n      this.focusTrap = this.focusTrapFactory.create(this.elementRef.nativeElement);\n    }\n    this.focusTrap.focusInitialElementWhenReady();\n  }\n\n  private restoreFocus(): void {\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (this.previouslyFocusedElement && typeof this.previouslyFocusedElement.focus === 'function') {\n      this.previouslyFocusedElement.focus();\n    }\n    if (this.focusTrap) {\n      this.focusTrap.destroy();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\n@NgModule()\nexport class NzModalServiceModule {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzAddOnModule, NzNoAnimationModule, NzPipesModule } from 'ng-zorro-antd/core';\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzModalControlServiceModule } from './nz-modal-control.service.module';\nimport { NzModalFooterDirective } from './nz-modal-footer.directive';\nimport { NzModalComponent } from './nz-modal.component';\nimport { NzModalServiceModule } from './nz-modal.service.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    NzAddOnModule,\n    NzI18nModule,\n    NzButtonModule,\n    NzIconModule,\n    NzPipesModule,\n    NzNoAnimationModule,\n    NzModalServiceModule,\n    NzModalControlServiceModule\n  ],\n  exports: [NzModalComponent, NzModalFooterDirective],\n  declarations: [NzModalComponent, NzModalFooterDirective],\n  entryComponents: [NzModalComponent]\n})\nexport class NzModalModule {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ComponentRef, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { warn, IndexableObject } from 'ng-zorro-antd/core';\n\nimport { NzModalControlService } from './nz-modal-control.service';\nimport { NzModalRef } from './nz-modal-ref.class';\nimport { NzModalComponent } from './nz-modal.component';\nimport { NzModalServiceModule } from './nz-modal.service.module';\nimport { ConfirmType, ModalOptions, ModalOptionsForService } from './nz-modal.type';\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n  private modalRef: ComponentRef<NzModalComponent> | null; // Modal ComponentRef, \"null\" means it has been destroyed\n  private overlayRef: OverlayRef;\n\n  constructor(private overlay: Overlay, options: ModalOptionsForService = {}) {\n    this.createModal();\n\n    if (!('nzGetContainer' in options)) {\n      // As we use CDK to create modal in service by force, there is no need to use nzGetContainer\n      options.nzGetContainer = undefined; // Override nzGetContainer's default value to prevent creating another overlay\n    }\n\n    this.changeProps(options);\n    this.modalRef!.instance.setOverlayRef(this.overlayRef);\n    this.modalRef!.instance.open();\n    this.modalRef!.instance.nzAfterClose.subscribe(() => this.destroyModal()); // [NOTE] By default, close equals destroy when using as Service\n  }\n\n  getInstance(): NzModalComponent | null {\n    return this.modalRef && this.modalRef.instance;\n  }\n\n  destroyModal(): void {\n    if (this.modalRef) {\n      this.overlayRef.dispose();\n      this.modalRef = null;\n    }\n  }\n\n  private changeProps(options: ModalOptions): void {\n    if (this.modalRef) {\n      Object.assign(this.modalRef.instance, options); // DANGER: here not limit user's inputs at runtime\n    }\n  }\n\n  // Create component to ApplicationRef\n  private createModal(): void {\n    this.overlayRef = this.overlay.create();\n    this.modalRef = this.overlayRef.attach(new ComponentPortal(NzModalComponent));\n  }\n}\n\n@Injectable({\n  providedIn: NzModalServiceModule\n})\nexport class NzModalService {\n  // Track of the current close modals (we assume invisible is close this time)\n  get openModals(): NzModalRef[] {\n    return this.modalControl.openModals;\n  }\n\n  get afterAllClose(): Observable<void> {\n    return this.modalControl.afterAllClose.asObservable();\n  }\n\n  constructor(private overlay: Overlay, private modalControl: NzModalControlService) {}\n\n  // Closes all of the currently-open dialogs\n  closeAll(): void {\n    this.modalControl.closeAll();\n  }\n\n  create<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\n    if (typeof options.nzOnCancel !== 'function') {\n      options.nzOnCancel = () => {}; // Leave a empty function to close this modal by default\n    }\n\n    // NOTE: use NzModalComponent as the NzModalRef by now, we may need archive the real NzModalRef object in the future\n    const modalRef = new ModalBuilderForService(this.overlay, options).getInstance()!;\n\n    return modalRef;\n  }\n\n  confirm<T>(options: ModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): NzModalRef<T> {\n    if ('nzFooter' in options) {\n      warn(`The Confirm-Modal doesn't support \"nzFooter\", this property will be ignored.`);\n    }\n    if (!('nzWidth' in options)) {\n      options.nzWidth = 416;\n    }\n    if (!('nzMaskClosable' in options)) {\n      options.nzMaskClosable = false;\n    }\n    if (typeof options.nzOnOk !== 'function') {\n      // NOTE: only support function currently by calling confirm()\n      options.nzOnOk = () => {}; // Leave a empty function to close this modal by default\n    }\n\n    options.nzModalType = 'confirm';\n    options.nzClassName = `ant-modal-confirm ant-modal-confirm-${confirmType} ${options.nzClassName || ''}`;\n    return this.create(options);\n  }\n\n  info<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\n    return this.simpleConfirm(options, 'info');\n  }\n\n  success<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\n    return this.simpleConfirm(options, 'success');\n  }\n\n  error<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\n    return this.simpleConfirm(options, 'error');\n  }\n\n  warning<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\n    return this.simpleConfirm(options, 'warning');\n  }\n\n  private simpleConfirm<T>(options: ModalOptionsForService<T> = {}, confirmType: ConfirmType): NzModalRef<T> {\n    const iconMap: IndexableObject = {\n      info: 'info-circle',\n      success: 'check-circle',\n      error: 'close-circle',\n      warning: 'exclamation-circle'\n    };\n    if (!('nzIconType' in options)) {\n      options.nzIconType = iconMap[confirmType];\n    }\n    if (!('nzCancelText' in options)) {\n      // Remove the Cancel button if the user not specify a Cancel button\n      options.nzCancelText = null;\n    }\n    return this.confirm(options, confirmType);\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayRef } from '@angular/cdk/overlay';\nimport { EventEmitter, TemplateRef, Type } from '@angular/core';\n\nexport type OnClickCallback<T> = (instance: T) => (false | void | {}) | Promise<false | void | {}>;\n\nexport type ModalType = 'default' | 'confirm'; // Different modal styles we have supported\n\nexport type ConfirmType = 'confirm' | 'info' | 'success' | 'error' | 'warning'; // Subtypes of Confirm Modal\n\n// Public options for using by service\n// tslint:disable-next-line:no-any\nexport interface ModalOptions<T = any, R = any> {\n  nzModalType?: ModalType;\n  nzVisible?: boolean;\n  nzZIndex?: number;\n  nzWidth?: number | string;\n  nzWrapClassName?: string;\n  nzClassName?: string;\n  nzStyle?: object;\n  nzIconType?: string; // Confirm Modal ONLY\n  nzTitle?: string | TemplateRef<{}>;\n  nzCloseIcon?: string | TemplateRef<void>;\n  nzContent?: string | TemplateRef<{}> | Type<T>;\n  nzComponentParams?: Partial<T>;\n  nzClosable?: boolean;\n  nzKeyboard?: boolean;\n  nzMask?: boolean;\n  nzMaskClosable?: boolean;\n  nzMaskStyle?: object;\n  nzBodyStyle?: object;\n  nzFooter?: string | TemplateRef<{}> | Array<ModalButtonOptions<T>> | null; // Default Modal ONLY\n  nzGetContainer?: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef); // STATIC\n  nzAfterOpen?: EventEmitter<void>;\n  nzAfterClose?: EventEmitter<R>;\n\n  // --- Predefined OK & Cancel buttons\n  nzOkText?: string | null;\n  nzOkType?: string;\n  nzOkLoading?: boolean;\n  nzOkDisabled?: boolean;\n  nzCancelDisabled?: boolean;\n  nzOnOk?: EventEmitter<T> | OnClickCallback<T>; // Mixed using ng's Input/Output (Should care of \"this\" when using OnClickCallback)\n  nzCancelText?: string | null;\n  nzCancelLoading?: boolean;\n  nzNoAnimation?: boolean;\n  nzOnCancel?: EventEmitter<T> | OnClickCallback<T>; // Mixed using ng's Input/Output (Should care of \"this\" when using OnClickCallback)\n}\n\n// tslint:disable-next-line:no-any\nexport interface ModalOptionsForService<T = any> extends ModalOptions<T> {\n  // Limitations for using by service\n  nzOnOk?: OnClickCallback<T>;\n  nzOnCancel?: OnClickCallback<T>;\n}\n\n// tslint:disable-next-line:no-any\nexport interface ModalButtonOptions<T = any> {\n  label: string;\n  type?: string;\n  shape?: string;\n  ghost?: boolean;\n  size?: string;\n  autoLoading?: boolean; // Default: true, indicate whether show loading automatically while onClick returned a Promise\n\n  // [NOTE] \"componentInstance\" will refer to the component's instance when using Component\n  show?: boolean | ((this: ModalButtonOptions<T>, contentComponentInstance?: T) => boolean);\n  loading?: boolean | ((this: ModalButtonOptions<T>, contentComponentInstance?: T) => boolean); // This prop CAN'T use with autoLoading=true\n  disabled?: boolean | ((this: ModalButtonOptions<T>, contentComponentInstance?: T) => boolean);\n  onClick?(this: ModalButtonOptions<T>, contentComponentInstance?: T): (void | {}) | Promise<void | {}>;\n\n  // tslint:disable-next-line:no-any\n  [key: string]: any;\n}\n"]}