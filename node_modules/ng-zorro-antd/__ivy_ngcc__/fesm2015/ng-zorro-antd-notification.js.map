{"version":3,"file":"ng-zorro-antd-notification.js","sources":["ng:/ng-zorro-antd/notification/nz-notification-config.ts","ng:/ng-zorro-antd/notification/nz-notification-container.component.ts","ng:/ng-zorro-antd/notification/nz-notification.component.ts","ng:/ng-zorro-antd/notification/nz-notification.service.module.ts","ng:/ng-zorro-antd/notification/nz-notification.module.ts","ng:/ng-zorro-antd/notification/nz-notification.definitions.ts","ng:/ng-zorro-antd/notification/nz-notification.service.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { InjectionToken } from '@angular/core';\n\nimport { NzMessageConfigLegacy } from 'ng-zorro-antd/message';\n\n/**\n * @deprecated This interface would has been moved to `ng-zorro-antd/core`. Please migrate to that.\n */\nexport interface NzNotificationConfigLegacy extends NzMessageConfigLegacy {\n  nzTop?: string | number;\n  nzBottom?: string | number;\n  nzPlacement?: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight' | string;\n}\n\nexport const NZ_NOTIFICATION_DEFAULT_CONFIG = new InjectionToken<NzNotificationConfigLegacy>(\n  'NZ_NOTIFICATION_DEFAULT_CONFIG'\n);\n\nexport const NZ_NOTIFICATION_CONFIG = new InjectionToken<NzNotificationConfigLegacy>('NZ_NOTIFICATION_CONFIG');\n\nexport const NZ_NOTIFICATION_DEFAULT_CONFIG_PROVIDER = {\n  provide: NZ_NOTIFICATION_DEFAULT_CONFIG,\n  useValue: {\n    nzTop: '24px',\n    nzBottom: '24px',\n    nzPlacement: 'topRight',\n    nzDuration: 4500,\n    nzMaxStack: 7,\n    nzPauseOnHover: true,\n    nzAnimate: true\n  }\n};\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  Optional,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { toCssPixel, warnDeprecation, NzConfigService } from 'ng-zorro-antd/core';\nimport { NzMessageContainerComponent } from 'ng-zorro-antd/message';\n\nimport {\n  NzNotificationConfigLegacy,\n  NZ_NOTIFICATION_CONFIG,\n  NZ_NOTIFICATION_DEFAULT_CONFIG\n} from './nz-notification-config';\nimport { NzNotificationDataFilled, NzNotificationDataOptions } from './nz-notification.definitions';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'notification';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-notification-container',\n  exportAs: 'nzNotificationContainer',\n  preserveWhitespaces: false,\n  templateUrl: './nz-notification-container.component.html'\n})\nexport class NzNotificationContainerComponent extends NzMessageContainerComponent {\n  config: Required<NzNotificationConfigLegacy>;\n  bottom: string | null;\n\n  /**\n   * @override\n   */\n  messages: Array<Required<NzNotificationDataFilled>> = [];\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    nzConfigService: NzConfigService,\n    @Optional() @Inject(NZ_NOTIFICATION_DEFAULT_CONFIG) defaultConfig: NzNotificationConfigLegacy,\n    @Optional() @Inject(NZ_NOTIFICATION_CONFIG) config: NzNotificationConfigLegacy\n  ) {\n    super(cdr, nzConfigService, defaultConfig, config);\n    if (!!config) {\n      warnDeprecation(\n        `Injection token 'NZ_NOTIFICATION_CONFIG' is deprecated and will be removed in 9.0.0. Please use 'NzConfigService' instead.`\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  setConfig(config?: NzNotificationConfigLegacy): void {\n    const newConfig = (this.config = {\n      ...this.config,\n      ...config,\n      ...this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME)\n    });\n    const placement = this.config.nzPlacement;\n\n    this.top = placement === 'topLeft' || placement === 'topRight' ? toCssPixel(newConfig.nzTop) : null;\n    this.bottom = placement === 'bottomLeft' || placement === 'bottomRight' ? toCssPixel(newConfig.nzBottom) : null;\n\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * Create a new notification.\n   * If there's a notification whose `nzKey` is same with `nzKey` in `NzNotificationDataFilled`,\n   * replace its content instead of create a new one.\n   * @override\n   * @param notification\n   */\n  createMessage(notification: NzNotificationDataFilled): void {\n    notification.options = this._mergeMessageOptions(notification.options);\n    notification.onClose = new Subject<boolean>();\n    const key = notification.options.nzKey;\n    const notificationWithSameKey = this.messages.find(\n      msg => msg.options.nzKey === (notification.options as Required<NzNotificationDataOptions>).nzKey\n    );\n\n    if (key && notificationWithSameKey) {\n      this.replaceNotification(notificationWithSameKey, notification);\n    } else {\n      if (this.messages.length >= this.config.nzMaxStack) {\n        this.messages.splice(0, 1);\n      }\n      this.messages.push(notification as Required<NzNotificationDataFilled>);\n    }\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * @override\n   */\n  protected subscribeConfigChange(): void {\n    this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME).subscribe(() => this.setConfig());\n  }\n\n  private replaceNotification(old: NzNotificationDataFilled, _new: NzNotificationDataFilled): void {\n    old.title = _new.title;\n    old.content = _new.content;\n    old.template = _new.template;\n    old.type = _new.type;\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { notificationMotion } from 'ng-zorro-antd/core';\nimport { NzMessageComponent } from 'ng-zorro-antd/message';\n\nimport { NzNotificationContainerComponent } from './nz-notification-container.component';\nimport { NzNotificationDataFilled } from './nz-notification.definitions';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-notification',\n  exportAs: 'nzNotification',\n  preserveWhitespaces: false,\n  animations: [notificationMotion],\n  templateUrl: './nz-notification.component.html'\n})\nexport class NzNotificationComponent extends NzMessageComponent {\n  @Input() nzMessage: NzNotificationDataFilled;\n\n  constructor(private container: NzNotificationContainerComponent, protected cdr: ChangeDetectorRef) {\n    super(container, cdr);\n  }\n\n  close(): void {\n    this._destroy(true);\n  }\n\n  get state(): string | undefined {\n    if (this.nzMessage.state === 'enter') {\n      if (this.container.config.nzPlacement === 'topLeft' || this.container.config.nzPlacement === 'bottomLeft') {\n        return 'enterLeft';\n      } else {\n        return 'enterRight';\n      }\n    } else {\n      return this.nzMessage.state;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\n@NgModule()\nexport class NzNotificationServiceModule {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NZ_NOTIFICATION_DEFAULT_CONFIG_PROVIDER } from './nz-notification-config';\nimport { NzNotificationContainerComponent } from './nz-notification-container.component';\nimport { NzNotificationComponent } from './nz-notification.component';\nimport { NzNotificationServiceModule } from './nz-notification.service.module';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, NzIconModule, NzNotificationServiceModule],\n  declarations: [NzNotificationComponent, NzNotificationContainerComponent],\n  providers: [NZ_NOTIFICATION_DEFAULT_CONFIG_PROVIDER],\n  entryComponents: [NzNotificationContainerComponent]\n})\nexport class NzNotificationModule {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { TemplateRef } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { NzMessageData, NzMessageDataOptions } from 'ng-zorro-antd/message';\n\nexport interface NzNotificationData extends NzMessageData {\n  template?: TemplateRef<{}>;\n\n  type?: 'success' | 'info' | 'warning' | 'error' | 'blank' | string;\n  title?: string;\n}\n\nexport interface NzNotificationDataOptions<T = {}> extends NzMessageDataOptions {\n  nzKey?: string;\n  nzStyle?: any; // tslint:disable-line:no-any\n  nzClass?: any; // tslint:disable-line:no-any\n\n  /** Anything user wants renderer into a template. */\n  nzData?: T;\n}\n\n// Filled version of NzMessageData (includes more private properties)\nexport interface NzNotificationDataFilled extends NzNotificationData {\n  messageId: string; // Service-wide unique id, auto generated\n  createdAt: Date; // Auto created\n\n  state?: 'enter' | 'leave';\n  options?: NzNotificationDataOptions;\n  onClose?: Subject<boolean>;\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Overlay } from '@angular/cdk/overlay';\nimport { ApplicationRef, ComponentFactoryResolver, Injectable, Injector, TemplateRef } from '@angular/core';\n\nimport { NzSingletonService } from 'ng-zorro-antd/core';\nimport { NzMessageBaseService } from 'ng-zorro-antd/message';\n\nimport { NzNotificationConfigLegacy } from './nz-notification-config';\nimport { NzNotificationContainerComponent } from './nz-notification-container.component';\nimport { NzNotificationData, NzNotificationDataFilled, NzNotificationDataOptions } from './nz-notification.definitions';\nimport { NzNotificationServiceModule } from './nz-notification.service.module';\n\n@Injectable({\n  providedIn: NzNotificationServiceModule\n})\nexport class NzNotificationService extends NzMessageBaseService<\n  NzNotificationContainerComponent,\n  NzNotificationData,\n  NzNotificationConfigLegacy\n> {\n  constructor(\n    nzSingletonService: NzSingletonService,\n    overlay: Overlay,\n    injector: Injector,\n    cfr: ComponentFactoryResolver,\n    appRef: ApplicationRef\n  ) {\n    super(nzSingletonService, overlay, NzNotificationContainerComponent, injector, cfr, appRef, 'notification-');\n  }\n\n  // Shortcut methods\n  success(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationDataFilled {\n    return this.createMessage({ type: 'success', title, content }, options) as NzNotificationDataFilled;\n  }\n\n  error(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationDataFilled {\n    return this.createMessage({ type: 'error', title, content }, options) as NzNotificationDataFilled;\n  }\n\n  info(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationDataFilled {\n    return this.createMessage({ type: 'info', title, content }, options) as NzNotificationDataFilled;\n  }\n\n  warning(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationDataFilled {\n    return this.createMessage({ type: 'warning', title, content }, options) as NzNotificationDataFilled;\n  }\n\n  blank(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationDataFilled {\n    return this.createMessage({ type: 'blank', title, content }, options) as NzNotificationDataFilled;\n  }\n\n  create(\n    type: 'success' | 'info' | 'warning' | 'error' | 'blank' | string,\n    title: string,\n    content: string,\n    options?: NzNotificationDataOptions\n  ): NzNotificationDataFilled {\n    return this.createMessage({ type, title, content }, options) as NzNotificationDataFilled;\n  }\n\n  // For content with template\n  template(template: TemplateRef<{}>, options?: NzNotificationDataOptions): NzNotificationDataFilled {\n    return this.createMessage({ template }, options) as NzNotificationDataFilled;\n  }\n}\n"]}