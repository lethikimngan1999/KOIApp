{"version":3,"file":"ng-zorro-antd-icon.js","sources":["ng:/ng-zorro-antd/icon/nz-icon.service.ts","ng:/ng-zorro-antd/icon/nz-icon.directive.ts","ng:/ng-zorro-antd/icon/nz-icon.module.ts"],"names":["tslib_1.__decorate"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport { HttpBackend } from '@angular/common/http';\nimport { Inject, Injectable, InjectionToken, Optional, RendererFactory2 } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { IconDefinition, IconService } from '@ant-design/icons-angular';\nimport {\n  BarsOutline,\n  CalendarOutline,\n  CaretDownFill,\n  CaretDownOutline,\n  CaretUpFill,\n  CaretUpOutline,\n  CheckCircleFill,\n  CheckCircleOutline,\n  CheckOutline,\n  ClockCircleOutline,\n  CloseCircleFill,\n  CloseCircleOutline,\n  CloseOutline,\n  CopyOutline,\n  DoubleLeftOutline,\n  DoubleRightOutline,\n  DownOutline,\n  EditOutline,\n  EllipsisOutline,\n  ExclamationCircleFill,\n  ExclamationCircleOutline,\n  EyeOutline,\n  FileFill,\n  FileOutline,\n  FilterFill,\n  InfoCircleFill,\n  InfoCircleOutline,\n  LeftOutline,\n  LoadingOutline,\n  PaperClipOutline,\n  QuestionCircleOutline,\n  RightOutline,\n  SearchOutline,\n  StarFill,\n  UploadOutline,\n  UpOutline\n} from '@ant-design/icons-angular/icons';\nimport { warn, warnDeprecation, IconConfig, NzConfigService } from 'ng-zorro-antd/core';\nimport { Subject } from 'rxjs';\n\nexport interface NzIconfontOption {\n  scriptUrl: string;\n}\n\nexport const NZ_ICONS = new InjectionToken('nz_icons');\nexport const NZ_ICON_DEFAULT_TWOTONE_COLOR = new InjectionToken('nz_icon_default_twotone_color');\nexport const DEFAULT_TWOTONE_COLOR = '#1890ff';\nexport const NZ_ICONS_USED_BY_ZORRO: IconDefinition[] = [\n  BarsOutline,\n  CalendarOutline,\n  CaretUpFill,\n  CaretUpOutline,\n  CaretDownFill,\n  CaretDownOutline,\n  CheckCircleFill,\n  CheckCircleOutline,\n  CheckOutline,\n  ClockCircleOutline,\n  CloseCircleOutline,\n  CloseCircleFill,\n  CloseOutline,\n  CopyOutline,\n  DoubleLeftOutline,\n  DoubleRightOutline,\n  DownOutline,\n  EditOutline,\n  EllipsisOutline,\n  ExclamationCircleFill,\n  ExclamationCircleOutline,\n  EyeOutline,\n  FileFill,\n  FileOutline,\n  FilterFill,\n  InfoCircleFill,\n  InfoCircleOutline,\n  LeftOutline,\n  LoadingOutline,\n  PaperClipOutline,\n  QuestionCircleOutline,\n  RightOutline,\n  StarFill,\n  SearchOutline,\n  StarFill,\n  UploadOutline,\n  UpOutline\n];\n\n/**\n * It should be a global singleton, otherwise registered icons could not be found.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NzIconService extends IconService {\n  configUpdated$ = new Subject<void>();\n\n  private iconfontCache = new Set<string>();\n\n  warnAPI(type: 'old' | 'cross' | 'vertical'): void {\n    if (type === 'old') {\n      warnDeprecation(\n        `'<i class=\"anticon\"></i>' would be deprecated in 9.0.0. Please use '<i nz-icon nzType=\"\"></i>' API. Please refer https://ng.ant.design/components/icon/en.`\n      );\n    }\n    if (type === 'cross') {\n      warnDeprecation(`'cross' icon is replaced by 'close' icon. This auto correction would be removed in 9.0.0.`);\n    }\n    if (type === 'vertical') {\n      warnDeprecation(`'verticle' is misspelled. Please use 'vertical'. This misspell would be fixed in 9.0.0.`);\n    }\n  }\n\n  normalizeSvgElement(svg: SVGElement): void {\n    if (!svg.getAttribute('viewBox')) {\n      this._renderer.setAttribute(svg, 'viewBox', '0 0 1024 1024');\n    }\n    if (!svg.getAttribute('width') || !svg.getAttribute('height')) {\n      this._renderer.setAttribute(svg, 'width', '1em');\n      this._renderer.setAttribute(svg, 'height', '1em');\n    }\n    if (!svg.getAttribute('fill')) {\n      this._renderer.setAttribute(svg, 'fill', 'currentColor');\n    }\n  }\n\n  fetchFromIconfont(opt: NzIconfontOption): void {\n    const { scriptUrl } = opt;\n    if (this._document && !this.iconfontCache.has(scriptUrl)) {\n      const script = this._renderer.createElement('script');\n      this._renderer.setAttribute(script, 'src', scriptUrl);\n      this._renderer.setAttribute(script, 'data-namespace', scriptUrl.replace(/^(https?|http):/g, ''));\n      this._renderer.appendChild(this._document.body, script);\n      this.iconfontCache.add(scriptUrl);\n    }\n  }\n\n  createIconfontIcon(type: string): SVGElement {\n    return this._createSVGElementFromString(`<svg><use xlink:href=\"${type}\"></svg>`);\n  }\n\n  constructor(\n    rendererFactory: RendererFactory2,\n    sanitizer: DomSanitizer,\n    protected nzConfigService: NzConfigService,\n    @Optional() handler: HttpBackend,\n    // tslint:disable-next-line:no-any\n    @Optional() @Inject(DOCUMENT) _document: any,\n    @Optional() @Inject(NZ_ICONS) icons?: IconDefinition[],\n    /**\n     * @deprecated\n     * @inner\n     */\n    @Optional() @Inject(NZ_ICON_DEFAULT_TWOTONE_COLOR) private legacyDefaultTwotoneColor?: string\n  ) {\n    super(rendererFactory, handler, _document, sanitizer);\n\n    this.onConfigChange();\n\n    this.addIcon(...NZ_ICONS_USED_BY_ZORRO, ...(icons || []));\n\n    if (legacyDefaultTwotoneColor) {\n      warnDeprecation(\n        `'NZ_ICON_DEFAULT_TWOTONE_COLOR' is deprecated and will be removed in 9.0.0. Please use 'NZ_CONFIG' instead!`\n      );\n    }\n    this.configDefaultTwotoneColor();\n\n    this.configDefaultTheme();\n  }\n\n  private onConfigChange(): void {\n    this.nzConfigService.getConfigChangeEventForComponent('icon').subscribe(() => {\n      this.configDefaultTwotoneColor();\n      this.configDefaultTheme();\n      this.configUpdated$.next();\n    });\n  }\n\n  private configDefaultTheme(): void {\n    const iconConfig = this.getConfig();\n    this.defaultTheme = iconConfig.nzTheme || 'outline';\n  }\n\n  private configDefaultTwotoneColor(): void {\n    const iconConfig = this.getConfig();\n    const defaultTwotoneColor = iconConfig.nzTwotoneColor || this.legacyDefaultTwotoneColor;\n\n    let primaryColor = DEFAULT_TWOTONE_COLOR;\n\n    if (defaultTwotoneColor) {\n      if (defaultTwotoneColor.startsWith('#')) {\n        primaryColor = defaultTwotoneColor;\n      } else {\n        warn('Twotone color must be a hex color!');\n      }\n    }\n\n    this.twoToneColor = { primaryColor };\n  }\n\n  private getConfig(): IconConfig {\n    return this.nzConfigService.getConfigForComponent('icon') || {};\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport {\n  AfterContentChecked,\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\nimport { IconDirective, ThemeType } from '@ant-design/icons-angular';\nimport { warnDeprecation, InputBoolean } from 'ng-zorro-antd/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzIconService } from './nz-icon.service';\n\nconst iconTypeRE = /^anticon\\-\\w/;\n\nconst getIconTypeClass = (className: string): { name: string; index: number } | undefined => {\n  if (!className) {\n    return undefined;\n  } else {\n    const classArr = className.split(/\\s/);\n    const index = classArr.findIndex(cls => cls !== 'anticon' && cls !== 'anticon-spin' && !!cls.match(iconTypeRE));\n    return index === -1 ? undefined : { name: classArr[index], index };\n  }\n};\n\nconst normalizeType = (rawType: string): { type: string; crossError: boolean; verticalError: boolean } => {\n  const ret = { type: rawType, crossError: false, verticalError: false };\n  ret.type = rawType ? rawType.replace('anticon-', '') : '';\n  if (ret.type.includes('verticle')) {\n    ret.type = 'up';\n    ret.verticalError = true;\n  }\n  if (ret.type.startsWith('cross')) {\n    ret.type = 'close';\n    ret.crossError = true;\n  }\n  return ret;\n};\n\n/**\n * This directive extends IconDirective to provide:\n *\n * - IconFont support\n * - spinning\n * - old API compatibility\n *\n * @break-changes\n *\n * - old API compatibility, icon class names would not be supported.\n * - properties that not started with `nz`.\n */\n@Directive({\n  selector: 'i.anticon, [nz-icon]',\n  exportAs: 'nzIcon'\n})\nexport class NzIconDirective extends IconDirective implements OnInit, OnChanges, OnDestroy, AfterContentChecked {\n  @Input()\n  @InputBoolean()\n  set nzSpin(value: boolean) {\n    this.spin = value;\n  }\n\n  @Input() nzRotate: number = 0;\n\n  @Input() set nzType(value: string) {\n    this.type = value;\n  }\n\n  @Input() set nzTheme(value: ThemeType) {\n    this.theme = value;\n  }\n\n  @Input() set nzTwotoneColor(value: string) {\n    this.twoToneColor = value;\n  }\n\n  @Input() set nzIconfont(value: string) {\n    this.iconfont = value;\n  }\n\n  /** @deprecated 8.0.0 avoid exposing low layer API. */\n  @Input() spin = false;\n\n  /** @deprecated 8.0.0 avoid exposing low layer API. */\n  @Input() iconfont: string;\n\n  @Input()\n  set type(value: string) {\n    if (value && value.startsWith('anticon')) {\n      const rawClass = getIconTypeClass(value);\n      const type = rawClass ? normalizeType(rawClass.name).type : '';\n      if (type && this.type !== type) {\n        this._type = type;\n      }\n    } else {\n      this._type = value;\n    }\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n  private classNameObserver: MutationObserver;\n  private el = this.elementRef.nativeElement;\n  private destroy$ = new Subject<void>();\n  private _type: string;\n\n  /**\n   * Replacement of `changeIcon` for more modifications.\n   * @param oldAPI\n   */\n  private changeIcon2(oldAPI: boolean = false): void {\n    if (!oldAPI) {\n      this.setClassName();\n    }\n    this._changeIcon().then(svg => {\n      this.setSVGData(svg);\n      if (!oldAPI && svg) {\n        this.handleSpin(svg);\n        this.handleRotate(svg);\n      }\n    });\n  }\n\n  private classChangeHandler(className: string): void {\n    const ret = getIconTypeClass(className);\n    if (ret) {\n      const { type, crossError, verticalError } = normalizeType(ret.name);\n      if (crossError) {\n        this.iconService.warnAPI('cross');\n      }\n      if (verticalError) {\n        this.iconService.warnAPI('vertical');\n      }\n      if (this.type !== type) {\n        this._type = type;\n        this.changeIcon2(true);\n      }\n    }\n  }\n\n  private handleSpin(svg: SVGElement): void {\n    if ((this.spin || this.type === 'loading') && !this.elementRef.nativeElement.classList.contains('anticon-spin')) {\n      this.renderer.addClass(svg, 'anticon-spin');\n    } else {\n      this.renderer.removeClass(svg, 'anticon-spin');\n    }\n  }\n\n  private handleRotate(svg: SVGElement): void {\n    if (this.nzRotate) {\n      this.renderer.setAttribute(svg, 'style', `transform: rotate(${this.nzRotate}deg)`);\n    } else {\n      this.renderer.removeAttribute(svg, 'style');\n    }\n  }\n\n  private setClassName(): void {\n    if (typeof this.type === 'string') {\n      const iconClassNameArr = this.el.className.split(/\\s/);\n      const ret = getIconTypeClass(this.el.className);\n      if (ret) {\n        iconClassNameArr.splice(ret.index, 1, `anticon-${this.type}`);\n        this.renderer.setAttribute(this.el, 'class', iconClassNameArr.join(' '));\n      } else {\n        this.renderer.addClass(this.el, `anticon-${this.type}`);\n      }\n    }\n  }\n\n  private setSVGData(svg: SVGElement | null): void {\n    if (typeof this.type === 'string' && svg) {\n      this.renderer.setAttribute(svg, 'data-icon', this.type);\n      this.renderer.setAttribute(svg, 'aria-hidden', 'true');\n    }\n  }\n\n  constructor(\n    public iconService: NzIconService,\n    public elementRef: ElementRef,\n    public renderer: Renderer2,\n    private platform: Platform\n  ) {\n    super(iconService, elementRef, renderer);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { type, nzType, nzTwotoneColor, twoToneColor, spin, nzSpin, theme, nzTheme, nzRotate } = changes;\n\n    if (type && !nzType) {\n      warnDeprecation(\n        `APIs for Icon without 'nz' prefix are deprecated and will be removed in 9.0.0! Please check icons with this type: '${type.currentValue}'.`\n      );\n    }\n\n    if (type || nzType || nzTwotoneColor || twoToneColor || spin || nzSpin || theme || nzTheme) {\n      this.changeIcon2();\n    } else if (nzRotate) {\n      this.handleRotate(this.el.firstChild);\n    } else {\n      this._setSVGElement(this.iconService.createIconfontIcon(`#${this.iconfont}`));\n    }\n\n    if (type && !nzType) {\n      warnDeprecation(\n        `APIs for Icon without 'nz' prefix are deprecated and will be removed in 9.0.0! Please check icons with this type: '${this.type}'.`\n      );\n    }\n  }\n\n  ngOnInit(): void {\n    // If `this.type` is not specified and `classList` contains `anticon`, it should be an icon using old API.\n    if (!this.type && this.el.classList.contains('anticon')) {\n      this.iconService.warnAPI('old');\n      // Get `type` from `className`. If not, initial rendering would be missed.\n      this.classChangeHandler(this.el.className);\n      if (this.platform.isBrowser) {\n        // Add `class` mutation observer.\n        this.classNameObserver = new MutationObserver((mutations: MutationRecord[]) => {\n          mutations\n            .filter((mutation: MutationRecord) => mutation.attributeName === 'class')\n            .forEach((mutation: MutationRecord) => this.classChangeHandler((mutation.target as HTMLElement).className));\n        });\n        this.classNameObserver.observe(this.el, { attributes: true });\n      }\n    }\n    // If `classList` does not contain `anticon`, add it before other class names.\n    if (!this.el.classList.contains('anticon')) {\n      this.renderer.setAttribute(this.el, 'class', `anticon ${this.el.className}`.trim());\n    }\n\n    this.iconService.configUpdated$\n      .asObservable()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        if (this.type) {\n          this.changeIcon2();\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.classNameObserver) {\n      this.classNameObserver.disconnect();\n    }\n\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /**\n   * If custom content is provided, try to normalize SVG elements.\n   */\n  ngAfterContentChecked(): void {\n    const children = this.el.children;\n    let length = children.length;\n    if (!this.type && children.length) {\n      while (length--) {\n        const child = children[length];\n        if (child.tagName.toLowerCase() === 'svg') {\n          this.iconService.normalizeSvgElement(child as SVGElement);\n        }\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { NgModule } from '@angular/core';\n\nimport { NzIconDirective } from './nz-icon.directive';\n\n@NgModule({\n  exports: [NzIconDirective],\n  declarations: [NzIconDirective],\n  imports: [PlatformModule]\n})\nexport class NzIconModule {}\n"]}