{"version":3,"file":"ng-zorro-antd-switch.js","sources":["ng:/ng-zorro-antd/switch/nz-switch.component.ts","ng:/ng-zorro-antd/switch/nz-switch.module.ts"],"names":["tslib_1.__decorate"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ENTER, LEFT_ARROW, RIGHT_ARROW, SPACE } from '@angular/cdk/keycodes';\nimport {\n  forwardRef,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { InputBoolean, NzConfigService, NzSizeDSType, WithConfig } from 'ng-zorro-antd/core';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'switch';\n\n@Component({\n  selector: 'nz-switch',\n  exportAs: 'nzSwitch',\n  preserveWhitespaces: false,\n  templateUrl: './nz-switch.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzSwitchComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '(click)': 'hostClick($event)'\n  },\n  styles: [\n    `\n      nz-switch {\n        display: inline-block;\n      }\n    `\n  ]\n})\nexport class NzSwitchComponent implements ControlValueAccessor, AfterViewInit, OnDestroy {\n  checked = false;\n  onChange: (value: boolean) => void = () => null;\n  onTouched: () => void = () => null;\n  @ViewChild('switchElement', { static: true }) private switchElement: ElementRef;\n  @Input() @InputBoolean() nzLoading = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @InputBoolean() nzControl = false;\n  @Input() nzCheckedChildren: string | TemplateRef<void>;\n  @Input() nzUnCheckedChildren: string | TemplateRef<void>;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, 'default') nzSize: NzSizeDSType;\n\n  hostClick(e: MouseEvent): void {\n    e.preventDefault();\n    if (!this.nzDisabled && !this.nzLoading && !this.nzControl) {\n      this.updateValue(!this.checked);\n    }\n  }\n\n  updateValue(value: boolean): void {\n    if (this.checked !== value) {\n      this.checked = value;\n      this.onChange(this.checked);\n    }\n  }\n\n  onKeyDown(e: KeyboardEvent): void {\n    if (!this.nzControl && !this.nzDisabled && !this.nzLoading) {\n      if (e.keyCode === LEFT_ARROW) {\n        this.updateValue(false);\n        e.preventDefault();\n      } else if (e.keyCode === RIGHT_ARROW) {\n        this.updateValue(true);\n        e.preventDefault();\n      } else if (e.keyCode === SPACE || e.keyCode === ENTER) {\n        this.updateValue(!this.checked);\n        e.preventDefault();\n      }\n    }\n  }\n\n  focus(): void {\n    this.focusMonitor.focusVia(this.switchElement.nativeElement, 'keyboard');\n  }\n\n  blur(): void {\n    this.switchElement.nativeElement.blur();\n  }\n\n  constructor(\n    public nzConfigService: NzConfigService,\n    private cdr: ChangeDetectorRef,\n    private focusMonitor: FocusMonitor\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.focusMonitor.monitor(this.switchElement.nativeElement, true).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n        // Angular does not expect events to be raised during change detection, so any state change\n        // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n        // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n        // telling the form control it has been touched until the next tick.\n        Promise.resolve().then(() => this.onTouched());\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.switchElement.nativeElement);\n  }\n\n  writeValue(value: boolean): void {\n    this.checked = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (_: boolean) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.nzDisabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzAddOnModule, NzWaveModule } from 'ng-zorro-antd/core';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzSwitchComponent } from './nz-switch.component';\n\n@NgModule({\n  exports: [NzSwitchComponent],\n  declarations: [NzSwitchComponent],\n  imports: [CommonModule, NzWaveModule, NzIconModule, NzAddOnModule]\n})\nexport class NzSwitchModule {}\n"]}