{"version":3,"file":"ng-zorro-antd-skeleton.js","sources":["ng:/ng-zorro-antd/skeleton/nz-skeleton.component.ts","ng:/ng-zorro-antd/skeleton/nz-skeleton.module.ts","ng:/ng-zorro-antd/skeleton/nz-skeleton.type.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { toCssPixel } from 'ng-zorro-antd/core';\nimport { AvatarShape, AvatarSize, NzSkeletonAvatar, NzSkeletonParagraph, NzSkeletonTitle } from './nz-skeleton.type';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-skeleton',\n  exportAs: 'nzSkeleton',\n  templateUrl: './nz-skeleton.component.html',\n  host: {\n    '[class.ant-skeleton-with-avatar]': '!!nzAvatar',\n    '[class.ant-skeleton-active]': 'nzActive'\n  }\n})\nexport class NzSkeletonComponent implements OnInit, OnChanges {\n  @Input() nzActive = false;\n  @Input() nzLoading = true;\n  @Input() nzTitle: NzSkeletonTitle | boolean = true;\n  @Input() nzAvatar: NzSkeletonAvatar | boolean = false;\n  @Input() nzParagraph: NzSkeletonParagraph | boolean = true;\n\n  title: NzSkeletonTitle;\n  avatar: NzSkeletonAvatar;\n  paragraph: NzSkeletonParagraph;\n  rowsList: number[] = [];\n  widthList: Array<number | string> = [];\n\n  constructor(private cdr: ChangeDetectorRef, renderer: Renderer2, elementRef: ElementRef) {\n    renderer.addClass(elementRef.nativeElement, 'ant-skeleton');\n  }\n\n  toCSSUnit(value: number | string = ''): string {\n    return toCssPixel(value);\n  }\n\n  private getTitleProps(): NzSkeletonTitle {\n    const hasAvatar: boolean = !!this.nzAvatar;\n    const hasParagraph: boolean = !!this.nzParagraph;\n    let width = '';\n    if (!hasAvatar && hasParagraph) {\n      width = '38%';\n    } else if (hasAvatar && hasParagraph) {\n      width = '50%';\n    }\n    return { width, ...this.getProps(this.nzTitle) };\n  }\n\n  private getAvatarProps(): NzSkeletonAvatar {\n    const shape: AvatarShape = !!this.nzTitle && !this.nzParagraph ? 'square' : 'circle';\n    const size: AvatarSize = 'large';\n    return { shape, size, ...this.getProps(this.nzAvatar) };\n  }\n\n  private getParagraphProps(): NzSkeletonParagraph {\n    const hasAvatar: boolean = !!this.nzAvatar;\n    const hasTitle: boolean = !!this.nzTitle;\n    const basicProps: NzSkeletonParagraph = {};\n    // Width\n    if (!hasAvatar || !hasTitle) {\n      basicProps.width = '61%';\n    }\n    // Rows\n    if (!hasAvatar && hasTitle) {\n      basicProps.rows = 3;\n    } else {\n      basicProps.rows = 2;\n    }\n    return { ...basicProps, ...this.getProps(this.nzParagraph) };\n  }\n\n  private getProps<T>(prop: T | boolean | undefined): T | {} {\n    return prop && typeof prop === 'object' ? prop : {};\n  }\n\n  private getWidthList(): Array<number | string> {\n    const { width, rows } = this.paragraph;\n    let widthList: Array<string | number> = [];\n    if (width && Array.isArray(width)) {\n      widthList = width;\n    } else if (width && !Array.isArray(width)) {\n      widthList = [];\n      widthList[rows! - 1] = width;\n    }\n    return widthList;\n  }\n\n  private updateProps(): void {\n    this.title = this.getTitleProps();\n    this.avatar = this.getAvatarProps();\n    this.paragraph = this.getParagraphProps();\n    this.rowsList = [...Array(this.paragraph.rows)];\n    this.widthList = this.getWidthList();\n    this.cdr.markForCheck();\n  }\n\n  ngOnInit(): void {\n    this.updateProps();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzTitle || changes.nzAvatar || changes.nzParagraph) {\n      this.updateProps();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzSkeletonComponent } from './nz-skeleton.component';\n\n@NgModule({\n  declarations: [NzSkeletonComponent],\n  imports: [CommonModule],\n  exports: [NzSkeletonComponent]\n})\nexport class NzSkeletonModule {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport type ParagraphWidth = number | string | Array<number | string>;\n\nexport type AvatarShape = 'square' | 'circle';\n\nexport type AvatarSize = 'small' | 'large' | 'default';\n\nexport interface NzSkeletonAvatar {\n  size?: AvatarSize;\n  shape?: AvatarShape;\n}\n\nexport interface NzSkeletonTitle {\n  width?: number | string;\n}\n\nexport interface NzSkeletonParagraph {\n  rows?: number;\n  width?: ParagraphWidth;\n}\n"]}