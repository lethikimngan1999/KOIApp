{"version":3,"file":"ng-zorro-antd-breadcrumb.js","sources":["ng:/ng-zorro-antd/breadcrumb/nz-breadcrumb.component.ts","ng:/ng-zorro-antd/breadcrumb/nz-breadcrumb-item.component.ts","ng:/ng-zorro-antd/breadcrumb/nz-breadcrumb.module.ts"],"names":["tslib_1.__decorate"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,+BAIC;AACD;AACY;AACQ,IANlB,iCAAc;AAChB;AACG,IADD,kCAAe;AACjB;AAGG,IAHD,+BAAY;AACd;AAiBA,MAAa,qBAAqB;AAAG;AAAQ;AACvC;AAAyB;AAC7B;AAA6B;AAC/B;AAAQ,IAMN,YACU,QAAkB,EAClB,MAAc,EACd,GAAsB,EAC9B,UAAsB,EACtB,QAAmB;AACpB,QALS,aAAQ,GAAR,QAAQ,CAAU;AAAC,QACnB,WAAM,GAAN,MAAM,CAAQ;AAAC,QACf,QAAG,GAAH,GAAG,CAAmB;AAAC,QAXR,mBAAc,GAAG,KAAK,CAAC;AAClD,QAAW,gBAAW,GAA+B,GAAG,CAAC;AACzD,QAAW,iBAAY,GAAW,YAAY,CAAC;AAC/C,QACE,gBAAW,GAAmC,EAAE,CAAC;AACnD,QACU,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;AACzC,QAQI,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAC;AAClE,KAAG;AACH;AACO;AACF;AAAQ,IADX,QAAQ;AAAK,QACX,IAAI,IAAI,CAAC,cAAc,EAAE;AAC7B,YAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAClC,SAAK;AACL,KAAG;AACH;AACO;AACL;AAAQ,IADR,WAAW;AAAK,QACd,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AACzB,QAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;AAC7B,KAAG;AACH;AACO;AAAsB;AAC3B;AAAmB;AAEjB,IAHF,QAAQ,CAAC,GAAW,EAAE,CAAa;AAAI,QACrC,CAAC,CAAC,cAAc,EAAE,CAAC;AACvB,QACI,IAAI,CAAC,MAAM;AACf,aAAO,GAAG;AAAM;AAEhB;AAAY,QAFD,MACH,IAAI,CAAC,QAAQ;AACrB,aAAW,GAAG,CAAC,MAAM,CAAC;AACtB,aAAW,aAAa,CAAC,GAAG,CAAC;AAC7B,aAAW,IAAI,EAAE,EACV;AACP,aAAO,IAAI,EAAE,CAAC;AACd,KAAG;AACH;AACO;AAAgB;AACtB;AAAQ,IADC,oBAAoB;AAAK,QAC/B,IAAI;AACR;AAA6B,kBAAjB,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC;AAC9C;AAA6B,kBAAjB,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC;AAC9D,YAAM,MAAM,CAAC,MAAM;AACnB,iBAAS,IAAI,CACH,MAAM;AAAM;AAA4B;AACxB;AACpB,YAFW,CAAC,IAAI,CAAC,YAAY,aAAa,EAAC,EACvC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EACxB,SAAS,CAAC,IAAI,CAAC;AACzB,aAAS;AACT,iBAAS,SAAS;AAAM;AACA;AAAgB,YADrB;AACnB,gBAAU,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AACtE,gBAAU,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AAClC,aAAS,EAAC,CAAC;AACX,SAAK;AAAC,QAAA,OAAO,CAAC,EAAE;AAChB,YAAM,MAAM,IAAI,KAAK,CAAC,GAAG,MAAM,sEAAsE,CAAC,CAAC;AACvG,SAAK;AACL,KAAG;AACH;AACO;AAAgB;AACF;AACJ;AACS;AACtB;AAAQ,IAJF,cAAc,CACpB,KAAqB,EACrB,MAAc,EAAE,EAChB,cAAkC,EAAE;AACrC;AAAyB,cAClB,QAAQ,GAAqB,KAAK,CAAC,QAAQ;AACrD;AACI,QAAA,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;AAC/B,YAAM,OAAO,WAAW,CAAC;AACzB,SAAK;AACL,QAAI,KAAK,MAAM,KAAK,IAAI,QAAQ,EAAE;AAClC,YAAM,IAAI,KAAK,CAAC,MAAM,KAAK,cAAc,EAAE;AAC3C;AACQ;AACQ;AAAiC,sBAAnC,QAAQ,GAAW,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG;AAAM;AACtD;AAA+B;AAC1B,gBAF4C,OAAO,IAAI,OAAO,CAAC,IAAI,EAAC,CAAC,IAAI,CAAC,GAAG,CAAC;AAC1F;AAAiC,sBAAnB,OAAO,GAAG,GAAG,GAAG,IAAI,QAAQ,EAAE;AAC5C;AAAiC,sBAAnB,eAAe,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;AACtE;AACQ,gBAAA,IAAI,QAAQ,IAAI,eAAe,EAAE;AACzC;AAAqC,0BAArB,UAAU,GAAqB;AAC/C,wBAAY,KAAK,EAAE,eAAe;AAClC,wBAAY,MAAM,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM;AACzC,wBAAY,GAAG,EAAE,OAAO;AACxB,qBAAW;AACX,oBAAU,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACvC,iBAAS;AACT,gBAAQ,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;AAChE,aAAO;AACP,SAAK;AACL,KAAG;AACH;iDA3GC,SAAS,SAAC,kBACT,eAAe,EAAE,uBAAuB,CAAC,MAAM,kBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI,kBACrC,QAAQ,EAAE,eAAe,kBACzB,QAAQ,EAAE,cAAc,kBACxB,mBAAmB,EAAE,KAAK,kBAC1B;gSAA6C,2BAE3C,6DAIC,eAEJ;;;;;;;4NACG;AAAC;AAAmB;AACnB,YArCH,QAAQ;AACR,YACA,MAAM;AACN,YANA,iBAAiB;AACjB,YACA,UAAU;AACV,YAKA,SAAS;AACV;AAAG;AAEM,6BA6BP,KAAK;AAAK,0BACV,KAAK;AAAK,2BACV,KAAK;AAAI;AAFeA;AAAaA,IAA5B,YAAY,EAAE;AAAE;AACb,6DADmC;;;;;;;;;;;;;;;;;;;;;;oBAClD;AAAC;AAAa;AAAqB,IADjC,+CAAgD;AAClD;AAAqB,IAAnB,4CAAuD;AACzD;AAAqB,IAAnB,6CAA6C;AAC/C;AACoB,IAAlB,4CAAiD;AACnD;AACO;AAAiB;AAAgB;AAEnC,IAFH,yCAAuC;AACzC;AACO;AACE;AAAgB;AACxB,IADG,yCAA0B;AAAC;AACxB;AAAiB;AACZ;AAAQ,IADhB,uCAAsB;AAAC;AACpB;AAAiB;AACpB;AAAQ,IADR,oCAA8B;AAAC;AAClC;AAAC;AAAI;AACM;AAEqB;AAO/B;AAED,MCzCY,yBAAyB;AACtC;AACE;AAAwC;AAE1C,IAEE,YAAmB,qBAA4C;AAAI,QAAhD,0BAAqB,GAArB,qBAAqB,CAAuB;AAAC,KAAG;AACrE;qDA1BC,SAAS,SAAC,kBACT,eAAe,EAAE,uBAAuB,CAAC,MAAM,kBAC/C,aAAa,EAAE;QAAiB,CAAC,IAAI,kBACrC,QAAQ,EAAE,oBAAoB,kBAC9B,QAAQ,EAAE,kBAAkB,kBAC5B,mBAAmB,EAAE,KAAK,kBAC1B;;;cAAkD,2BAEhD;;wCAQC,eAEJ;;;;;;;8YACG;AAAC;AAAmB;AAEI,YAvBnB,qBAAqB;AAAG;AAAG;AAGpC,wBAsBG,KAAK;AAAI;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAa;AAAQ;AAEH;AAAiB;AAAQ,IAFxD,8CAA6C;AAC/C;AACoB,IAAN,0DAAmD;AAAC;AAAE;AAAC;AAEpE;AAAkC;AAA2C;AAAsI;AAAI,MCjB3M,kBAAkB;AAAG;8CALjC,QAAQ,SAAC;AACR,OAAO,EAAE,CAAC,YAAY,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,gBAAgB,EAAE,YAAY,CAAC,kBACtG,YAAY,EAAE,CAAC,qBAAqB,EAAE,yBAAyB,CAAC,kBAChE,OAAO,EAAE,CAAC,qBAAqB,EAAE;MAAyB,CAAC,cAC5D;;;;;;;;;;0BACI;AAAC;AAAC;AAAI;AACD;AAAiC;AAAsI;AAAI;AAAC;AAAI;AAAkC;AAA+C;AAAsI;AAAI;AAAC;AAAiF","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Params, PRIMARY_OUTLET, Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { filter, startWith, takeUntil } from 'rxjs/operators';\n\nimport { InputBoolean, PREFIX } from 'ng-zorro-antd/core';\n\nexport interface BreadcrumbOption {\n  label: string;\n  params: Params;\n  url: string;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-breadcrumb',\n  exportAs: 'nzBreadcrumb',\n  preserveWhitespaces: false,\n  templateUrl: './nz-breadcrumb.component.html',\n  styles: [\n    `\n      nz-breadcrumb {\n        display: block;\n      }\n    `\n  ]\n})\nexport class NzBreadCrumbComponent implements OnInit, OnDestroy {\n  @Input() @InputBoolean() nzAutoGenerate = false;\n  @Input() nzSeparator: string | TemplateRef<void> = '/';\n  @Input() nzRouteLabel: string = 'breadcrumb';\n\n  breadcrumbs: BreadcrumbOption[] | undefined = [];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private injector: Injector,\n    private ngZone: NgZone,\n    private cdr: ChangeDetectorRef,\n    elementRef: ElementRef,\n    renderer: Renderer2\n  ) {\n    renderer.addClass(elementRef.nativeElement, 'ant-breadcrumb');\n  }\n\n  ngOnInit(): void {\n    if (this.nzAutoGenerate) {\n      this.registerRouterChange();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  navigate(url: string, e: MouseEvent): void {\n    e.preventDefault();\n\n    this.ngZone\n      .run(() =>\n        this.injector\n          .get(Router)\n          .navigateByUrl(url)\n          .then()\n      )\n      .then();\n  }\n\n  private registerRouterChange(): void {\n    try {\n      const router = this.injector.get(Router);\n      const activatedRoute = this.injector.get(ActivatedRoute);\n      router.events\n        .pipe(\n          filter(e => e instanceof NavigationEnd),\n          takeUntil(this.destroy$),\n          startWith(true) // Trigger initial render.\n        )\n        .subscribe(() => {\n          this.breadcrumbs = this.getBreadcrumbs(activatedRoute.root);\n          this.cdr.markForCheck();\n        });\n    } catch (e) {\n      throw new Error(`${PREFIX} You should import RouterModule if you want to use 'NzAutoGenerate'.`);\n    }\n  }\n\n  private getBreadcrumbs(\n    route: ActivatedRoute,\n    url: string = '',\n    breadcrumbs: BreadcrumbOption[] = []\n  ): BreadcrumbOption[] | undefined {\n    const children: ActivatedRoute[] = route.children;\n    // If there's no sub root, then stop the recurse and returns the generated breadcrumbs.\n    if (children.length === 0) {\n      return breadcrumbs;\n    }\n    for (const child of children) {\n      if (child.outlet === PRIMARY_OUTLET) {\n        // Only parse components in primary router-outlet (in another word, router-outlet without a specific name).\n        // Parse this layer and generate a breadcrumb item.\n        const routeURL: string = child.snapshot.url.map(segment => segment.path).join('/');\n        const nextUrl = url + `/${routeURL}`;\n        const breadcrumbLabel = child.snapshot.data[this.nzRouteLabel];\n        // If have data, go to generate a breadcrumb for it.\n        if (routeURL && breadcrumbLabel) {\n          const breadcrumb: BreadcrumbOption = {\n            label: breadcrumbLabel,\n            params: child.snapshot.params,\n            url: nextUrl\n          };\n          breadcrumbs.push(breadcrumb);\n        }\n        return this.getBreadcrumbs(child, nextUrl, breadcrumbs);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { NzDropdownMenuComponent } from 'ng-zorro-antd/dropdown';\n\nimport { NzBreadCrumbComponent } from './nz-breadcrumb.component';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-breadcrumb-item',\n  exportAs: 'nzBreadcrumbItem',\n  preserveWhitespaces: false,\n  templateUrl: './nz-breadcrumb-item.component.html',\n  styles: [\n    `\n      nz-breadcrumb-item:last-child {\n        color: rgba(0, 0, 0, 0.65);\n      }\n\n      nz-breadcrumb-item:last-child .ant-breadcrumb-separator {\n        display: none;\n      }\n    `\n  ]\n})\nexport class NzBreadCrumbItemComponent {\n  /**\n   * Dropdown content of a breadcrumb item.\n   */\n  @Input() nzOverlay?: NzDropdownMenuComponent;\n\n  constructor(public nzBreadCrumbComponent: NzBreadCrumbComponent) {}\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzAddOnModule, NzOverlayModule } from 'ng-zorro-antd/core';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzBreadCrumbItemComponent } from './nz-breadcrumb-item.component';\nimport { NzBreadCrumbComponent } from './nz-breadcrumb.component';\n\n@NgModule({\n  imports: [CommonModule, NzAddOnModule, OverlayModule, NzOverlayModule, NzDropDownModule, NzIconModule],\n  declarations: [NzBreadCrumbComponent, NzBreadCrumbItemComponent],\n  exports: [NzBreadCrumbComponent, NzBreadCrumbItemComponent]\n})\nexport class NzBreadCrumbModule {}\n"]}