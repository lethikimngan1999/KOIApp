{"version":3,"file":"ng-zorro-antd-message.js","sources":["ng:/ng-zorro-antd/message/nz-message-base.service.ts","ng:/ng-zorro-antd/message/nz-message-config.ts","ng:/ng-zorro-antd/message/nz-message-container.component.ts","ng:/ng-zorro-antd/message/nz-message.service.module.ts","ng:/ng-zorro-antd/message/nz-message.service.ts","ng:/ng-zorro-antd/message/nz-message.component.ts","ng:/ng-zorro-antd/message/nz-message.module.ts","ng:/ng-zorro-antd/message/nz-message.definitions.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Overlay } from '@angular/cdk/overlay';\nimport { ApplicationRef, ComponentFactoryResolver, EmbeddedViewRef, Injector, Type } from '@angular/core';\nimport { warnDeprecation, NzSingletonService } from 'ng-zorro-antd/core';\n\nimport { NzMessageConfigLegacy } from './nz-message-config';\nimport { NzMessageContainerComponent } from './nz-message-container.component';\nimport { NzMessageData, NzMessageDataFilled, NzMessageDataOptions } from './nz-message.definitions';\n\nlet globalCounter = 0;\n\nexport class NzMessageBaseService<\n  ContainerClass extends NzMessageContainerComponent,\n  MessageData,\n  MessageConfig extends NzMessageConfigLegacy\n> {\n  protected _container: ContainerClass;\n\n  constructor(\n    private nzSingletonService: NzSingletonService,\n    private overlay: Overlay,\n    private containerClass: Type<ContainerClass>,\n    private injector: Injector,\n    private cfr: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private name: string = ''\n  ) {\n    this._container = this.withContainer();\n    this.nzSingletonService.registerSingletonWithKey(this.name, this._container);\n  }\n\n  remove(messageId?: string): void {\n    if (messageId) {\n      this._container.removeMessage(messageId);\n    } else {\n      this._container.removeMessageAll();\n    }\n  }\n\n  createMessage(message: MessageData, options?: NzMessageDataOptions): NzMessageDataFilled {\n    const resultMessage: NzMessageDataFilled = {\n      ...(message as NzMessageData),\n      ...{\n        createdAt: new Date(),\n        messageId: this._generateMessageId(),\n        options\n      }\n    };\n    this._container.createMessage(resultMessage);\n\n    return resultMessage;\n  }\n\n  config(config: MessageConfig): void {\n    warnDeprecation(`'config' of 'NzMessageService' and 'NzNotificationService' is deprecated and will be removed in 9.0.0. Please use 'set' of 'NzConfigService' instead.`);\n\n    this._container.setConfig(config);\n  }\n\n  protected _generateMessageId(): string {\n    return `${this.name}-${globalCounter++}`;\n  }\n\n  // Manually creating container for overlay to avoid multi-checking error, see: https://github.com/NG-ZORRO/ng-zorro-antd/issues/391\n  // NOTE: we never clean up the container component and it's overlay resources, if we should, we need to do it by our own codes.\n  private withContainer(): ContainerClass {\n    const containerInstance = this.nzSingletonService.getSingletonWithKey(this.name);\n\n    if (containerInstance) {\n      return containerInstance as ContainerClass;\n    }\n\n    const factory = this.cfr.resolveComponentFactory(this.containerClass);\n    const componentRef = factory.create(this.injector); // Use root injector\n    componentRef.changeDetectorRef.detectChanges(); // Immediately change detection to avoid multi-checking error\n    this.appRef.attachView(componentRef.hostView); // Load view into app root\n    const overlayPane = this.overlay.create().overlayElement;\n    overlayPane.style.zIndex = '1010'; // Patching: assign the same zIndex of ant-message to it's parent overlay panel, to the ant-message's zindex work.\n    overlayPane.appendChild((componentRef.hostView as EmbeddedViewRef<{}>).rootNodes[0] as HTMLElement);\n\n    return componentRef.instance;\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { InjectionToken } from '@angular/core';\n\n/**\n * @deprecated This interface has been removed to `ng-zorro-antd/core`. Please migrate to that.\n */\nexport interface NzMessageConfigLegacy {\n  nzAnimate?: boolean;\n  nzDuration?: number;\n  nzMaxStack?: number;\n  nzPauseOnHover?: boolean;\n  nzTop?: number | string;\n}\n\nexport const NZ_MESSAGE_DEFAULT_CONFIG = new InjectionToken<NzMessageConfigLegacy>('NZ_MESSAGE_DEFAULT_CONFIG');\n\n/**\n * @deprecated 9.0.0 - Injection token 'NZ_MESSAGE_CONFIG' is deprecated and will be removed in 9.0.0. Please use 'NzConfigService' instead.\n */\nexport const NZ_MESSAGE_CONFIG = new InjectionToken<NzMessageConfigLegacy>('NZ_MESSAGE_CONFIG');\n\nexport const NZ_MESSAGE_DEFAULT_CONFIG_PROVIDER = {\n  provide: NZ_MESSAGE_DEFAULT_CONFIG,\n  useValue: {\n    nzAnimate: true,\n    nzDuration: 3000,\n    nzMaxStack: 7,\n    nzPauseOnHover: true,\n    nzTop: 24\n  }\n};\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  OnInit,\n  Optional,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { toCssPixel, warnDeprecation, NzConfigService } from 'ng-zorro-antd/core';\n\nimport { NzMessageConfigLegacy, NZ_MESSAGE_CONFIG, NZ_MESSAGE_DEFAULT_CONFIG } from './nz-message-config';\nimport { NzMessageDataFilled, NzMessageDataOptions } from './nz-message.definitions';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'message';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-message-container',\n  exportAs: 'nzMessageContainer',\n  preserveWhitespaces: false,\n  templateUrl: './nz-message-container.component.html'\n})\nexport class NzMessageContainerComponent implements OnInit {\n  messages: NzMessageDataFilled[] = [];\n  config: Required<NzMessageConfigLegacy>;\n  top: string | null;\n\n  constructor(\n    protected cdr: ChangeDetectorRef,\n    protected nzConfigService: NzConfigService,\n    @Optional() @Inject(NZ_MESSAGE_DEFAULT_CONFIG) defaultConfig: NzMessageConfigLegacy,\n    @Optional() @Inject(NZ_MESSAGE_CONFIG) config: NzMessageConfigLegacy\n  ) {\n    if (!!config) {\n      warnDeprecation(\n        `Injection token 'NZ_MESSAGE_CONFIG' is deprecated and will be removed in 9.0.0. Please use 'NzConfigService' instead.`\n      );\n    }\n    this.setConfig({ ...defaultConfig, ...config });\n  }\n\n  ngOnInit(): void {\n    this.subscribeConfigChange();\n  }\n\n  setConfig(config?: NzMessageConfigLegacy): void {\n    this.config = this.mergeMessageConfig(config);\n    this.top = toCssPixel(this.config.nzTop);\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * Create a new message.\n   * @param message Parsed message configuration.\n   */\n  createMessage(message: NzMessageDataFilled): void {\n    if (this.messages.length >= this.config.nzMaxStack) {\n      this.messages.splice(0, 1);\n    }\n    message.options = this._mergeMessageOptions(message.options);\n    message.onClose = new Subject<boolean>();\n    this.messages.push(message);\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * Remove a message by `messageId`.\n   * @param messageId Id of the message to be removed.\n   * @param userAction Whether this is closed by user interaction.\n   */\n  removeMessage(messageId: string, userAction: boolean = false): void {\n    this.messages.some((message, index) => {\n      if (message.messageId === messageId) {\n        this.messages.splice(index, 1);\n        this.cdr.detectChanges();\n        message.onClose!.next(userAction);\n        message.onClose!.complete();\n        return true;\n      }\n      return false;\n    });\n  }\n\n  /**\n   * Remove all messages.\n   */\n  removeMessageAll(): void {\n    this.messages = [];\n    this.cdr.detectChanges();\n  }\n\n  protected subscribeConfigChange(): void {\n    this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME).subscribe(() => this.setConfig());\n  }\n\n  protected mergeMessageConfig(config?: NzMessageConfigLegacy): Required<NzMessageConfigLegacy> {\n    return {\n      ...this.config,\n      ...config,\n      ...this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME)\n    };\n  }\n\n  /**\n   * Merge default options and custom message options\n   * @param options\n   */\n  protected _mergeMessageOptions(options?: NzMessageDataOptions): NzMessageDataOptions {\n    const defaultOptions: NzMessageDataOptions = {\n      nzDuration: this.config.nzDuration,\n      nzAnimate: this.config.nzAnimate,\n      nzPauseOnHover: this.config.nzPauseOnHover\n    };\n    return { ...defaultOptions, ...options };\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\n@NgModule()\nexport class NzMessageServiceModule {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Overlay } from '@angular/cdk/overlay';\nimport { ApplicationRef, ComponentFactoryResolver, Injectable, Injector, TemplateRef } from '@angular/core';\nimport { NzSingletonService } from 'ng-zorro-antd/core';\n\nimport { NzMessageBaseService } from './nz-message-base.service';\nimport { NzMessageConfigLegacy } from './nz-message-config';\nimport { NzMessageContainerComponent } from './nz-message-container.component';\nimport { NzMessageData, NzMessageDataFilled, NzMessageDataOptions } from './nz-message.definitions';\nimport { NzMessageServiceModule } from './nz-message.service.module';\n\n@Injectable({\n  providedIn: NzMessageServiceModule\n})\nexport class NzMessageService extends NzMessageBaseService<\n  NzMessageContainerComponent,\n  NzMessageData,\n  NzMessageConfigLegacy\n> {\n  constructor(\n    nzSingletonService: NzSingletonService,\n    overlay: Overlay,\n    injector: Injector,\n    cfr: ComponentFactoryResolver,\n    appRef: ApplicationRef\n  ) {\n    super(nzSingletonService, overlay, NzMessageContainerComponent, injector, cfr, appRef, 'message');\n  }\n\n  // Shortcut methods\n  success(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageDataFilled {\n    return this.createMessage({ type: 'success', content }, options);\n  }\n\n  error(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageDataFilled {\n    return this.createMessage({ type: 'error', content }, options);\n  }\n\n  info(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageDataFilled {\n    return this.createMessage({ type: 'info', content }, options);\n  }\n\n  warning(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageDataFilled {\n    return this.createMessage({ type: 'warning', content }, options);\n  }\n\n  loading(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageDataFilled {\n    return this.createMessage({ type: 'loading', content }, options);\n  }\n\n  create(\n    type: 'success' | 'info' | 'warning' | 'error' | 'loading' | string,\n    content: string | TemplateRef<void>,\n    options?: NzMessageDataOptions\n  ): NzMessageDataFilled {\n    return this.createMessage({ type, content }, options);\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { moveUpMotion } from 'ng-zorro-antd/core';\n\nimport { NzMessageContainerComponent } from './nz-message-container.component';\nimport { NzMessageDataFilled, NzMessageDataOptions } from './nz-message.definitions';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-message',\n  exportAs: 'nzMessage',\n  preserveWhitespaces: false,\n  animations: [moveUpMotion],\n  templateUrl: './nz-message.component.html'\n})\nexport class NzMessageComponent implements OnInit, OnDestroy {\n  @Input() nzMessage: NzMessageDataFilled;\n  @Input() nzIndex: number;\n\n  protected _options: Required<NzMessageDataOptions>;\n\n  private _autoErase: boolean; // Whether to set a timeout to destroy itself.\n  private _eraseTimer: number | null = null;\n  private _eraseTimingStart: number;\n  private _eraseTTL: number; // Time to live.\n\n  constructor(private _messageContainer: NzMessageContainerComponent, protected cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    // `NzMessageContainer` does its job so all properties cannot be undefined.\n    this._options = this.nzMessage.options as Required<NzMessageDataOptions>;\n\n    if (this._options.nzAnimate) {\n      this.nzMessage.state = 'enter';\n    }\n\n    this._autoErase = this._options.nzDuration > 0;\n\n    if (this._autoErase) {\n      this._initErase();\n      this._startEraseTimeout();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._autoErase) {\n      this._clearEraseTimeout();\n    }\n  }\n\n  onEnter(): void {\n    if (this._autoErase && this._options.nzPauseOnHover) {\n      this._clearEraseTimeout();\n      this._updateTTL();\n    }\n  }\n\n  onLeave(): void {\n    if (this._autoErase && this._options.nzPauseOnHover) {\n      this._startEraseTimeout();\n    }\n  }\n\n  // Remove self\n  protected _destroy(userAction: boolean = false): void {\n    if (this._options.nzAnimate) {\n      this.nzMessage.state = 'leave';\n      this.cdr.detectChanges();\n      setTimeout(() => this._messageContainer.removeMessage(this.nzMessage.messageId, userAction), 200);\n    } else {\n      this._messageContainer.removeMessage(this.nzMessage.messageId, userAction);\n    }\n  }\n\n  private _initErase(): void {\n    this._eraseTTL = this._options.nzDuration;\n    this._eraseTimingStart = Date.now();\n  }\n\n  private _updateTTL(): void {\n    if (this._autoErase) {\n      this._eraseTTL -= Date.now() - this._eraseTimingStart;\n    }\n  }\n\n  private _startEraseTimeout(): void {\n    if (this._eraseTTL > 0) {\n      this._clearEraseTimeout();\n      this._eraseTimer = setTimeout(() => this._destroy(), this._eraseTTL);\n      this._eraseTimingStart = Date.now();\n    } else {\n      this._destroy();\n    }\n  }\n\n  private _clearEraseTimeout(): void {\n    if (this._eraseTimer !== null) {\n      clearTimeout(this._eraseTimer);\n      this._eraseTimer = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzAddOnModule } from 'ng-zorro-antd/core';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NZ_MESSAGE_DEFAULT_CONFIG_PROVIDER } from './nz-message-config';\nimport { NzMessageContainerComponent } from './nz-message-container.component';\nimport { NzMessageComponent } from './nz-message.component';\nimport { NzMessageServiceModule } from './nz-message.service.module';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, NzIconModule, NzAddOnModule, NzMessageServiceModule],\n  declarations: [NzMessageContainerComponent, NzMessageComponent],\n  providers: [NZ_MESSAGE_DEFAULT_CONFIG_PROVIDER],\n  entryComponents: [NzMessageContainerComponent]\n})\nexport class NzMessageModule {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { TemplateRef } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport type NzMessageType = 'success' | 'info' | 'warning' | 'error' | 'loading';\n\nexport interface NzMessageDataOptions {\n  nzDuration?: number;\n  nzAnimate?: boolean;\n  nzPauseOnHover?: boolean;\n}\n\n/**\n * Message data for terminal users.\n */\nexport interface NzMessageData {\n  type?: NzMessageType | string;\n  content?: string | TemplateRef<void>;\n}\n\n/**\n * Filled version of NzMessageData (includes more private properties).\n */\nexport interface NzMessageDataFilled extends NzMessageData {\n  messageId: string;\n  createdAt: Date;\n\n  options?: NzMessageDataOptions;\n  state?: 'enter' | 'leave';\n  onClose?: Subject<boolean>;\n}\n"]}