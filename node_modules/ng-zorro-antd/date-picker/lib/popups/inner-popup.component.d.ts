/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { EventEmitter, TemplateRef } from '@angular/core';
import { CandyDate, FunctionProp } from 'ng-zorro-antd/core';
import { NzCalendarI18nInterface } from 'ng-zorro-antd/i18n';
import { DisabledDateFn, PanelMode } from '../../standard-types';
import * as ɵngcc0 from '@angular/core';
export declare class InnerPopupComponent {
    showWeek: boolean;
    locale: NzCalendarI18nInterface;
    showTimePicker: boolean;
    timeOptions: any;
    enablePrev: boolean;
    enableNext: boolean;
    disabledDate: DisabledDateFn;
    dateRender: FunctionProp<TemplateRef<Date> | string>;
    selectedValue: CandyDate[];
    hoverValue: CandyDate[];
    panelMode: PanelMode;
    readonly panelModeChange: EventEmitter<PanelMode>;
    value: CandyDate;
    readonly headerChange: EventEmitter<CandyDate>;
    readonly selectDate: EventEmitter<CandyDate>;
    readonly selectTime: EventEmitter<CandyDate>;
    readonly dayHover: EventEmitter<CandyDate>;
    prefixCls: string;
    onSelectTime(date: Date): void;
    onSelectDate(date: CandyDate | Date): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<InnerPopupComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<InnerPopupComponent, "inner-popup", ["innerPopup"], { "showWeek": "showWeek"; "locale": "locale"; "showTimePicker": "showTimePicker"; "timeOptions": "timeOptions"; "enablePrev": "enablePrev"; "enableNext": "enableNext"; "disabledDate": "disabledDate"; "dateRender": "dateRender"; "selectedValue": "selectedValue"; "hoverValue": "hoverValue"; "panelMode": "panelMode"; "value": "value"; }, { "panelModeChange": "panelModeChange"; "headerChange": "headerChange"; "selectDate": "selectDate"; "selectTime": "selectTime"; "dayHover": "dayHover"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5uZXItcG9wdXAuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImlubmVyLXBvcHVwLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBBbGliYWJhLmNvbSBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2FuZHlEYXRlLCBGdW5jdGlvblByb3AgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUnO1xuaW1wb3J0IHsgTnpDYWxlbmRhckkxOG5JbnRlcmZhY2UgfSBmcm9tICduZy16b3Jyby1hbnRkL2kxOG4nO1xuaW1wb3J0IHsgRGlzYWJsZWREYXRlRm4sIFBhbmVsTW9kZSB9IGZyb20gJy4uLy4uL3N0YW5kYXJkLXR5cGVzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElubmVyUG9wdXBDb21wb25lbnQge1xuICAgIHNob3dXZWVrOiBib29sZWFuO1xuICAgIGxvY2FsZTogTnpDYWxlbmRhckkxOG5JbnRlcmZhY2U7XG4gICAgc2hvd1RpbWVQaWNrZXI6IGJvb2xlYW47XG4gICAgdGltZU9wdGlvbnM6IGFueTtcbiAgICBlbmFibGVQcmV2OiBib29sZWFuO1xuICAgIGVuYWJsZU5leHQ6IGJvb2xlYW47XG4gICAgZGlzYWJsZWREYXRlOiBEaXNhYmxlZERhdGVGbjtcbiAgICBkYXRlUmVuZGVyOiBGdW5jdGlvblByb3A8VGVtcGxhdGVSZWY8RGF0ZT4gfCBzdHJpbmc+O1xuICAgIHNlbGVjdGVkVmFsdWU6IENhbmR5RGF0ZVtdO1xuICAgIGhvdmVyVmFsdWU6IENhbmR5RGF0ZVtdO1xuICAgIHBhbmVsTW9kZTogUGFuZWxNb2RlO1xuICAgIHJlYWRvbmx5IHBhbmVsTW9kZUNoYW5nZTogRXZlbnRFbWl0dGVyPFBhbmVsTW9kZT47XG4gICAgdmFsdWU6IENhbmR5RGF0ZTtcbiAgICByZWFkb25seSBoZWFkZXJDaGFuZ2U6IEV2ZW50RW1pdHRlcjxDYW5keURhdGU+O1xuICAgIHJlYWRvbmx5IHNlbGVjdERhdGU6IEV2ZW50RW1pdHRlcjxDYW5keURhdGU+O1xuICAgIHJlYWRvbmx5IHNlbGVjdFRpbWU6IEV2ZW50RW1pdHRlcjxDYW5keURhdGU+O1xuICAgIHJlYWRvbmx5IGRheUhvdmVyOiBFdmVudEVtaXR0ZXI8Q2FuZHlEYXRlPjtcbiAgICBwcmVmaXhDbHM6IHN0cmluZztcbiAgICBvblNlbGVjdFRpbWUoZGF0ZTogRGF0ZSk6IHZvaWQ7XG4gICAgb25TZWxlY3REYXRlKGRhdGU6IENhbmR5RGF0ZSB8IERhdGUpOiB2b2lkO1xufVxuIl19