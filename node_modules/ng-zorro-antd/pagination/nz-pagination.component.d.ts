/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef } from '@angular/core';
import { NzI18nService } from 'ng-zorro-antd/i18n';
import * as ɵngcc0 from '@angular/core';
export interface PaginationItemRenderContext {
    $implicit: 'page' | 'prev' | 'next';
    page: number;
}
export declare class NzPaginationComponent implements OnInit, OnDestroy, OnChanges {
    private i18n;
    private cdr;
    locale: any;
    firstIndex: number;
    pages: number[];
    private $destroy;
    readonly nzPageSizeChange: EventEmitter<number>;
    readonly nzPageIndexChange: EventEmitter<number>;
    nzShowTotal: TemplateRef<{
        $implicit: number;
        range: [number, number];
    }>;
    nzInTable: boolean;
    nzSize: 'default' | 'small';
    nzPageSizeOptions: number[];
    nzItemRender: TemplateRef<PaginationItemRenderContext>;
    nzItemRenderChild: TemplateRef<PaginationItemRenderContext>;
    readonly itemRender: TemplateRef<PaginationItemRenderContext>;
    nzDisabled: boolean;
    nzShowSizeChanger: boolean;
    nzHideOnSinglePage: boolean;
    nzShowQuickJumper: boolean;
    nzSimple: boolean;
    nzTotal: number;
    nzPageIndex: number;
    nzPageSize: number;
    validatePageIndex(value: number): number;
    updatePageIndexValue(page: number): void;
    isPageIndexValid(value: number): boolean;
    jumpPage(index: number): void;
    jumpDiff(diff: number): void;
    onPageSizeChange($event: number): void;
    handleKeyDown(_: KeyboardEvent, input: HTMLInputElement, clearInputValue: boolean): void;
    /** generate indexes list */
    buildIndexes(): void;
    readonly lastIndex: number;
    readonly isLastIndex: boolean;
    readonly isFirstIndex: boolean;
    readonly ranges: number[];
    readonly showAddOption: boolean;
    constructor(i18n: NzI18nService, cdr: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzPaginationComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzPaginationComponent, "nz-pagination", ["nzPagination"], { "nzInTable": "nzInTable"; "nzSize": "nzSize"; "nzPageSizeOptions": "nzPageSizeOptions"; "nzDisabled": "nzDisabled"; "nzShowSizeChanger": "nzShowSizeChanger"; "nzHideOnSinglePage": "nzHideOnSinglePage"; "nzShowQuickJumper": "nzShowQuickJumper"; "nzSimple": "nzSimple"; "nzTotal": "nzTotal"; "nzPageIndex": "nzPageIndex"; "nzPageSize": "nzPageSize"; "nzShowTotal": "nzShowTotal"; "nzItemRender": "nzItemRender"; }, { "nzPageSizeChange": "nzPageSizeChange"; "nzPageIndexChange": "nzPageIndexChange"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnotcGFnaW5hdGlvbi5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsibnotcGFnaW5hdGlvbi5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFsaWJhYmEuY29tIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBTaW1wbGVDaGFuZ2VzLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTnpJMThuU2VydmljZSB9IGZyb20gJ25nLXpvcnJvLWFudGQvaTE4bic7XG5leHBvcnQgaW50ZXJmYWNlIFBhZ2luYXRpb25JdGVtUmVuZGVyQ29udGV4dCB7XG4gICAgJGltcGxpY2l0OiAncGFnZScgfCAncHJldicgfCAnbmV4dCc7XG4gICAgcGFnZTogbnVtYmVyO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTnpQYWdpbmF0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3ksIE9uQ2hhbmdlcyB7XG4gICAgcHJpdmF0ZSBpMThuO1xuICAgIHByaXZhdGUgY2RyO1xuICAgIGxvY2FsZTogYW55O1xuICAgIGZpcnN0SW5kZXg6IG51bWJlcjtcbiAgICBwYWdlczogbnVtYmVyW107XG4gICAgcHJpdmF0ZSAkZGVzdHJveTtcbiAgICByZWFkb25seSBuelBhZ2VTaXplQ2hhbmdlOiBFdmVudEVtaXR0ZXI8bnVtYmVyPjtcbiAgICByZWFkb25seSBuelBhZ2VJbmRleENoYW5nZTogRXZlbnRFbWl0dGVyPG51bWJlcj47XG4gICAgbnpTaG93VG90YWw6IFRlbXBsYXRlUmVmPHtcbiAgICAgICAgJGltcGxpY2l0OiBudW1iZXI7XG4gICAgICAgIHJhbmdlOiBbbnVtYmVyLCBudW1iZXJdO1xuICAgIH0+O1xuICAgIG56SW5UYWJsZTogYm9vbGVhbjtcbiAgICBuelNpemU6ICdkZWZhdWx0JyB8ICdzbWFsbCc7XG4gICAgbnpQYWdlU2l6ZU9wdGlvbnM6IG51bWJlcltdO1xuICAgIG56SXRlbVJlbmRlcjogVGVtcGxhdGVSZWY8UGFnaW5hdGlvbkl0ZW1SZW5kZXJDb250ZXh0PjtcbiAgICBuekl0ZW1SZW5kZXJDaGlsZDogVGVtcGxhdGVSZWY8UGFnaW5hdGlvbkl0ZW1SZW5kZXJDb250ZXh0PjtcbiAgICByZWFkb25seSBpdGVtUmVuZGVyOiBUZW1wbGF0ZVJlZjxQYWdpbmF0aW9uSXRlbVJlbmRlckNvbnRleHQ+O1xuICAgIG56RGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgbnpTaG93U2l6ZUNoYW5nZXI6IGJvb2xlYW47XG4gICAgbnpIaWRlT25TaW5nbGVQYWdlOiBib29sZWFuO1xuICAgIG56U2hvd1F1aWNrSnVtcGVyOiBib29sZWFuO1xuICAgIG56U2ltcGxlOiBib29sZWFuO1xuICAgIG56VG90YWw6IG51bWJlcjtcbiAgICBuelBhZ2VJbmRleDogbnVtYmVyO1xuICAgIG56UGFnZVNpemU6IG51bWJlcjtcbiAgICB2YWxpZGF0ZVBhZ2VJbmRleCh2YWx1ZTogbnVtYmVyKTogbnVtYmVyO1xuICAgIHVwZGF0ZVBhZ2VJbmRleFZhbHVlKHBhZ2U6IG51bWJlcik6IHZvaWQ7XG4gICAgaXNQYWdlSW5kZXhWYWxpZCh2YWx1ZTogbnVtYmVyKTogYm9vbGVhbjtcbiAgICBqdW1wUGFnZShpbmRleDogbnVtYmVyKTogdm9pZDtcbiAgICBqdW1wRGlmZihkaWZmOiBudW1iZXIpOiB2b2lkO1xuICAgIG9uUGFnZVNpemVDaGFuZ2UoJGV2ZW50OiBudW1iZXIpOiB2b2lkO1xuICAgIGhhbmRsZUtleURvd24oXzogS2V5Ym9hcmRFdmVudCwgaW5wdXQ6IEhUTUxJbnB1dEVsZW1lbnQsIGNsZWFySW5wdXRWYWx1ZTogYm9vbGVhbik6IHZvaWQ7XG4gICAgLyoqIGdlbmVyYXRlIGluZGV4ZXMgbGlzdCAqL1xuICAgIGJ1aWxkSW5kZXhlcygpOiB2b2lkO1xuICAgIHJlYWRvbmx5IGxhc3RJbmRleDogbnVtYmVyO1xuICAgIHJlYWRvbmx5IGlzTGFzdEluZGV4OiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGlzRmlyc3RJbmRleDogYm9vbGVhbjtcbiAgICByZWFkb25seSByYW5nZXM6IG51bWJlcltdO1xuICAgIHJlYWRvbmx5IHNob3dBZGRPcHRpb246IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IoaTE4bjogTnpJMThuU2VydmljZSwgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xufVxuIl19