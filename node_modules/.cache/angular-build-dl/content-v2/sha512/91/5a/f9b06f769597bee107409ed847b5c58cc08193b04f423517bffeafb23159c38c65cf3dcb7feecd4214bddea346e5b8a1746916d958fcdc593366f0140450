{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.config.ts","webpack:///src/app/app.constant.ts","webpack:///src/app/app.module.ts","webpack:///src/app/common_base/authentication/authentication.service.ts","webpack:///src/app/common_base/base.component.ts","webpack:///src/app/common_base/base.service.ts","webpack:///src/app/dashboard/dashboard-routing.module.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/icons-provider.module.ts","webpack:///src/app/models/HinhAnhBienTheDTO.ts","webpack:///src/app/models/NhanVienDTO.ts","webpack:///src/app/models/UserDTO.ts","webpack:///src/app/models/base_response.ts","webpack:///src/app/models/index.ts","webpack:///src/app/pages/account-management/users/user-dialog/user-dialog.component.ts","webpack:///src/app/pages/account-management/users/user-dialog/user-dialog.component.html","webpack:///src/app/pages/account-management/users/user-list/user-list.component.ts","webpack:///src/app/pages/account-management/users/user-list/user-list.component.html","webpack:///src/app/pages/image-management/img-bienthe/img-list/img-list.component.ts","webpack:///src/app/pages/image-management/img-bienthe/img-list/img-list.component.html","webpack:///src/app/pages/image-management/img-bienthe/upload-img-bt/upload-img-bt.component.ts","webpack:///src/app/pages/image-management/img-bienthe/upload-img-bt/upload-img-bt.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/nhanvien-management/nhanvien-detail/nhanvien-detail.component.ts","webpack:///src/app/pages/nhanvien-management/nhanvien-detail/nhanvien-detail.component.html","webpack:///src/app/pages/nhanvien-management/nhanvien-dialog/nhanvien-dialog.component.ts","webpack:///src/app/pages/nhanvien-management/nhanvien-dialog/nhanvien-dialog.component.html","webpack:///src/app/pages/nhanvien-management/nhanvien-list/nhanvien-list.component.ts","webpack:///src/app/pages/nhanvien-management/nhanvien-list/nhanvien-list.component.html","webpack:///src/app/pages/pages-routing.module.ts","webpack:///src/app/pages/pages.component.ts","webpack:///src/app/pages/pages.component.html","webpack:///src/app/pages/pages.module.ts","webpack:///src/app/shared/services/bienthe.service.ts","webpack:///src/app/shared/services/hinhanh.service.ts","webpack:///src/app/shared/services/login.service.ts","webpack:///src/app/shared/services/nhanvien.service.ts","webpack:///src/app/shared/services/role.service.ts","webpack:///src/app/shared/services/users.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","appRoutes","path","component","children","redirectTo","pathMatch","loadChildren","data","breadcrumb","AppRoutingModule","forRoot","preloadingStrategy","imports","AppComponent","isCollapsed","selector","templateUrl","styleUrls","API_ENDPOINT","localStorageKey","SITENAME","TypeMessage","Success","Warning","AppModule","provide","useValue","declarations","providers","schemas","bootstrap","AuthenticationService","http","loginService","currentUserSubject","JSON","parse","localStorage","getItem","currentUser","asObservable","value","setItem","loginDto","getToken","subscribe","response","Data","setTokenFromLocalStorage","getUser","Status","stringify","next","removeItem","providedIn","BaseComponent","router","isLogin","tokenData","getTokenFromLocalStorage","navigateByUrl","headers","Authorization","BaseService","message","modal","error","ErrorEvent","nzTitle","nzContent","console","status","url","params","get","getHeader","pipe","handleError","post","result","put","nameParam","httpParams","set","routes","DashboardRoutingModule","forChild","DashboardComponent","icons","IconsProviderModule","HinhAnhBienTheDTO","NhanVienDTO","UserDTO","BaseResponse","UserDialogComponent","userService","fb","nhanvienService","roleService","isConfirmLoading","isShowAdduser","isSaveLoading","hasEmployeeNotAccount","listUser","modelRoleModal","listRole","resetPassword","loading","selectValue","selectedEmployee","hasEmployee","userNameAsyncValidator","control","observer","setTimeout","getByUserName","Id","userDto","duplicated","complete","isAdd","initFormValidate","initFormValidateEdit","getEmployeeNotAccount","getRoles","validateForm","group","_ipText_userName","required","_selectBox_Employee","_selectBox_role","listEmployeeNotAccount","log","getAll","map","p","name","Name","resetForm","destroy","saveData","reset","key","controls","markAsPristine","updateValueAndValidity","insertUser","updateUser","createEmployeeAccount","create","updateEmployeeAccount","UserListComponent","modalService","pageTitle","headerListUserLocked","isShowAddRole","isLockAccount","isShowAddUser","listUserAccountLocked","listUserRoles","getListUsers","getAllUserAccountActive","getListUsersAccountLocked","modalCreate","nzComponentParams","nzWidth","afterClose","ngOnInit","getAllUserAccountLocked","modalEdit","UserName","changeStatusAccountToLocked","userSelected","updateStatusAccount","changeStatusAccountToActive","createUser","ImgListComponent","hinhanhDto","createNhanVien","UploadImgBTComponent","bientheService","hinhanhService","imageUrl","fileToUpload","isShowAddNhanVien","beforeUpload","file","isJpgOrPng","type","isLt2M","size","getBT","item","reader","FileReader","onload","event","target","readAsDataURL","listbt","img","callback","addEventListener","toString","info","getBase64","originFileObj","avatarUrl","DuongDan","InsertNhanVien","UpdateNhanVien","update","handleChange","LoginComponent","year","Date","getFullYear","pageFooter","isShowMessage","document","body","className","_ipText_password","i","markAsDirty","login","username","password","submitForm","userList","colorList","NhanvienDetailComponent","activatedRoute","selectedNhanvien","hasNhanvien","text","color","queryParams","getDetail","manhanvien","idx","indexOf","length","NhanvienDialogComponent","dateFormat","_ipText_CMND","minLength","maxLength","_ipText_HoLot","_ipText_TenNhanVien","_ipDate_NgaySinh","_rdo_gender","_ipText_email","email","_ipText_Sdt","_ipTextarea_DiaChi","nhanvienDto","NhanvienListComponent","nhanVienService","dataSource","loadNhanVienList","navigateDetail","navigate","modalDelete","confirm","nzOkText","nzOkType","nzOnOk","deleteNhanVien","nzCancelText","param","PagesRoutingModule","PagesComponent","authenticationService","user","x","token","logout","PagesModule","BientheService","baseSevice","HinhanhService","baseService","LoginService","NhanvienService","RoleService","UsersService","userId","userName","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,QAAMC,SAAS,GAAW,CACxB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE,2DAFb;AAGEC,cAAQ,EAAE,CACR;AACEF,YAAI,EAAE,EADR;AAEEG,kBAAU,EAAE,MAFd;AAGEC,iBAAS,EAAE;AAHb,OADQ,EAMR;AACEJ,YAAI,EAAE,MADR;AAEE;AACAK,oBAAY,EAAE;AAAA,iBAAM,+DAAN;AAAA,SAHhB;AAIEC,YAAI,EAAE;AACJC,oBAAU,EAAE;AADR;AAJR,OANQ;AAHZ,KADwB,EAoBxB;AAAEP,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE;AAA5B,KApBwB,CAA1B;;QA4BaO,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAJlB,CAAC,6DAAaC,OAAb,CAAqBV,SAArB,EAAgC;AAAEW,0BAAkB,EAAE;AAAtB,OAAhC,CAAD,CAIkB,EAHjB,4DAGiB;;;;0HAAhBF,gB,EAAgB;AAAA;AAAA,kBAHjB,4DAGiB;AAAA,O;AAHL,K;;;;;sEAGXA,gB,EAAgB;cAL5B,sDAK4B;eALnB;AACRG,iBAAO,EAAE,CAAC,6DAAaF,OAAb,CAAqBV,SAArB,EAAgC;AAAEW,8BAAkB,EAAE;AAAtB,WAAhC,CAAD,CADD;AAERb,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAKmB,Q;;;;;;;;;;;;;;;;;;ACpC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOae,Y,GALb;AAAA;;AAME,WAAAC,WAAA,GAAc,KAAd;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,gC;AAAA;AAAA;ACPzB;;AACI;;AAEI;;AACJ;;AACJ;;;;;;;;;sEDEaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;;;AACO,QAAMC,YAAY,GAAG,yBAArB;AACA,QAAMC,eAAe,GAAG,cAAxB;AACA,QAAMC,QAAQ,GAAG,QAAjB;;;;;;;;;;;;;;;;ACHP;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAMC,WAAW,GAAG;AACvBC,aAAO,EAAE,SADc;AAEvB5B,WAAK,EAAE,OAFgB;AAGvB6B,aAAO,EAAE;AAHc,KAApB;;;;;;;;;;;;;;;;ACAP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAyBA,gFAAmB,kEAAnB;;QA8BaC,S;;;;;YAAAA,S;AAAS,kBAHR,2DAGQ;;;;yBAATA,S;AAAS,O;AAAA,iBART,CAAC;AAAEC,eAAO,EAAE,2DAAX;AAAoBC,gBAAQ,EAAE;AAA9B,OAAD,EACX,kFADW,C;AACK,gBAjBP,CACP,uEADO,EAEP,oEAFO,EAGP,oEAHO,EAIP,+DAJO,EAKP,0FALO,EAMP,0EANO,EAOP,mEAPO,EAQP,+DARO,EASP,2DATO,EAUP,sEAVO,EAWP,6FAXO,EAYP,gEAZO,EAaP,mEAbO,EAcP,6FAdO,CAiBO;;;;0HAOLF,S,EAAS;AAAA,uBA1BlB,2DA0BkB,EA1BJ,4EA0BI;AA1BU,kBAG5B,uEAH4B,EAI5B,oEAJ4B,EAK5B,oEAL4B,EAM5B,+DAN4B,EAO5B,0FAP4B,EAQ5B,0EAR4B,EAS5B,mEAT4B,EAU5B,+DAV4B,EAW5B,2DAX4B,EAY5B,sEAZ4B,EAa5B,6FAb4B,EAc5B,gEAd4B,EAe5B,mEAf4B,EAgB5B,6FAhB4B;AA0BV,O;AAVK,K;;;;;sEAUdA,S,EAAS;cA5BrB,sDA4BqB;eA5BZ;AACRG,sBAAY,EAAE,CACZ,2DADY,EACE,4EADF,CADN;AAIRf,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,oEAHO,EAIP,+DAJO,EAKP,0FALO,EAMP,0EANO,EAOP,mEAPO,EAQP,+DARO,EASP,2DATO,EAUP,sEAVO,EAWP,6FAXO,EAYP,gEAZO,EAaP,mEAbO,EAcP,6FAdO,CAJD;AAoBRgB,mBAAS,EAAE,CAAC;AAAEH,mBAAO,EAAE,2DAAX;AAAoBC,oBAAQ,EAAE;AAA9B,WAAD,EACX,kFADW,CApBH;AAsBRG,iBAAO,EAAE,CACP,oEADO,CAtBD;AAyBRC,mBAAS,EAAE,CAAC,2DAAD;AAzBH,S;AA4BY,Q;;;;;;;;;;;;;;;;;;ACtDtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,qB;AAKX,qCAAoBC,IAApB,EAA8CC,YAA9C,EAAwE;AAAA;;AAApD,aAAAD,IAAA,GAAAA,IAAA;AAA0B,aAAAC,YAAA,GAAAA,YAAA;AAC5C,aAAKC,kBAAL,GAA0B,IAAI,oDAAJ,CAA6BC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAA7B,CAA1B;AACA,aAAKC,WAAL,GAAmB,KAAKL,kBAAL,CAAwBM,YAAxB,EAAnB;AACD;;;;mDAKiC;AAChC,iBAAOH,YAAY,CAACC,OAAb,CAAqB,2DAArB,CAAP;AACD;;;iDAE+BG,K,EAAe;AAC7CJ,sBAAY,CAACK,OAAb,CAAqB,2DAArB,EAA6CD,KAA7C;AACD;;;8BAEYE,Q,EAAU;AAAA;;AACrB,eAAKV,YAAL,CAAkBW,QAAlB,CAA2BD,QAA3B,EAAqCE,SAArC,CAA+C,UAAAC,QAAQ,EAAI;AACzD,gBAAIA,QAAQ,IAAIA,QAAQ,CAACC,IAArB,IAA6BD,QAAQ,CAACC,IAAT,KAAkB,MAAnD,EAA2D;AACzD,mBAAI,CAACC,wBAAL,CAA8BF,QAAQ,CAACC,IAAvC;;AACA,mBAAI,CAACE,OAAL;AACD;AACF,WALD;AAMA,iBAAO,KAAKV,WAAZ;AACD;;;kCAEiB;AAAA;;AAChB,eAAKN,YAAL,CAAkBgB,OAAlB,GAA4BJ,SAA5B,CAAsC,UAAAC,QAAQ,EAAI;AAChD,gBAAIA,QAAQ,CAACI,MAAT,KAAoB,KAAxB,EAA+B;AAC7B;AACD;;AACD,gBAAIJ,QAAQ,IAAIA,QAAQ,CAACC,IAAzB,EAA+B;AAC7BV,0BAAY,CAACK,OAAb,CAAqB,aAArB,EAAoCP,IAAI,CAACgB,SAAL,CAAeL,QAAQ,CAACC,IAAxB,CAApC;;AACA,oBAAI,CAACb,kBAAL,CAAwBkB,IAAxB,CAA6BN,QAAQ,CAACC,IAAtC;AACD;AACF,WARD;AASD;;;iCAEe;AACd;AACA,eAAKC,wBAAL,CAA8B,EAA9B;AACAX,sBAAY,CAACgB,UAAb,CAAwB,aAAxB;AACA,eAAKnB,kBAAL,CAAwBkB,IAAxB,CAA6B,IAA7B;AACD;;;4BAvC0B;AACzB,iBAAO,KAAKlB,kBAAL,CAAwBO,KAA/B;AACD;;;;;;;uBAXUV,qB,EAAqB,uH,EAAA,0I;AAAA,K;;;aAArBA,qB;AAAqB,eAArBA,qBAAqB,K;AAAA,kBAFpB;;;;;sEAEDA,qB,EAAqB;cAHjC,wDAGiC;eAHtB;AACVuB,oBAAU,EAAE;AADF,S;AAGsB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACVlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,a;AAET,6BACWC,MADX,EAEWvB,YAFX,EAEuC;AAAA;;AAD5B,aAAAuB,MAAA,GAAAA,MAAA;AACA,aAAAvB,YAAA,GAAAA,YAAA;AACP,aAAKwB,OAAL;AACH;;;;iDAEwBhB,K,EAAe;AACpCJ,sBAAY,CAACK,OAAb,CAAqB,2DAArB,EAA6CD,KAA7C;AACH;;;kCAES;AACN,cAAMiB,SAAS,GAAG,KAAKC,wBAAL,EAAlB;;AACA,cAAID,SAAS,IAAIA,SAAS,KAAK,MAA/B,EAAuC,CACtC,CADD,MACO;AACH,iBAAKV,wBAAL,CAA8B,EAA9B;AACA,iBAAKQ,MAAL,CAAYI,aAAZ,CAA0B,QAA1B;AACH;AACJ;;;mDACiC;AAC9B,iBAAOvB,YAAY,CAACC,OAAb,CAAqB,2DAArB,CAAP;AACH;;;yDAEuC;AACpCD,sBAAY,CAACgB,UAAb,CAAwB,2DAAxB;AACH;;;oCAEgB;AACb,cAAMQ,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC5B,4BAAgB,kBADY;AAE5B,gDAAoC,MAFR;AAG5B,4CAAgC,GAHJ;AAI5B,4CAAgC,GAJJ;AAK5B,2CAA+B,GALH;AAM5BC,yBAAa,EAAE,YAAY,KAAKH,wBAAL;AANC,WAAhB,CAAhB;AAQA,iBAAOE,OAAP;AACH;;;;;;;;;;;;;;;;;;;;;AC3CL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaE,W;AACX,2BAAoB/B,IAApB,EAA8CgC,OAA9C,EAAiFC,KAAjF,EAAwG;AAAA;;AAApF,aAAAjC,IAAA,GAAAA,IAAA;AAA0B,aAAAgC,OAAA,GAAAA,OAAA;AAAmC,aAAAC,KAAA,GAAAA,KAAA;AAA0B;;;;oCAE1F;AACb,cAAMJ,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC5B,4BAAgB,kBADY;AAE5B,gDAAoC,MAFR;AAG5B,4CAAgC,GAHJ;AAI5B,4CAAgC,GAJJ;AAK5B,2CAA+B;AALH,WAAhB,CAAhB;AAOA,iBAAOA,OAAP;AACH;;;oCACmBK,K,EAA0B;AAC1C,cAAIA,KAAK,CAACA,KAAN,YAAuBC,UAA3B,EAAuC;AACnC;AACA,iBAAKF,KAAL,CAAWC,KAAX,CAAiB;AACbE,qBAAO,EAAE,0BADI;AAEbC,uBAAS,EAAEH,KAAK,CAACA,KAAN,CAAYF;AAFV,aAAjB;AAKAM,mBAAO,CAACJ,KAAR,CAAc,oBAAd,EAAoCA,KAAK,CAACA,KAAN,CAAYF,OAAhD;AACH,WARD,MAQO;AACH;AACA;AACAM,mBAAO,CAACJ,KAAR,CACI,gCAAyBA,KAAK,CAACK,MAA/B,8BACaL,KAAK,CAACA,KADnB,CADJ;AAGH,WAfyC,CAgB1C;;;AACA,iBAAO,wDACH,iDADG,CAAP;AAEH;;;4BAEaM,G,EAAaC,M,EAAY;AACnC,iBAAO,KAAKzC,IAAL,CAAU0C,GAAV,CAAc,2DAAsBF,GAApC,EAAyC;AAAEC,kBAAM,EAANA,MAAF;AAAUZ,mBAAO,EAAE,KAAKc,SAAL;AAAnB,WAAzC,EACFC,IADE,CAEC,6DAAM,CAAN,CAFD,EAEW;AACV,4EAAW,KAAKC,WAAhB,CAHD,CAG8B;AAH9B,WAAP;AAKH;;;6BAEcL,G,EAAajE,I,EAAS;AACjC,iBAAO,KAAKyB,IAAL,CAAU8C,IAAV,CAAe,2DAAsBN,GAArC,EAA0CjE,IAA1C,EAAgD;AAAEsD,mBAAO,EAAE,KAAKc,SAAL;AAAX,WAAhD,EACFC,IADE,CAEC,2DAAI,UAAAG,MAAM;AAAA,mBAAIA,MAAJ;AAAA,WAAV,CAFD,EAGC,kEAAW,KAAKF,WAAhB,CAHD,CAAP;AAKH;AAED;;;;4BACcL,G,EAAajE,I,EAAS;AAChC,iBAAO,KAAKyB,IAAL,CAAUgD,GAAV,CAAc,2DAAsBR,GAApC,EAAyCjE,IAAzC,EAA+C;AAAEsD,mBAAO,EAAE,KAAKc,SAAL;AAAX,WAA/C,EACFC,IADE,CAEC,2DAAI,UAAAG,MAAM;AAAA,mBAAIA,MAAJ;AAAA,WAAV,CAFD,EAGC,kEAAW,KAAKF,WAAhB,CAHD,CAAP;AAIH;AAED;;;;gCACiBL,G,EAAajE,I,EAAS;AACnC,iBAAO,KAAKyB,IAAL,WAAiB,2DAAsBwC,GAAvC,EAA4C;AAAEX,mBAAO,EAAE,KAAKc,SAAL,EAAX;AAA6BF,kBAAM,EAAElE;AAArC,WAA5C,EACFqE,IADE,CAEC,2DAAI,UAAAG,MAAM;AAAA,mBAAIA,MAAJ;AAAA,WAAV,CAFD,EAGC,kEAAW,KAAKF,WAAhB,CAHD,CAAP;AAKH;;;kCAEmBL,G,EAAazE,E,EAAYkF,S,EAAiB;AAC1D,cAAMC,UAAU,GAAG,IAAI,+DAAJ,GAAiBC,GAAjB,CAAqBF,SAArB,EAAgClF,EAAhC,CAAnB;AAEA,iBAAO,KAAKiC,IAAL,CAAU0C,GAAV,CAAc,2DAAsBF,GAApC,EAAyC;AAAEX,mBAAO,EAAE,KAAKc,SAAL,EAAX;AAA6BF,kBAAM,EAAES;AAArC,WAAzC,EACFN,IADE,CAEC,2DAAI,UAAAG,MAAM;AAAA,mBAAIA,MAAJ;AAAA,WAAV,CAFD,EAGC,kEAAW,KAAKF,WAAhB,CAHD,CAAP;AAKH;;;;;;;uBA3EUd,W,EAAW,uH,EAAA,sH,EAAA,oH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVT,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACXxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAM8B,MAAM,GAAW,CAAC;AACtBnF,UAAI,EAAE,EADgB;AAEtBC,eAAS,EAAE;AAFW,KAAD,CAAvB;;QAUamF,sB;;;;;YAAAA;;;;yBAAAA,sB;AAAsB,O;AAAA,gBAHxB,CAAC,6DAAaC,QAAb,CAAsBF,MAAtB,CAAD,CAGwB,EAFvB,4DAEuB;;;;0HAAtBC,sB,EAAsB;AAAA;AAAA,kBAFvB,4DAEuB;AAAA,O;AAFX,K;;;;;sEAEXA,sB,EAAsB;cAJlC,sDAIkC;eAJzB;AACRzE,iBAAO,EAAE,CAAC,6DAAa0E,QAAb,CAAsBF,MAAtB,CAAD,CADD;AAERtF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAIyB,Q;;;;;;;;;;;;;;;;;;ACfnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOayF,kB;AAKX,oCAAc;AAAA;;AAFd,aAAAzE,WAAA,GAAc,KAAd;AAEiB;;;;mCAEN,CACV;;;0CAEc;AACb,eAAKA,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACD;;;;;;;uBAZUyE,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,oC;AAAA,c;AAAA,a;AAAA,gE;AAAA;;;;;sEAAlBA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTxE,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;ACP/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAUA,QAAMuE,KAAK,GAAG,CAAC,+EAAD,EAAkB,iFAAlB,EAAqC,gFAArC,EAAuD,2EAAvD,CAAd;;QASaC,mB;;;;;YAAAA;;;;yBAAAA,mB;AAAmB,O;AAAA,iBAJnB,CACT;AAAEhE,eAAO,EAAE,2DAAX;AAAqBC,gBAAQ,EAAE8D;AAA/B,OADS,C;AAEV,gBAJQ,CAAC,+DAAD,CAIR,EAHS,+DAGT;;;;0HAEUC,mB,EAAmB;AAAA,kBANpB,+DAMoB;AANR,kBACZ,+DADY;AAMQ,O;AALR,K;;;;;sEAKXA,mB,EAAmB;cAP/B,sDAO+B;eAPtB;AACR7E,iBAAO,EAAE,CAAC,+DAAD,CADD;AAERd,iBAAO,EAAE,CAAC,+DAAD,CAFD;AAGR8B,mBAAS,EAAE,CACT;AAAEH,mBAAO,EAAE,2DAAX;AAAqBC,oBAAQ,EAAE8D;AAA/B,WADS;AAHH,S;AAOsB,Q;;;;;;;;;;;;;;;;;;ACjBhC;AAAA;;;AAAA;AAAA;AAAA;;QAAaE,iB;;;;;;;;;;;;;;;;;;;ACFb;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,W;;;;;;;;;;;;;;;;;;;ACEb;AAAA;;;AAAA;AAAA;AAAA;;QAAcC,O;;;;;;;;;;;;;;;;;;;ACFd;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,Y;;;;QAMPnG,K;;;;;;;;;;;;;;;;;;;ACNN;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACOwB;;AACI;;AACJ;;;;;;AADe;;AAAA;;AAA8D;;;;;;;;AALzF;;AACI;;AAA0B;;AAAc;;AACxC;;AACI;;AAAoH;AAAA;;AAAA;;AAAA;AAAA;;AAChH;;AAGJ;;AACJ;;AACJ;;;;;;AAN4H;;AAAA;;AAClG;;AAAA;;;;;;;;AAOtB;;AACI;;AAAe;;AAAc;;AAC7B;;AACI;;AAAoH;AAAA;;AAAA;;AAAA;AAAA;;AAChH;;AACJ;;AACJ;;AACJ;;;;;;AAJ4H;;AAAA;;AACrG;;AAAA;;AAAkG;;;;;;AAajH;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AALA;;AAGA;;;;;;AAHc;;AAGA;;AAAA;;;;;;AAad;;AACI;;AACJ;;;;;;AADe;;AAAA,6FAAuB,SAAvB,EAAuB,aAAvB;;;;;;AAG4B;;;;;;AAAA;;;;;;;;AAT3D;;AACI;;AACI;;AAA0B;;AAAiB;;AAC3C;;AACI;;AAAsH;AAAA;;AAAA;;AAAA;AAAA;;AAClH;;AAGJ;;AACA;;AACJ;;AACJ;;AACJ;;;;;;;;AAZY;;AAIW;;AAAA,qFAAmB,qBAAnB,EAAmB,IAAnB,EAAmB,SAAnB,EAAmB,sBAAnB;;AACO;;AAAA;;;;;;;;AASlC;;AACI;;AAAmC;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAG;;AACrE;;AAAmG;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAG;;AACzI;;;;;;AADuC;;AAAA,uGAA8B,UAA9B,EAA8B,0BAA9B;;;;QD1C9BoG,mB;AA2BX,mCACUC,WADV,EAEUC,EAFV,EAGUhC,OAHV,EAIUC,KAJV,EAKUgC,eALV,EAMUC,WANV,EAMkC;AAAA;;AAAA;;AALxB,aAAAH,WAAA,GAAAA,WAAA;AACA,aAAAC,EAAA,GAAAA,EAAA;AACA,aAAAhC,OAAA,GAAAA,OAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAAgC,eAAA,GAAAA,eAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AA/BV,aAAAC,gBAAA,GAAmB,KAAnB;AACA,aAAAC,aAAA,GAAgB,KAAhB;AACA,aAAAC,aAAA,GAAgB,KAAhB;AACA,aAAAC,qBAAA,GAAwB,KAAxB;AAEA,aAAAC,QAAA,GAAsB,EAAtB;AACA,aAAAC,cAAA,GAAsB,EAAtB;AACA,aAAAC,QAAA,GAAsB,EAAtB;AAQA,aAAAC,aAAA,GAAgB,KAAhB;AAEA,aAAAC,OAAA,GAAU,KAAV;AAKA,aAAAC,WAAA,GAAc,IAAd;AACA,aAAAC,gBAAA,GAAwB,EAAxB;AACA,aAAAC,WAAA,GAAmB,KAAnB;;AA8CA,aAAAC,sBAAA,GAAyB,UAACC,OAAD;AAAA,iBACvB,IAAI,+CAAJ,CAAe,UAACC,QAAD,EAAiD;AAC9DC,sBAAU,CAAC,YAAM;AACf,oBAAI,CAACnB,WAAL,CAAiBoB,aAAjB,CAA+BH,OAAO,CAACvE,KAAvC,EAA8CI,SAA9C,CAAwD,UAAAC,QAAQ,EAAI;AAClE,oBAAIA,QAAQ,CAACI,MAAT,IAAmBJ,QAAQ,CAACC,IAAhC,EAAsC;AACpC,wBAAI,CAAC8D,gBAAL,GAAwB/D,QAAQ,CAACC,IAAjC,CADoC,CAEpC;;AACA,sBAAI,MAAI,CAAC8D,gBAAL,CAAsBO,EAAtB,IAA4B,MAAI,CAACC,OAAL,CAAaD,EAA7C,EAAiD;AAC/CH,4BAAQ,CAAC7D,IAAT,CAAc;AAAEc,2BAAK,EAAE,IAAT;AAAeoD,gCAAU,EAAE;AAA3B,qBAAd;AACD,mBAFD,MAEO;AACLL,4BAAQ,CAAC7D,IAAT,CAAc,IAAd;AACD;AACF,iBARD,MAQO;AACL6D,0BAAQ,CAAC7D,IAAT,CAAc,IAAd;AACD;;AACD6D,wBAAQ,CAACM,QAAT;AACD,eAbD;AAcD,aAfS,EAeP,IAfO,CAAV;AAgBD,WAjBD,CADuB;AAAA,SAAzB;AAtCK;;;;mCAEG;AACN,cAAI,KAAKC,KAAT,EAAgB;AACd,iBAAKC,gBAAL;AACD,WAFD,MAEO;AACL,iBAAKC,oBAAL;AACD;;AACD,eAAKC,qBAAL;AACA,eAAKC,QAAL;AACD;;;2CAEuB;AACtB,eAAKC,YAAL,GAAoB,KAAK7B,EAAL,CAAQ8B,KAAR,CAAc;AAChCC,4BAAgB,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,CAAL,EAA4B,CAAC,KAAKjB,sBAAN,CAA5B,CADc;AAEhCkB,+BAAmB,EAAE,CAAC,EAAD,EAAK,0DAAWD,QAAhB,CAFW;AAGhCE,2BAAe,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWF,QAAZ,CAAL;AAHe,WAAd,CAApB;AAKD;;;+CAC2B;AAC1B,eAAKH,YAAL,GAAoB,KAAK7B,EAAL,CAAQ8B,KAAR,CAAc;AAChCC,4BAAgB,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,CAAL,EAA4B,CAAC,KAAKjB,sBAAN,CAA5B,CADc;AAEhCkB,+BAAmB,EAAE,CAAC,EAAD,CAFW;AAGhCC,2BAAe,EAAE,CAAC,EAAD;AAHe,WAAd,CAApB;AAKD;;;gDAE4B;AAAA;;AAC3B,eAAKjC,eAAL,CAAqB0B,qBAArB,GAA6C9E,SAA7C,CAAuD,UAAAC,QAAQ,EAAI;AACjE,gBAAIA,QAAQ,IAAIA,QAAQ,CAACI,MAArB,IAA+BJ,QAAQ,CAACC,IAA5C,EAAkD;AAChD,oBAAI,CAACoF,sBAAL,GAA8BrF,QAAQ,CAACC,IAAvC;AACA,oBAAI,CAACuD,qBAAL,GAA6B,IAA7B;AACAhC,qBAAO,CAAC8D,GAAR,CAAY,MAAI,CAACD,sBAAjB;AACD;AACF,WAND;AAOD;;;mCAuBe;AAAA;;AACd,eAAKjC,WAAL,CAAiBmC,MAAjB,GAA0BxF,SAA1B,CAAoC,UAAAC,QAAQ,EAAI;AAC9C,gBAAIA,QAAQ,IAAIA,QAAQ,CAACI,MAAzB,EAAiC;AAC/B,oBAAI,CAACuD,QAAL,GAAgBtE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACgB,SAAL,CAAeL,QAAQ,CAACC,IAAxB,CAAX,CAAhB;AACA,oBAAI,CAACyD,cAAL,GAAsBrE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACgB,SAAL,CAAeL,QAAQ,CAACC,IAAT,CAAcuF,GAAd,CAAkB,UAAAC,CAAC,EAAI;AACrE,uBAAO;AAAEC,sBAAI,EAAED,CAAC,CAACE,IAAV;AAAgB1I,oBAAE,EAAEwI,CAAC,CAACnB;AAAtB,iBAAP;AACD,eAF+C,CAAf,CAAX,CAAtB;AAGD;AACF,WAPD;AAQD;;;6CAEwB;AACvB,eAAKsB,SAAL;AACA,eAAKzE,KAAL,CAAW0E,OAAX;AACD;;;6CAEwB;AAAA;;AACvB,eAAKtC,aAAL,GAAqB,IAArB;AACA,eAAKuC,QAAL;AACA1B,oBAAU,CAAC,YAAM;AACf,kBAAI,CAACb,aAAL,GAAqB,KAArB;AACD,WAFS,EAEP,IAFO,CAAV;AAGA,eAAKpC,KAAL,CAAW0E,OAAX;AACD;;;oCAEQ;AACP,eAAKd,YAAL,CAAkBgB,KAAlB,GADO,CAEP;;AACA,eAAK,IAAMC,GAAX,IAAkB,KAAKjB,YAAL,CAAkBkB,QAApC,EAA8C;AAC5C,iBAAKlB,YAAL,CAAkBkB,QAAlB,CAA2BD,GAA3B,EAAgCE,cAAhC;AACA,iBAAKnB,YAAL,CAAkBkB,QAAlB,CAA2BD,GAA3B,EAAgCG,sBAAhC;AACD;AACF;;;mCAEkB;AACjB,eAAK9C,gBAAL,GAAwB,IAAxB;;AACA,cAAI,CAAC,KAAKkB,OAAN,IAAiB,KAAKG,KAA1B,EAAiC;AAC/B,iBAAK0B,UAAL;AAED,WAHD,MAGO;AACL,iBAAKC,UAAL;AACD;AACF;;;qCAEiB;AAAA;;AAChB,cAAI,KAAK9B,OAAT,EAAkB;AAChB,iBAAKA,OAAL,CAAanE,MAAb,GAAsB,QAAtB;AACA,iBAAK6C,WAAL,CAAiBqD,qBAAjB,CAAuC,KAAK/B,OAA5C,EAAqDxE,SAArD,CAA+D,UAAAC,QAAQ,EAAI;AACzE,kBAAIA,QAAQ,IAAIA,QAAQ,CAACI,MAAzB,EAAiC;AAC/B,sBAAI,CAACc,OAAL,CAAaqF,MAAb,CAAoB,iEAAY/H,OAAhC,EAAyC,2BAAzC;AACD,eAFD,MAEO;AACL,sBAAI,CAAC0C,OAAL,CAAaqF,MAAb,CAAoB,iEAAY3J,KAAhC,EAAuC,0BAAvC;AACD;;AACD,oBAAI,CAACyG,gBAAL,GAAwB,KAAxB;AACD,aAPD;AAQA,iBAAKuC,SAAL;AACD;AAEF;;;qCACoB;AAAA;;AACnB,cAAI,KAAKrB,OAAT,EAAkB;AAChB,iBAAKtB,WAAL,CAAiBuD,qBAAjB,CAAuC,KAAKjC,OAA5C,EAAqDxE,SAArD,CAA+D,UAAAC,QAAQ,EAAI;AACvE,kBAAIA,QAAQ,IAAIA,QAAQ,CAACI,MAAzB,EAAiC;AAC/B,sBAAI,CAACc,OAAL,CAAaqF,MAAb,CAAoB,iEAAY/H,OAAhC,EAAyC,0CAAzC;AACD,eAFD,MAEO;AACL,sBAAI,CAAC0C,OAAL,CAAaqF,MAAb,CAAoB,iEAAY3J,KAAhC,EAAuC,iDAAvC;AACD;;AACD,oBAAI,CAACyG,gBAAL,GAAwB,KAAxB;AACD,aAPH;AAQD;AACF;;;;;;;uBAlKUL,mB,EAAmB,mJ,EAAA,2H,EAAA,+H,EAAA,yH,EAAA,yJ,EAAA,iJ;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,m4C;AAAA;AAAA;AChBhC;;AACI;;AACI;;AACI;;AAUA;;AAWJ;;AACA;;AACI;;AACI;;AAA0B;;AAAa;;AACvC;;AACI;;AAA4C;AAAA;AAAA;;AAA5C;;AACA;;AAQJ;;AAEJ;;AACJ;;AACA;;AAaJ;;AACA;;AAIJ;;;;;;;;AA5Dc;;AACE;;AAAA;;AAEU;;AAAA,sFAAgC,UAAhC,EAAgC,GAAhC;;AAyBqB;;AAAA;;AACiB;;AAAA;;AAa9B;;AAAA;;;;;;;;;sED1BrBA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACT/E,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;gBAW7B;;;gBACA;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AE9BH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkC4B;;AACI;;AAAI;;AAAc;;AACtB;;;;;;AADQ;;AAAA;;;;;;AAKZ;;AACI;;AAAqB;;AAAuD;;AAAc;;AAC9F;;;;;;AACA;;AACI;;AAAqB;;AAA+C;;AAAO;;AAC/E;;;;;;;;AApBR;;AACI;;AAAI;;AAAO;;AACX;;AAAI;;AAAiB;;AAKrB;;AACI;;AACI;;AAGJ;;AACJ;;AACA;;AACI;;AAGA;;AAGJ;;AACA;;AACI;;AACV;;AAAyB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAI;;AACxD;;AACY;;AACV;;AAAgC;;AAClC;;AACY;;AACR;;AAA4B;;AAC9B;;AACU;;AACR;;AAAyB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAI;;AAC5D;;AACM;;AACJ;;;;;;;AAnCQ;;AAAA;;AACA;;AAAA;;AAOkB;;AAAA;;AAMJ;;AAAA;;AAGA;;AAAA;;;;;;AAmDV;;AACI;;AAAI;;AAAc;;AACtB;;;;;;AADQ;;AAAA;;;;;;AAKZ;;AACI;;AAAqB;;AAAuD;;AAAc;;AAC9F;;;;;;AACA;;AACI;;AAAqB;;AAA+C;;AAAO;;AAC/E;;;;;;;;AAnBR;;AACI;;AAAI;;AAAO;;AACX;;AAAI;;AAAiB;;AAIrB;;AACI;;AACI;;AAGJ;;AACJ;;AACA;;AACI;;AAGA;;AAGJ;;AACA;;AACI;;AACV;;AAA2B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAI;;AAC/D;;AACQ;;AACJ;;;;;;;AAzBQ;;AAAA;;AACA;;AAAA;;AAMkB;;AAAA;;AAMJ;;AAAA;;AAGA;;AAAA;;;;QD1FzBsI,iB;AAqBX,iCACUvD,EADV,EAEUD,WAFV,EAGUyD,YAHV,EAIUxF,OAJV,EAImC;AAAA;;AAHzB,aAAAgC,EAAA,GAAAA,EAAA;AACA,aAAAD,WAAA,GAAAA,WAAA;AACA,aAAAyD,YAAA,GAAAA,YAAA;AACA,aAAAxF,OAAA,GAAAA,OAAA;AAxBV,aAAAyF,SAAA,GAAoB,0CAApB;AACA,aAAAC,oBAAA,GAA+B,6BAA/B;AAGA,aAAAC,aAAA,GAAgB,KAAhB;AACA,aAAAtD,aAAA,GAAgB,KAAhB;AACA,aAAAuD,aAAA,GAAgB,KAAhB;AACO,aAAAC,aAAA,GAAgB,KAAhB;AACA,aAAA1D,gBAAA,GAAmB,KAAnB;AAEP,aAAAI,QAAA,GAAsB,EAAtB;AACA,aAAAuD,qBAAA,GAAmC,EAAnC;AACA,aAAAtD,cAAA,GAAsB,EAAtB;AACA,aAAAuD,aAAA,GAAqB,EAArB;AAYI;;;;mCAEI;AACJ;AACA,eAAKC,YAAL;AAEH;;;uCAEmB;AAAA;;AAClB,eAAK7D,gBAAL,GAAwB,IAAxB;AACAe,oBAAU,CAAC,YAAM;AACf,kBAAI,CAACnB,WAAL,CAAiBkE,uBAAjB,GAA2CpH,SAA3C,CAAqD,UAAAC,QAAQ,EAAI;AAC/D,kBAAIA,QAAQ,IAAIA,QAAQ,CAACI,MAAzB,EAAiC;AAC/B,sBAAI,CAACqD,QAAL,GAAgBpE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACgB,SAAL,CAAeL,QAAQ,CAACC,IAAxB,CAAX,CAAhB;AAAmE;AACtE,aAHD;AAID,WALS,EAKP,IALO,CAAV;AAMA,eAAKoD,gBAAL,GAAwB,KAAxB;AACA,eAAK+D,yBAAL;AACD,S,CAED;AACA;AACA;AACA;AACA;AACA;AACA;;;;qCAEU;AAAA;;AACR,cAAMC,WAAW,GAAG,KAAKX,YAAL,CAAkBH,MAAlB,CAAyB;AAC3CjF,mBAAO,EAAE,2BADkC;AAE3CC,qBAAS,EAAE,sFAFgC;AAG3C+F,6BAAiB,EAAE;AACjB5C,mBAAK,EAAE,IADU;AAEjBH,qBAAO,EAAE,IAAI,8DAAJ;AAFQ,aAHwB;AAO3CgD,mBAAO,EAAE;AAPkC,WAAzB,CAApB,CADQ,CAUR;;AACAF,qBAAW,CAACG,UAAZ,CAAuBzH,SAAvB,CAAiC,YAAM;AACrC,mBAAO,OAAI,CAAC0H,QAAL,EAAP;AACD,WAFD;AAGD;;;oDAEgC;AAAA;;AAC/B,eAAKpE,gBAAL,GAAwB,IAAxB;AACAe,oBAAU,CAAC,YAAM;AACf,mBAAI,CAACnB,WAAL,CAAiByE,uBAAjB,GAA2C3H,SAA3C,CAAqD,UAAAC,QAAQ,EAAI;AAC/D,kBAAIA,QAAQ,IAAIA,QAAQ,CAACI,MAAzB,EAAiC;AAC/B,uBAAI,CAAC4G,qBAAL,GAA6B3H,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACgB,SAAL,CAAeL,QAAQ,CAACC,IAAxB,CAAX,CAA7B;AACD;AACF,aAJD;AAKD,WANS,EAMP,IANO,CAAV;AAOA,eAAKoD,gBAAL,GAAwB,KAAxB;AACD;;;iCAEQ5F,I,EAAW;AAAA;;AAClB,cAAMkK,SAAS,GAAG,KAAKjB,YAAL,CAAkBH,MAAlB,CAAyB;AACzCjF,mBAAO,EAAE,mCAAmC7D,IAAI,CAACmK,QADR;AAEzCrG,qBAAS,EAAE,sFAF8B;AAGzC+F,6BAAiB,EAAE;AACjB/C,qBAAO,EAAElF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACgB,SAAL,CAAe5C,IAAf,CAAX;AADQ,aAHsB;AAMzC8J,mBAAO,EAAE;AANgC,WAAzB,CAAlB,CADkB,CASlB;;AACAI,mBAAS,CAACH,UAAV,CAAqBzH,SAArB,CAA+B,YAAM;AACnC,mBAAO,OAAI,CAAC0H,QAAL,EAAP;AACD,WAFD;AAGD;;;oCAGWhK,I,EAAW;AAAA;;AACrB,eAAK4F,gBAAL,GAAwB,IAAxB;AACAe,oBAAU,CAAC,YAAM;AACf,mBAAI,CAACyD,2BAAL,CAAiCpK,IAAjC;AACD,WAFS,EAEP,IAFO,CAAV;AAGD;;;oDAEmCqK,Y,EAAmB;AAAA;;AACrD,cAAIA,YAAJ,EAAkB;AAChBA,wBAAY,CAAC1H,MAAb,GAAsB,QAAtB;AACA,iBAAK6C,WAAL,CAAiB8E,mBAAjB,CAAqCD,YAArC,EAAmD/H,SAAnD,CAA6D,UAAAC,QAAQ,EAAI;AACvE,kBAAIA,QAAQ,IAAIA,QAAQ,CAACI,MAAzB,EAAiC;AAC/B,uBAAI,CAACc,OAAL,CAAaqF,MAAb,CAAoB,iEAAY/H,OAAhC,EAAyC,4BAAzC;AAED,eAHD,MAGO;AACL,uBAAI,CAAC0C,OAAL,CAAaqF,MAAb,CAAoB,iEAAY3J,KAAhC,EAAuC,kCAAvC;AAED;;AACD,qBAAI,CAACyG,gBAAL,GAAwB,KAAxB;;AACA,qBAAI,CAACoE,QAAL;AACD,aAVD;AAYD;AACF;;;sCAEahK,I,EAAW;AAAA;;AACvB,eAAK4F,gBAAL,GAAwB,IAAxB;AACAe,oBAAU,CAAC,YAAM;AACf,mBAAI,CAAC4D,2BAAL,CAAiCvK,IAAjC;AACD,WAFS,EAEP,IAFO,CAAV;AAGD;;;oDAGmCqK,Y,EAAmB;AAAA;;AACrD,cAAIA,YAAJ,EAAkB;AAChBA,wBAAY,CAAC1H,MAAb,GAAsB,QAAtB;AACA,iBAAK6C,WAAL,CAAiB8E,mBAAjB,CAAqCD,YAArC,EAAmD/H,SAAnD,CAA6D,UAAAC,QAAQ,EAAI;AACvE,kBAAIA,QAAQ,IAAIA,QAAQ,CAACI,MAAzB,EAAiC;AAC/B,uBAAI,CAACc,OAAL,CAAaqF,MAAb,CAAoB,iEAAY/H,OAAhC,EAAyC,+BAAzC;AAED,eAHD,MAGO;AACL,uBAAI,CAAC0C,OAAL,CAAaqF,MAAb,CAAoB,iEAAY3J,KAAhC,EAAuC,qCAAvC;AAED;;AACD,qBAAI,CAACyG,gBAAL,GAAwB,KAAxB;;AACA,qBAAI,CAACoE,QAAL;AACD,aAVD;AAWD;AACF;;;;;;;uBAlJUhB,iB,EAAiB,2H,EAAA,mJ,EAAA,6H,EAAA,+H;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,e;AAAA,c;AAAA,4yB;AAAA;AAAA;ACb9B;;AACI;;AAAsB;;;;AAAyB;;AAC/C;;AAEI;;AAAsE;AAAA,mBAAS,IAAAwB,UAAA,EAAT;AAAqB,WAArB;;AACxE;;AAA6B;;AAC/B;;AACA;;AAEA;;AAEI;;AACI;;AACI;;AACI;;AAAI;;AAAG;;AACP;;AAAI;;AAAa;;AACjB;;AAAI;;AAAS;;AACb;;AAAI;;AAAO;;AACX;;AAAI;;AAAK;;AACT;;AAAI;;AAAO;;AACX;;AAAI;;AAAM;;AACV;;AACJ;;AACJ;;AACA;;AACI;;AAqCJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAsB;;;;AAAoC;;AAE1D;;AAEI;;AACI;;AACI;;AACI;;AAAI;;AAAG;;AACP;;AAAI;;AAAa;;AACjB;;AAAI;;AAAS;;AACb;;AAAI;;AAAO;;AACX;;AAAI;;AAAK;;AACT;;AAAI;;AAAO;;AACX;;AAAI;;AAAM;;AACV;;AACJ;;AACJ;;AACA;;AACI;;AA2BJ;;AACJ;;AACJ;;AACJ;;;;;;;;AAnH0B;;AAAA;;AAUc;;AAAA,2FAAmB,WAAnB,EAAmB,oBAAnB;;AAcpB;;AAAA;;AA2CM;;AAAA;;AAIoB;;AAAA,wGAAgC,WAAhC,EAAgC,oBAAhC;;AAc1B;;AAAA;;;;;;;;;;sEDzEPxB,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTxI,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEb9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUa+J,gB;AAEX,gCACUxB,YADV,EACsC;AAAA;;AAA5B,aAAAA,YAAA,GAAAA,YAAA;AACL;;;;mCAEG,CACP;;;yCACa;AAAA;;AACZ,cAAMW,WAAW,GAAG,KAAKX,YAAL,CAAkBH,MAAlB,CAAyB;AAC3CjF,mBAAO,EAAE,gBADkC;AAE3CC,qBAAS,EAAE,2FAFgC;AAG3C+F,6BAAiB,EAAE;AACjB5C,mBAAK,EAAE,IADU;AAEjByD,wBAAU,EAAE,IAAI,kFAAJ;AAFK,aAHwB;AAO3CZ,mBAAO,EAAE;AAPkC,WAAzB,CAApB,CADY,CAUZ;;AACAF,qBAAW,CAACG,UAAZ,CAAuBzH,SAAvB,CAAiC,YAAM;AACrC,mBAAO,OAAI,CAAC0H,QAAL,EAAP;AACD,WAFD;AAGD;;;;;;;uBAtBUS,gB,EAAgB,6H;AAAA,K;;;YAAhBA,gB;AAAgB,mC;AAAA,c;AAAA,a;AAAA,0I;AAAA;AAAA;ACT7B;;AAAsE;AAAA,mBAAS,IAAAE,cAAA,EAAT;AAAyB,WAAzB;;AAClE;;AAA6B;;AAC/B;;;;;;;;;sEDOWF,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTjK,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;AEV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACwCwB;;AACI;;AACJ;;;;;;AADe;;AAAA;;AAA8B;;;;;;AAc7C;;AACI;;AACA;;AAA6B;;AAAM;;AACvC;;;;;;AAFmC;;AAAA;;;;;;AAGnC;;;;;;AAAuB;;;;;;;;AAO3C;;AACI;;AAAmC;;AAAG;;AACtC;;AAAmC;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAG;;AACzE;;;;QDvDSkK,oB;AAcX,oCACUC,cADV,EAEUpH,OAFV,EAGUgC,EAHV,EAIUqF,cAJV,EAKUpH,KALV,EAK2B;AAAA;;AAAA;;AAJjB,aAAAmH,cAAA,GAAAA,cAAA;AACA,aAAApH,OAAA,GAAAA,OAAA;AACA,aAAAgC,EAAA,GAAAA,EAAA;AACA,aAAAqF,cAAA,GAAAA,cAAA;AACA,aAAApH,KAAA,GAAAA,KAAA;AAjBV,aAAAqH,QAAA,GAAoB,+CAApB;AACA,aAAAC,YAAA,GAAqB,IAArB;AAEA,aAAA5E,OAAA,GAAU,KAAV;AAGA,aAAAR,gBAAA,GAAmB,KAAnB;AACA,aAAAqF,iBAAA,GAAoB,KAApB;AACA,aAAAnF,aAAA,GAAgB,KAAhB;;AAmCA,aAAAoF,YAAA,GAAe,UAACC,IAAD,EAAgB;AAC7B,iBAAO,IAAI,+CAAJ,CAAe,UAACzE,QAAD,EAAiC;AACrD,gBAAM0E,UAAU,GAAGD,IAAI,CAACE,IAAL,KAAc,YAAd,IAA8BF,IAAI,CAACE,IAAL,KAAc,WAA/D;;AACA,gBAAI,CAACD,UAAL,EAAiB;AACf,qBAAI,CAAC3H,OAAL,CAAaE,KAAb,CAAmB,uDAAnB;;AACA+C,sBAAQ,CAACM,QAAT;AACA;AACD;;AACD,gBAAMsE,MAAM,GAAGH,IAAI,CAACI,IAAL,GAAY,IAAZ,GAAmB,IAAnB,GAA0B,CAAzC;;AACA,gBAAI,CAACD,MAAL,EAAa;AACX,qBAAI,CAAC7H,OAAL,CAAaE,KAAb,CAAmB,gEAAnB;;AACA+C,sBAAQ,CAACM,QAAT;AACA;AACD;;AACDN,oBAAQ,CAAC7D,IAAT,CAAcuI,UAAU,IAAIE,MAA5B;AACA5E,oBAAQ,CAACM,QAAT;AACD,WAfM,CAAP;AAgBD,SAjBD;AAzBM;;;;mCAEE;AACN,eAAKwE,KAAL;AACD;;;wCAEeL,I,EAAgB;AAAA;;AAC9B,eAAKH,YAAL,GAAoBG,IAAI,CAACM,IAAL,CAAU,CAAV,CAApB,CAD8B,CAG9B;;AACA,cAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,gBAAM,CAACE,MAAP,GAAgB,UAACC,KAAD,EAAgB;AAC9B,mBAAI,CAACd,QAAL,GAAgBc,KAAK,CAACC,MAAN,CAAatH,MAA7B;AACD,WAFD;;AAGAkH,gBAAM,CAACK,aAAP,CAAqB,KAAKf,YAA1B;AACD;;;gCAEY;AAAA;;AACX,eAAKH,cAAL,CAAoB/C,MAApB,GAA6BxF,SAA7B,CAAuC,UAAAC,QAAQ,EAAI;AACjD,gBAAIA,QAAQ,IAAIA,QAAQ,CAACI,MAAzB,EAAiC;AAC/B,qBAAI,CAACqJ,MAAL,GAAczJ,QAAQ,CAACC,IAAvB;AACD;AACF,WAJD;AAKD;;;kCAqBSyJ,G,EAAWC,Q,EAA+B;AAClD,cAAMR,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,gBAAM,CAACS,gBAAP,CAAwB,MAAxB,EAAgC;AAAA,mBAAMD,QAAQ,CAACR,MAAM,CAAClH,MAAP,CAAe4H,QAAf,EAAD,CAAd;AAAA,WAAhC;AACAV,gBAAM,CAACK,aAAP,CAAqBE,GAArB;AACD;;;qCAEYI,I,EAA0B;AAAA;;AACrC,kBAAQA,IAAI,CAAClB,IAAL,CAAUnH,MAAlB;AACE,iBAAK,WAAL;AACE,mBAAKoC,OAAL,GAAe,IAAf;AACA;;AACF,iBAAK,MAAL;AACE;AACA,mBAAKkG,SAAL,CAAeD,IAAI,CAAClB,IAAL,CAAWoB,aAA1B,EAA0C,UAACN,GAAD,EAAiB;AACzD,uBAAI,CAAC7F,OAAL,GAAe,KAAf;AACA,uBAAI,CAACoG,SAAL,GAAiBP,GAAjB;AACA,uBAAI,CAACvB,UAAL,CAAgB+B,QAAhB,GAA2B,OAAI,CAACD,SAAhC;AACD,eAJD;AAKA;;AACF,iBAAK,OAAL;AACE,mBAAK/I,OAAL,CAAaE,KAAb,CAAmB,eAAnB;AACA,mBAAKyC,OAAL,GAAe,KAAf;AACA;AAfJ;AAiBD;;;6CAGwB;AAAA;;AACvB,eAAKN,aAAL,GAAqB,IAArB;AACA,eAAKuC,QAAL;AACA1B,oBAAU,CAAC,YAAM;AACf,mBAAI,CAACb,aAAL,GAAqB,KAArB;AACD,WAFS,EAEP,IAFO,CAAV;AAGA,eAAKpC,KAAL,CAAW0E,OAAX;AACD;AAED;;;;;;mCAGmB;AACjB,eAAKxC,gBAAL,GAAwB,IAAxB;;AACA,cAAI,CAAC,KAAK8E,UAAN,IAAoB,KAAKzD,KAA7B,EAAoC;AAClC,iBAAKyF,cAAL;AACD,WAFD,MAEO;AACL,iBAAKC,cAAL;AACD;AACF,S,CAED;;;;yCACsB;AAAA;;AACpB,cAAI,KAAKjC,UAAT,EAAqB;AACnB,iBAAKI,cAAL,CAAoBhC,MAApB,CAA2B,KAAK4B,UAAhC,EAA4CpI,SAA5C,CAAsD,UAAAC,QAAQ,EAAI;AAEhE,kBAAIA,QAAQ,IAAIA,QAAQ,CAACI,MAAzB,EAAiC;AAC/B,uBAAI,CAACc,OAAL,CAAaqF,MAAb,CAAoB,iEAAY/H,OAAhC,EAAyC,4BAAzC;AAED,eAHD,MAGO;AACL,uBAAI,CAAC0C,OAAL,CAAaqF,MAAb,CAAoB,iEAAY3J,KAAhC,EAAuC,kCAAvC;AAED;;AACD,qBAAI,CAACyG,gBAAL,GAAwB,KAAxB,CATgE,CAUhE;AACD,aAXD;AAYD;AACF;;;yCAEwB;AAAA;;AACvB,cAAI,KAAK8E,UAAT,EAAqB;AACnB,iBAAKI,cAAL,CAAoB8B,MAApB,CAA2B,KAAKlC,UAAhC,EAA4CpI,SAA5C,CAAsD,UAAAC,QAAQ,EAAI;AAChE,kBAAIA,QAAQ,IAAIA,QAAQ,CAACI,MAAzB,EAAiC;AAC/B,uBAAI,CAACc,OAAL,CAAaqF,MAAb,CAAoB,iEAAY/H,OAAhC,EAAyC,gCAAzC;;AAEAgD,uBAAO,CAAC8D,GAAR,CAAY,OAAI,CAAC6C,UAAjB;AACD,eAJD,MAIO;AACL,uBAAI,CAACjH,OAAL,CAAaqF,MAAb,CAAoB,iEAAY3J,KAAhC,EAAuC,sCAAvC;AAED;;AACD,qBAAI,CAACyG,gBAAL,GAAwB,KAAxB;AACD,aAVD;AAWD;AACF;;;;;;;uBAhJUgF,oB,EAAoB,uJ,EAAA,+H,EAAA,2H,EAAA,uJ,EAAA,yH;AAAA,K;;;YAApBA,oB;AAAoB,wC;AAAA;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,o8B;AAAA;AAAA;ACHjC;;AACI;;AACI;;AACI;;AAAe;;AAAa;;AAC5B;;AACI;;AAA4C;AAAA;AAAA;;AAA5C;;AACJ;;AACJ;;AACJ;;AACA;;AAGI;;AACI;;AACI;;AAAe;;AAAQ;;AACvB;;AACI;;AAAgB;AAAA;AAAA;;AACZ;;AAAkC;;AAAE;;AACpC;;AAAiC;;AAAG;;AAExC;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAe;;AAAO;;AACtB;;AACI;;AAAuF;AAAA;AAAA;;AACnF;;AAGJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AAEI;;AACI;;AACI;;AAAe;;AAAQ;;AACvB;;AACI;;AAA6M;AAAA,mBAAY,IAAAiC,YAAA,QAAZ;AAAgC,WAAhC;;AACzM;;AAIA;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AAIJ;;;;AA1DgB;;AAAA;;AAI4C;;AAAA;;AAI5C;;AAAA;;AAGI;;AAAA;;AAIgB;;AAAA;;AACI;;AAAA;;AACA;;AAAA;;AAMpB;;AAAA;;AAIuF;;AAAA;;AACrE;;AAAA;;AAQtB;;AAAA;;AAEI;;AAAA;;AAIkJ;;AAAA,8FAA0B,gBAA1B,EAA0B,gBAA1B;;AAChI;;AAAA;;AAIT;;AAAA;;;;;;;;;sED7ChBjC,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTpK,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;gBAY9B;;;gBACA;;;;;;;;;;;;;;;;;;;;AE3BH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACMgB;;;;;;AAqBqB;;;;;;AACA;;;;QDhBxBoM,c;AAQX,8BACUrH,EADV,EAEU/D,YAFV,EAGUuB,MAHV,EAG0B;AAAA;;AAFhB,aAAAwC,EAAA,GAAAA,EAAA;AACA,aAAA/D,YAAA,GAAAA,YAAA;AACA,aAAAuB,MAAA,GAAAA,MAAA;AATV,aAAAiG,SAAA,GAAY,oDAAZ;AACA,aAAA6D,IAAA,GAAe,IAAIC,IAAJ,GAAWC,WAAX,EAAf;AACA,aAAAC,UAAA,GAAa,uDAAkB,IAAlB,GAAyB,KAAKH,IAA3C;AAEC,aAAAI,aAAA,GAAgB,KAAhB;AAMCC,gBAAQ,CAACC,IAAT,CAAcC,SAAd,GAA0B,YAA1B;AACD;;;;mCAEO;AACN,eAAKpG,gBAAL;;AACA,cAAI,KAAKhE,OAAL,EAAJ,EAAoB;AAClB,iBAAKD,MAAL,CAAYI,aAAZ,CAA0B,OAA1B;AACD;AACF;;;2CAEuB;AACtB,eAAKiE,YAAL,GAAoB,KAAK7B,EAAL,CAAQ8B,KAAR,CAAc;AAChCC,4BAAgB,EAAE,CAAC,IAAD,EAAO,CAAC,0DAAWC,QAAZ,CAAP,CADc;AAEhC8F,4BAAgB,EAAE,CAAC,IAAD,EAAO,CAAC,0DAAW9F,QAAZ,CAAP;AAFc,WAAd,CAApB;AAID;;;mDAEiC;AAChC,iBAAO3F,YAAY,CAACC,OAAb,CAAqB,2DAArB,CAAP;AACD;;;iDAE+BG,K,EAAe;AAC7CJ,sBAAY,CAACK,OAAb,CAAqB,2DAArB,EAA6CD,KAA7C;AACD;;;kCAEa;AACZ,cAAMiB,SAAS,GAAG,KAAKC,wBAAL,EAAlB;;AACA,cAAID,SAAS,IAAIA,SAAS,KAAK,MAA/B,EAAuC;AACrC,mBAAO,IAAP;AACD;;AACD,iBAAO,KAAP;AACD;;;qCAES;AACR,eAAK,IAAMqK,CAAX,IAAgB,KAAKlG,YAAL,CAAkBkB,QAAlC,EAA4C;AAC1C,iBAAKlB,YAAL,CAAkBkB,QAAlB,CAA2BgF,CAA3B,EAA8BC,WAA9B;AACA,iBAAKnG,YAAL,CAAkBkB,QAAlB,CAA2BgF,CAA3B,EAA8B9E,sBAA9B;AACD,WAJO,CAMR;;;AACA,cAAI,KAAKpB,YAAL,CAAkBtD,MAAlB,KAA6B,SAAjC,EAA4C;AAC1C;AACD;;AACD,eAAK0J,KAAL;AACD;;;gCAEe;AAAA;;AACd,cAAMtL,QAAQ,GAAa;AACzBuL,oBAAQ,EAAE,KAAKrG,YAAL,CAAkBkB,QAAlB,CAA2BhB,gBAA3B,CAA4CtF,KAD7B;AAEzB0L,oBAAQ,EAAE,KAAKtG,YAAL,CAAkBkB,QAAlB,CAA2B+E,gBAA3B,CAA4CrL;AAF7B,WAA3B;AAKA,eAAKR,YAAL,CAAkBW,QAAlB,CAA2BD,QAA3B,EAAqCE,SAArC,CAA+C,UAAAC,QAAQ,EAAI;AAEzD,gBAAIA,QAAQ,CAACI,MAAT,KAAoB,IAApB,IAA4BJ,QAAQ,CAACC,IAAT,IAAiB,IAAjD,EAAuD;AACrD,qBAAI,CAAC2K,aAAL,GAAqB,IAArB;AACD;;AACD,gBAAI5K,QAAQ,IAAIA,QAAQ,CAACC,IAArB,IAA6BD,QAAQ,CAACC,IAAT,KAAkB,MAAnD,EAA2D;AACzD,qBAAI,CAACC,wBAAL,CAA8BF,QAAQ,CAACC,IAAvC;;AACA,qBAAI,CAACS,MAAL,CAAYI,aAAZ,CAA0B,OAA1B;AACD;AACF,WATD;AAUD;;;;;;;uBA1EUyJ,c,EAAc,2H,EAAA,mJ,EAAA,uH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,c;AAAA,2mC;AAAA;AAAA;ACZ3B;;AACI;;AACI;;AACI;;AACA;;AAAwB;;;;AAAyB;;AACjD;;AAA4D;AAAA,mBAAY,IAAAe,UAAA,EAAZ;AAAwB,WAAxB;;AACxD;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAiE;;AAAS;;AAC9E;;AACJ;;AACJ;;AACA;;AACA;;AACJ;;AACJ;;AACA;;AAAuC;;;;AAA0B;;AACrE;;;;;;;;AA5BoC;;AAAA;;AACV;;AAAA;;AACoB;;AAAA;;AAGN;;AAAA;;AAOA;;AAAA;;AAO4B;;AAAA;;AAQzB;;AAAA;;;;;;;;;;sEDnB9Bf,c,EAAc;cAL1B,uDAK0B;eALhB;AACTtM,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkC4B;;AACI;;AACJ;;;;;;AACA;;AAAyD;;AAAE;;;;;;;;;;;;;;AA1BnF;;AACI;;AACI;;AACI;;AACA;;AAAsC;AAAA;;AAAA;;AAAA;AAAA;;AAClC;;AAAM;;AAAM;;AACd;;AACN;;AACA;;AACI;;AACI;;AACI;;AAAqD;;AACrD;;AACA;;AAAuD;;AACvD;;AAEA;;AAAuD;;;;AACvD;;AACA;;AAKI;;AAGA;;AAEJ;;AACA;;AAAiD;;AAAwB;;AACzE;;AAAqD;;AAA2B;;AAChF;;AAAmD;;AAA0B;;AAEjF;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAlCuB;;AAAA,kKAAyC,QAAzC,EAAyC,WAAzC;;AACO;;AAAA;;AAMG;;AAAA;;AAC2B;;AAAA;;AAAa;;AAAA;;AAEX;;AAAA;;AAAa;;AAAA;;AAGb;;AAAA;;AAAa;;AAAA;;AAEb;;AAAA;;AAKxB;;AAAA;;AAGA;;AAAA;;AAGkB;;AAAA;;AAAa;;AAAA;;AACT;;AAAA;;AAAa;;AAAA;;AACf;;AAAA;;AAAa;;AAAA;;;;ADpC3E,QAAMoN,QAAQ,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,WAAlB,EAA+B,QAA/B,CAAjB;AACA,QAAMC,SAAS,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAlB;;QASaC,uB;AASX,uCACStI,eADT,EAESuI,cAFT,EAGUhF,YAHV,EAGwC;AAAA;;AAF/B,aAAAvD,eAAA,GAAAA,eAAA;AACA,aAAAuI,cAAA,GAAAA,cAAA;AACC,aAAAhF,YAAA,GAAAA,YAAA;AAVV,aAAAC,SAAA,GAAY,oBAAZ;AACA,aAAAgF,gBAAA,GAAwB,EAAxB;AACA,aAAAC,WAAA,GAAmB,KAAnB;AAEA,aAAAC,IAAA,GAAeN,QAAQ,CAAC,CAAD,CAAvB;AACA,aAAAO,KAAA,GAAgBN,SAAS,CAAC,CAAD,CAAzB;AAK2C;;;;mCAEhC;AAAA;;AACT,eAAKE,cAAL,CAAoBK,WAApB,CAAgChM,SAAhC,CAA0C,UAAA4B,MAAM,EAAI;AAClD,mBAAI,CAACqK,SAAL,CAAerK,MAAM,CAACsK,UAAtB;AACD,WAFD;AAGD;;;kCACgBA,U,EAAoB;AAAA;;AACnC,eAAK9I,eAAL,CAAqB6I,SAArB,CAA+BC,UAA/B,EAA2ClM,SAA3C,CAAqD,UAAAC,QAAQ,EAAI;AAC/D,gBAAIA,QAAQ,CAACI,MAAT,KAAoB,IAAxB,EAA8B;AAC5B,qBAAI,CAACuL,gBAAL,GAAwB3L,QAAQ,CAACC,IAAjC;AACA,qBAAI,CAAC2L,WAAL,GAAmB,IAAnB;AACD;;AACDpK,mBAAO,CAAC8D,GAAR,CAAY,OAAI,CAACqG,gBAAjB;AACD,WAND;AAOD;;;iCAGK;AACJ,cAAIO,GAAG,GAAGX,QAAQ,CAACY,OAAT,CAAiB,KAAKN,IAAtB,CAAV;AACA,YAAEK,GAAF;;AACA,cAAIA,GAAG,KAAKX,QAAQ,CAACa,MAArB,EAA6B;AAC3BF,eAAG,GAAG,CAAN;AACD;;AACD,eAAKL,IAAL,GAAYN,QAAQ,CAACW,GAAD,CAApB;AACA,eAAKJ,KAAL,GAAaN,SAAS,CAACU,GAAD,CAAtB;AACD;;;;;;;uBAtCUT,uB,EAAuB,yJ,EAAA,+H,EAAA,6H;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA,e;AAAA,a;AAAA,ixB;AAAA;AAAA;AChBpC;;AACI;;AAAsB;;AAAa;;AACnC;;AACI;;AACA;;AAAmC;;AACrC;;AACE;;AACA;;AAA6B;;AAC/B;;AACF;;AAEA;;AAsCJ;;;;AAhD0B;;AAAA;;AAEiC;;AAAA;;AAQ/B;;AAAA;;;;;;;;;;sEDKfA,uB,EAAuB;cAPnC,uDAOmC;eAPzB;AACTxN,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAOyB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEhBpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSwB;;AAAoD;;AAAsC;;;;;;AAC1F;;AAAoD;;AAAsC;;;;;;AAC1F;;AAAmD;;AAAqC;;;;;;AAFxF;;AACA;;AACA;;;;;;AAFc;;AACA;;AAAA;;AACA;;AAAA;;;;;;AAkDd;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AALA;;AAGA;;;;;;AAHc;;AAGA;;AAAA;;;;;;AAad;;AAAoD;;AAA6B;;;;;;AACjF;;AAAmD;;AAAsC;;;;;;AADzF;;AACA;;;;;;AADc;;AACA;;AAAA;;;;;;;;AAuBlC;;AACI;;AAAmC;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAG;;AACrE;;AAAmG;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAG;;AACzI;;;;;;AADuC;;AAAA,uGAA8B,UAA9B,EAA8B,0BAA9B;;;;QD3F9BkO,uB;AAgBX,uCACUlJ,eADV,EAEUD,EAFV,EAGUhC,OAHV,EAIUC,KAJV,EAI2B;AAAA;;AAHjB,aAAAgC,eAAA,GAAAA,eAAA;AACA,aAAAD,EAAA,GAAAA,EAAA;AACA,aAAAhC,OAAA,GAAAA,OAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AAlBV,aAAAkC,gBAAA,GAAmB,KAAnB;AACA,aAAAqF,iBAAA,GAAoB,KAApB;AACA,aAAAnF,aAAA,GAAgB,KAAhB;AAKA,aAAA+I,UAAA,GAAa,YAAb;AAIA,aAAAzI,OAAA,GAAU,KAAV;AASK;;;;mCAEG;AACN,eAAKc,gBAAL;AACD;;;2CAEuB;AACtB,eAAKI,YAAL,GAAoB,KAAK7B,EAAL,CAAQ8B,KAAR,CAAc;AAChCuH,wBAAY,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWrH,QAAZ,EAAsB,0DAAWsH,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,EAArB,CAA/C,CAAL,CADkB;AAEhCC,yBAAa,EAAE,CAAC,EAAD,EAAK,0DAAWxH,QAAhB,CAFiB;AAGhCyH,+BAAmB,EAAE,CAAC,EAAD,EAAK,0DAAWzH,QAAhB,CAHW;AAIhC0H,4BAAgB,EAAE,CAAC,IAAD,EAAO,0DAAW1H,QAAlB,CAJc;AAKhC2H,uBAAW,EAAE,CAAC,OAAD,EAAU,0DAAW3H,QAArB,CALmB;AAMhC4H,yBAAa,EAAE,CAAC,IAAD,EAAO,CAAC,0DAAWC,KAAZ,EAAmB,0DAAW7H,QAA9B,CAAP,CANiB;AAOhC8H,uBAAW,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW9H,QAAZ,EAAsB,0DAAWuH,SAAX,CAAqB,EAArB,CAAtB,CAAL,CAPmB;AAQhCQ,8BAAkB,EAAE,CAAC,EAAD,EAAK,EAAL;AARY,WAAd,CAApB;AAUD;;;oCAEQ;AACP,eAAKlI,YAAL,CAAkBgB,KAAlB,GADO,CAEP;;AACA,eAAK,IAAMC,GAAX,IAAkB,KAAKjB,YAAL,CAAkBkB,QAApC,EAA8C;AAC5C,iBAAKlB,YAAL,CAAkBkB,QAAlB,CAA2BD,GAA3B,EAAgCE,cAAhC;AACA,iBAAKnB,YAAL,CAAkBkB,QAAlB,CAA2BD,GAA3B,EAAgCG,sBAAhC;AACD;AACF;;;6CAEwB;AACvB,eAAKP,SAAL;AACA,eAAKzE,KAAL,CAAW0E,OAAX;AACD;;;6CAEwB;AAAA;;AACvB,eAAKtC,aAAL,GAAqB,IAArB;AACA,eAAKuC,QAAL;AACA1B,oBAAU,CAAC,YAAM;AACf,mBAAI,CAACb,aAAL,GAAqB,KAArB;AACD,WAFS,EAEP,IAFO,CAAV;AAGA,eAAKpC,KAAL,CAAW0E,OAAX;AACD;AAED;;;;;;mCAGmB;AACjB,eAAKxC,gBAAL,GAAwB,IAAxB;;AACA,cAAI,CAAC,KAAK6J,WAAN,IAAqB,KAAKxI,KAA9B,EAAqC;AACnC,iBAAKyF,cAAL;AACD,WAFD,MAEO;AACL,iBAAKC,cAAL;AACD;AACF,S,CAED;;;;yCACsB;AAAA;;AACpB,cAAI,KAAK8C,WAAT,EAAsB;AACpB,iBAAK/J,eAAL,CAAqBoD,MAArB,CAA4B,KAAK2G,WAAjC,EAA8CnN,SAA9C,CAAwD,UAAAC,QAAQ,EAAI;AAElE,kBAAIA,QAAQ,IAAIA,QAAQ,CAACI,MAAzB,EAAiC;AAC/B,uBAAI,CAACc,OAAL,CAAaqF,MAAb,CAAoB,iEAAY/H,OAAhC,EAAyC,4BAAzC;AAED,eAHD,MAGO;AACL,uBAAI,CAAC0C,OAAL,CAAaqF,MAAb,CAAoB,iEAAY3J,KAAhC,EAAuC,kCAAvC;AAED;;AACD,qBAAI,CAACyG,gBAAL,GAAwB,KAAxB;;AACA,qBAAI,CAACuC,SAAL;AACD,aAXD;AAYD;AACF;;;yCAEwB;AAAA;;AACvB,cAAI,KAAKsH,WAAT,EAAsB;AACpB,iBAAK/J,eAAL,CAAqBkH,MAArB,CAA4B,KAAK6C,WAAjC,EAA8CnN,SAA9C,CAAwD,UAAAC,QAAQ,EAAI;AAClE,kBAAIA,QAAQ,IAAIA,QAAQ,CAACI,MAAzB,EAAiC;AAC/B,uBAAI,CAACc,OAAL,CAAaqF,MAAb,CAAoB,iEAAY/H,OAAhC,EAAyC,gCAAzC;;AAEAgD,uBAAO,CAAC8D,GAAR,CAAY,OAAI,CAAC4H,WAAjB;AACD,eAJD,MAIO;AACL,uBAAI,CAAChM,OAAL,CAAaqF,MAAb,CAAoB,iEAAY3J,KAAhC,EAAuC,sCAAvC;AAED;;AACD,qBAAI,CAACyG,gBAAL,GAAwB,KAAxB;AACD,aAVD;AAWD;AACF;;;;;;;uBA5GUgJ,uB,EAAuB,yJ,EAAA,2H,EAAA,+H,EAAA,yH;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,k0D;AAAA;AAAA;ACXpC;;AACI;;AACI;;AACI;;AACI;;AAA0B;;AAAQ;;AAClC;;AACI;;AAAqD;AAAA;AAAA;;AAArD;;AACA;;AAKJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA0B;;AAAM;;AAChC;;AACI;;AAA+C;AAAA;AAAA;;AAA/C;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA0B;;AAAa;;AACvC;;AACI;;AAA4C;AAAA;AAAA;;AAA5C;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAA0B;;AAAS;;AACnC;;AACI;;AAAmD;AAAA;AAAA;;AAA0F;;AACjJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AAA0B;;AAAS;;AACnC;;AACI;;AAA8C;AAAA;AAAA;;AAC1C;;AAAkC;;AAAE;;AACpC;;AAAiC;;AAAG;;AAExC;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA0B;;AAAK;;AAC/B;;AACI;;AAAoC;AAAA;AAAA;;AAApC;;AACA;;AAQJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA0B;;AAAa;;AACvC;;AACI;;AAAkC;AAAA;AAAA;;AAAlC;;AACA;;AAIJ;;AACJ;;AACJ;;AACJ;;AAIA;;AACI;;AACI;;AACI;;AAAe;;AAAO;;AACtB;;AACI;;AAA4B;AAAA;AAAA;;AAA4F;;AAC5H;;AACJ;;AACJ;;AAEJ;;AACA;;AAGA;;AAIJ;;;;;;;;;;AAxGc;;AACE;;AAAA;;AACI;;AAAA;;AAG2B;;AAAA;;AAC0B;;AAAA;;AASrD;;AAAA;;AAI+C;;AAAA;;AAI/C;;AAAA;;AAI4C;;AAAA;;AAKhD;;AAAA;;AACI;;AAAA;;AAImD;;AAAA,wGAAkC,UAAlC,EAAkC,cAAlC;;AAKnD;;AAAA;;AAI8C;;AAAA;;AAC1B;;AAAA;;AACA;;AAAA;;AAMpB;;AAAA;;AAG2B;;AAAA;;AACS;;AAAA;;AAYpC;;AAAA;;AAG2B;;AAAA;;AACO;;AAAA;;AAYtC;;AAAA;;AACI;;AAAA;;AAI4B;;AAAA;;AAMhC;;AAAA;;;;;;;;;sEDtFHA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACTpO,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;gBAMjC;;;gBACA;;;;;;;;;;;;;;;;;;;;AEnBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC+BwB;;AAAgD;;AAAI;;;;;;AAEpD;;AAA+C;;AAAG;;;;;;AAOlD;;AACI;;AACJ;;;;;;AACA;;AAA6C;;AAAE;;;;;;;;AAlBvD;;AACI;;AAAI;;AAAO;;AACX;;AAAI;;AAAmC;;AACvC;;AAAK;;;;AAAsC;;AAC3C;;AAEI;;AAEA;;AAGJ;;AACA;;AAGI;;AAGA;;AACJ;;AAEA;;AAAI;;AAAc;;AAClB;;AAAI;;AAAe;;AAEnB;;AACI;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC3D;;AAA4B;;AAC9B;;AACU;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC3D;;AAA6B;;AAC/B;;AACU;;AAAkD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC1D;;AAA+B;;AACjC;;AACM;;AACJ;;;;;;;AAlCQ;;AAAA;;AACA;;AAAA;;AACC;;AAAA;;AAGa;;AAAA;;AAEA;;AAAA;;AAOA;;AAAA;;AAGA;;AAAA;;AAGd;;AAAA;;AACA;;AAAA;;;;QDlCXgP,qB;AAKX,qCAAmBC,eAAnB,EACmB1M,MADnB,EAEoBQ,OAFpB,EAGoBwF,YAHpB,EAGgD;AAAA;;AAH7B,aAAA0G,eAAA,GAAAA,eAAA;AACA,aAAA1M,MAAA,GAAAA,MAAA;AACC,aAAAQ,OAAA,GAAAA,OAAA;AACA,aAAAwF,YAAA,GAAAA,YAAA;AAPpB,aAAAC,SAAA,GAAY,qBAAZ;AACA,aAAA0G,UAAA,GAAkB,EAAlB;AACA,aAAAhK,gBAAA,GAAmB,KAAnB;AAMiB;;;;mCAER;AACP,eAAKA,gBAAL,GAAwB,IAAxB;AACA,eAAKiK,gBAAL;AACD,S,CAED;;;;2CACuB;AAAA;;AACrB,eAAKF,eAAL,CAAqB7H,MAArB,GAA8BxF,SAA9B,CAAwC,UAAAC,QAAQ,EAAI;AAClD,gBAAIA,QAAQ,IAAIA,QAAQ,CAACI,MAAzB,EAAiC;AAC/B,qBAAI,CAACiN,UAAL,GAAkBrN,QAAQ,CAACC,IAA3B;AACA,qBAAI,CAACoD,gBAAL,GAAwB,KAAxB,CAF+B,CAGhC;AACA;AACF,WAND;AAOD,S,CAED;;;;qCACoB4I,U,EAAiB;AACnC,eAAKsB,cAAL,CAAoBtB,UAApB;AACD;;;uCAEsBA,U,EAAiB;AACtC,cAAIA,UAAJ,EAAgB;AACd;AACA,iBAAKvL,MAAL,CAAY8M,QAAZ,CAAqB,CAAC,6BAAD,CAArB,EAAsD;AAAEzB,yBAAW,EAAE;AAAEE,0BAAU,EAAEA;AAAd;AAAf,aAAtD;AACD,WAHD,MAGO;AACL,iBAAK/K,OAAL,CAAaqF,MAAb,CAAoB,iEAAY3J,KAAhC,EAAuC,gBAAvC;AACD;AACF;;;yCAEa;AAAA;;AACZ,cAAMyK,WAAW,GAAG,KAAKX,YAAL,CAAkBH,MAAlB,CAAyB;AAC3CjF,mBAAO,EAAE,gBADkC;AAE3CC,qBAAS,EAAE,kGAFgC;AAG3C+F,6BAAiB,EAAE;AACjB5C,mBAAK,EAAE,IADU;AAEjBwI,yBAAW,EAAE,IAAI,0DAAJ;AAFI,aAHwB;AAO3C3F,mBAAO,EAAE;AAPkC,WAAzB,CAApB,CADY,CAUZ;;AACAF,qBAAW,CAACG,UAAZ,CAAuBzH,SAAvB,CAAiC,YAAM;AACrC,mBAAO,OAAI,CAAC0H,QAAL,EAAP;AACD,WAFD;AAGD;;;qCAEYhK,I,EAAW;AAAA;;AACtB,cAAMkK,SAAS,GAAG,KAAKjB,YAAL,CAAkBH,MAAlB,CAAyB;AACzCjF,mBAAO,EAAE,qBADgC;AAEzCC,qBAAS,EAAE,kGAF8B;AAGzC+F,6BAAiB,EAAE;AACjB4F,yBAAW,EAAE7N,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACgB,SAAL,CAAe5C,IAAf,CAAX;AADI,aAHsB;AAMzC8J,mBAAO,EAAE;AANgC,WAAzB,CAAlB,CADsB,CAStB;;AACAI,mBAAS,CAACH,UAAV,CAAqBzH,SAArB,CAA+B,YAAM;AACnC,mBAAO,OAAI,CAAC0H,QAAL,EAAP;AACD,WAFD;AAGD;;;sCAEoBwE,U,EAAiB;AAAA;;AACpC,cAAMwB,WAAW,GAAG,KAAK/G,YAAL,CAAkBgH,OAAlB,CAA0B;AAC5CpM,mBAAO,EAAE,qCADmC;AAE5CC,qBAAS,2DAA2C0K,UAA3C,SAFmC;AAG5C0B,oBAAQ,EAAE,KAHkC;AAI5CC,oBAAQ,EAAE,QAJkC;AAK5CC,kBAAM,EAAE;AAAA,qBAAM,OAAI,CAACC,cAAL,CAAoB7B,UAApB,CAAN;AAAA,aALoC;AAM5C8B,wBAAY,EAAE;AAN8B,WAA1B,CAApB,CADoC,CASpC;;AACAN,qBAAW,CAACjG,UAAZ,CAAuBzH,SAAvB,CAAiC,YAAM;AACrC,mBAAO,OAAI,CAAC0H,QAAL,EAAP;AACD,WAFD;AAGD;AAGD;;;;;;uCAGqBwE,U,EAAiB;AAAA;;AACtC,cAAM+B,KAAK,GAAQ;AAAE/B,sBAAU,EAAEA;AAAd,WAAnB;AACA,eAAKmB,eAAL,WAA4BY,KAA5B,EAAmCjO,SAAnC,CAA6C,UAAAC,QAAQ,EAAI;AACvD,gBAAIA,QAAQ,CAACI,MAAT,KAAoB,IAAxB,EAA8B;AAC5B,qBAAI,CAACc,OAAL,CAAaqF,MAAb,CAAoB,iEAAY/H,OAAhC,EAAyC,2BAAzC,EAD4B,CAE5B;;;AACA,qBAAI,CAAC8O,gBAAL;AACD,aAJD,MAIO;AACL,qBAAI,CAACpM,OAAL,CAAaqF,MAAb,CAAoB,iEAAY3J,KAAhC,EAAuC,iCAAvC;AACD;AACF,WARD;AASD;;;;;;;uBAtGYuQ,qB,EAAqB,yJ,EAAA,uH,EAAA,+H,EAAA,6H;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,e;AAAA,a;AAAA,oiB;AAAA;AAAA;ACblC;;AACI;;AAAsB;;;;AAAyB;;AAC/C;;AAEI;;AAAsE;AAAA,mBAAS,IAAA/E,cAAA,EAAT;AAAyB,WAAzB;;AAC5E;;AAA6B;;AAC/B;;AAEI;;AAEA;;AAEI;;AACI;;AACI;;AACI;;AAAI;;AAAG;;AACP;;AAAI;;AAAU;;AACd;;AAAI;;AAAS;;AACb;;AAAI;;AAAS;;AACb;;AAAI;;AAAG;;AACP;;AAAI;;AAAK;;AACT;;AACJ;;AACJ;;AACA;;AACI;;AAoCJ;;AACJ;;AACJ;;AACJ;;;;;;AA/D0B;;AAAA;;AAWO;;AAAA,6FAAqB,WAArB,EAAqB,oBAArB;;AAab;;AAAA;;;;;;;;;;sEDZP+E,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTlP,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEblC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAiBA,QAAMmE,MAAM,GAAW,CACrB;AACEnF,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE,+DAFb;AAGEC,cAAQ,EAAE,CACR;AACEF,YAAI,EAAE,qBADR;AAEEC,iBAAS,EAAE;AAFb,OADQ,EAKR;AACED,YAAI,EAAE,4BADR;AAEEC,iBAAS,EAAE;AAFb,OALQ,EASR;AACED,YAAI,EAAE,kBADR;AAEEC,iBAAS,EAAE;AAFb,OATQ,EAab;AACCD,YAAI,EAAE,kBADP;AAECC,iBAAS,EAAE;AAFZ,OAba;AAHZ,KADqB,CAAvB;;QAyCa6Q,kB;;;;;YAAAA;;;;yBAAAA,kB;AAAkB,O;AAAA,gBAdpB,CACP,6DAAazL,QAAb,CAAsBF,MAAtB,CADO,EAEP,+DAFO,EAGP,4DAHO,EAIP,0DAJO,EAKP,kEALO,CAcoB,EAPnB,4DAOmB;;;;0HAAlB2L,kB,EAAkB;AAAA,gFAZ3B,+DAY2B,EAX3B,4DAW2B,EAV3B,0DAU2B,EAT3B,kEAS2B;AATR,kBAEX,4DAFW;AASQ,O;AAPP,K;;;;;sEAOXA,kB,EAAkB;cAf9B,sDAe8B;eAfrB;AACRnQ,iBAAO,EAAE,CACP,6DAAa0E,QAAb,CAAsBF,MAAtB,CADO,EAEP,+DAFO,EAGP,4DAHO,EAIP,0DAJO,EAKP,kEALO,CADD;AAQRtF,iBAAO,EAAE,CAAC,4DAAD,CARD;AASR6B,sBAAY,EAAE,EATN;AAWRE,iBAAO,EAAE,CAAC,oEAAD;AAXD,S;AAeqB,Q;;;;;;;;;;;;;;;;;;AC1D/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcamP,c;;;;;AAOX,8BACSxN,MADT,EAESvB,YAFT,EAGSuH,YAHT,EAIUyH,qBAJV,EAIsD;AAAA;;AAAA;;AAEpD,oCAAMzN,MAAN,EAAcvB,YAAd;AALO,gBAAAuB,MAAA,GAAAA,MAAA;AACA,gBAAAvB,YAAA,GAAAA,YAAA;AACA,gBAAAuH,YAAA,GAAAA,YAAA;AACC,gBAAAyH,qBAAA,GAAAA,qBAAA;AAVV,gBAAAxH,SAAA,GAAY,oDAAZ;AACA,gBAAA6D,IAAA,GAAe,IAAIC,IAAJ,GAAWC,WAAX,EAAf;AACA,gBAAAC,UAAA,GAAa,uDAAkB,IAAlB,GAAyB,QAAKH,IAA3C;AACA,gBAAAxM,WAAA,GAAc,KAAd;AACO,gBAAAoQ,IAAA,GAAgB,IAAI,uDAAJ,EAAhB;;AASL,gBAAKD,qBAAL,CAA2B1O,WAA3B,CAAuCM,SAAvC,CAAiD,UAAAsO,CAAC;AAAA,iBAAI,QAAK5O,WAAL,GAAmB4O,CAAvB;AAAA,SAAlD,EAHoD,CAIrD;;;AAJqD;AAKpD;;;;mCAEM,CACP;;;0CAEc;AACb,eAAKrQ,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACD;;;iCAEQ;AACP,eAAKkC,wBAAL,CAA8B,EAA9B;AACA,cAAMoO,KAAK,GAAG,KAAKzN,wBAAL,EAAd;;AACA,cAAIyN,KAAK,KAAK,EAAV,IAAgBA,KAApB,EAA2B;AACzB,iBAAK5N,MAAL,CAAYI,aAAZ,CAA0B,QAA1B;AACD;AACF;;;;MA/BiC,yE;;;uBAAvBoN,c,EAAc,uH,EAAA,4I,EAAA,6H,EAAA,yK;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,0F;AAAA,e;AAAA,a;AAAA,s2C;AAAA;AAAA;ACd3B;;AACI;;AAA+E;AAAA;AAAA;;AAC3E;;AACI;;AAEI;;AAAI;;AAAO;;AACf;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAG;;AAAO;;AACd;;AACA;;AACI;;AAAG;;AAAO;;AACd;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAqC;;AAAS;;AAClD;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAG;;AAAO;;AACd;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAkC;;AAAiB;;AACvD;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAkC;;AAAoB;;AAC1D;;AACJ;;AACJ;;AAEJ;;AACJ;;AACA;;AACI;;AACI;;AAA8E;AAAA;AAAA;;AAAqC;;AACnH;;AACI;;AAAwB;;AAAM;;AAAW;;AAAO;;AAChD;;AACI;;AACA;;AACF;;AACF;;AACA;;AACI;;AACI;;AAAiB;;AAAkB;;AACnC;;AAAiB;;AAAG;;AAAY;;AAChC;;AACA;;AACA;;AAAiB;;AAAG;AAAA,mBAAS,IAAAK,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAS;;AAAI;;AACxD;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AAAuC;;;;AAA0B;;AACrE;;AACJ;;;;;;AA7EmF;;AAAA,mGAA6B,WAA7B,EAA6B,IAA7B;;AAO1B;;AAAA;;AA4ClB;;AAAA;;AAI4B;;AAAA;;AAoBpB;;AAAA;;;;;;;;;;sED9DlCL,c,EAAc;cAL1B,uDAK0B;eALhB;AACTjQ,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEd3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA+CaqQ,W;;;;;YAAAA;;;;yBAAAA,W;AAAW,O;AAAA,iBAJX,E;AAAE,gBAXJ,CACP,4DADO,EAEP,wEAFO,EAGP,+DAHO,EAIP,kEAJO,EAKP,0DALO,EAMP,qEANO,EAOP,oEAPO,EAQP,4DARO,CAWI;;;;0HAIFA,W,EAAW;AAAA,uBAvBpB,+DAuBoB,EAtBpB,gHAsBoB,EArBpB,sHAqBoB,EApBpB,uHAoBoB,EAnBpB,0GAmBoB,EAlBpB,gHAkBoB,EAjBpB,2GAiBoB,EAhBpB,yHAgBoB;AAhBA,kBAEpB,4DAFoB,EAGpB,wEAHoB,EAIpB,+DAJoB,EAKpB,kEALoB,EAMpB,0DANoB,EAOpB,qEAPoB,EAQpB,oEARoB,EASpB,4DAToB;AAgBA,O;AAPN,K;;;;;sEAOLA,W,EAAW;cAzBvB,sDAyBuB;eAzBd;AACR3P,sBAAY,EAAE,CACZ,+DADY,EAEZ,gHAFY,EAGZ,sHAHY,EAIZ,uHAJY,EAKZ,0GALY,EAMZ,gHANY,EAOZ,2GAPY,EAQZ,yHARY,CADN;AAURf,iBAAO,EAAE,CACP,4DADO,EAEP,wEAFO,EAGP,+DAHO,EAIP,kEAJO,EAKP,0DALO,EAMP,qEANO,EAOP,oEAPO,EAQP,4DARO,CAVD;AAqBRgB,mBAAS,EAAE,EArBH;AAsBRC,iBAAO,EAAE,CAAC,oEAAD;AAtBD,S;AAyBc,Q;;;;;;;;;;;;;;;;;;AC9CxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa0P,c;AAEX,8BAAoBvP,IAApB,EAA8CwP,UAA9C,EAAuE;AAAA;;AAAnD,aAAAxP,IAAA,GAAAA,IAAA;AAA0B,aAAAwP,UAAA,GAAAA,UAAA;AAA4B;;;;iCAE7D;AACT,iBAAO,KAAKA,UAAL,CAAgB9M,GAAhB,CAAgD,oBAAhD,CAAP;AACH;;;;;;;uBANU6M,c,EAAc,uH,EAAA,oI;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVjO,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;;;ACT3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASamO,c;AAEX,8BAAoBzP,IAApB,EAA8C0P,WAA9C,EAAwE;AAAA;;AAApD,aAAA1P,IAAA,GAAAA,IAAA;AAA0B,aAAA0P,WAAA,GAAAA,WAAA;AAA6B;;;;+BAE7DnR,I,EAAuB;AACnC,iBAAO,KAAKmR,WAAL,CAAiB5M,IAAjB,CAA4C,oBAA5C,EAAkEvE,IAAlE,CAAP;AACD;;;+BAEaA,I,EAAuB;AACnC,iBAAO,KAAKmR,WAAL,CAAiB1M,GAAjB,CAA2C,oBAA3C,EAAiEzE,IAAjE,CAAP;AACD;;;;;;;uBAVUkR,c,EAAc,uH,EAAA,oI;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVnO,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;;;ACV3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaqO,Y;AAEX,4BAAoBH,UAApB,EAA6C;AAAA;;AAAzB,aAAAA,UAAA,GAAAA,UAAA;AAA4B;;;;kCAElC;AACZ,iBAAO,KAAKA,UAAL,CAAgB9M,GAAhB,CAA2C,qBAA3C,CAAP;AACD;;;iCAEenE,I,EAAc;AAC5B,iBAAO,KAAKiR,UAAL,CAAgB1M,IAAhB,CAA2C,WAA3C,EAAwDvE,IAAxD,CAAP;AACD;;;wCAEmB;AAClB,iBAAO,KAAKiR,UAAL,CAAgB9M,GAAhB,CAA2C,2BAA3C,CAAP;AACD;;;;;;;uBAdUiN,Y,EAAY,oI;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACVrO,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;;;ACTzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASasO,e;AAEX,+BAAoB5P,IAApB,EAA8C0P,WAA9C,EAAwE;AAAA;;AAApD,aAAA1P,IAAA,GAAAA,IAAA;AAA0B,aAAA0P,WAAA,GAAAA,WAAA;AAA6B;;;;iCAE9D;AACX,iBAAO,KAAKA,WAAL,CAAiBhN,GAAjB,CAAkD,qBAAlD,CAAP;AACD;;;gDAE2B;AAC1B,iBAAO,KAAKgN,WAAL,CAAiBhN,GAAjB,CAAkD,oCAAlD,CAAP;AACH;;;+BAEenE,I,EAAiB;AAC7B,iBAAO,KAAKmR,WAAL,CAAiB5M,IAAjB,CAA4C,cAA5C,EAA4DvE,IAA5D,CAAP;AACD;;;+BAEaA,I,EAAiB;AAC7B,iBAAO,KAAKmR,WAAL,CAAiB1M,GAAjB,CAA2C,cAA3C,EAA2DzE,IAA3D,CAAP;AACD;;;kCAEgBwO,U,EAAkB;AAEjC,cAAM7J,UAAU,GAAG,IAAI,+DAAJ,GAAiBC,GAAjB,CAAqB,YAArB,EAAmC4J,UAAnC,CAAnB;AACA,iBAAO,KAAK2C,WAAL,CAAiBhN,GAAjB,CAA2C,sBAA3C,EAAmEQ,UAAnE,CAAP;AACD;;;gCAEa3E,I,EAAS;AACrB,iBAAO,KAAKmR,WAAL,WAA2C,cAA3C,EAA2DnR,IAA3D,CAAP;AACD;;;;;;;uBA5BUqR,e,EAAe,uH,EAAA,oI;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVtO,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACT5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASauO,W;AAEX,2BAAoBL,UAApB,EAA6C;AAAA;;AAAzB,aAAAA,UAAA,GAAAA,UAAA;AAA4B,O,CAEhD;;;;;iCACa;AACX,iBAAO,KAAKA,UAAL,CAAgB9M,GAAhB,CAA6C,iBAA7C,CAAP;AACD;;;gCAEcnE,I,EAAa;AAC1B,iBAAO,KAAKiR,UAAL,CAAgB9M,GAAhB,CAA2C,sBAA3C,EAAmEnE,IAAnE,CAAP;AACD,S,CAED;;;;+BACcA,I,EAAS;AACrB,iBAAO,KAAKiR,UAAL,CAAgB1M,IAAhB,CAAwC,UAAxC,EAAoDvE,IAApD,CAAP;AACD;;;+BAEaA,I,EAAa;AACzB,iBAAO,KAAKiR,UAAL,CAAgBxM,GAAhB,CAAuC,UAAvC,EAAmDzE,IAAnD,CAAP;AACD;;;gCAEaA,I,EAAS;AACrB,iBAAO,KAAKiR,UAAL,WAA0C,UAA1C,EAAsDjR,IAAtD,CAAP;AACD;;;uCAEqBA,I,EAAS;AAC7B,iBAAO,KAAKiR,UAAL,CAAgB9M,GAAhB,CAAuC,6BAAvC,EAAsEnE,IAAtE,CAAP;AACD;;;uCAEqBA,I,EAAS;AAC7B,iBAAO,KAAKiR,UAAL,CAAgB1M,IAAhB,CAAwC,cAAxC,EAAwDvE,IAAxD,CAAP;AACD;;;;;;;uBAhCUsR,W,EAAW,oI;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVvO,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACTxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUawO,Y;AAET,4BAAoB9P,IAApB,EAA8CwP,UAA9C,EAAuE;AAAA;;AAAnD,aAAAxP,IAAA,GAAAA,IAAA;AAA0B,aAAAwP,UAAA,GAAAA,UAAA;AAA4B;;;;gDAE9C;AACxB,iBAAO,KAAKA,UAAL,CAAgB9M,GAAhB,CAA6C,iBAA7C,CAAP;AACH;;;8CAE4BnE,I,EAAa;AACtC,iBAAO,KAAKiR,UAAL,CAAgB1M,IAAhB,CAA2C,gCAA3C,EAA6EvE,IAA7E,CAAP;AACH;;;8CAE4BA,I,EAAa;AACtC,iBAAO,KAAKiR,UAAL,CAAgBxM,GAAhB,CAA0C,gCAA1C,EAA4EzE,IAA5E,CAAP;AACH;;;sCAEoBwR,M,EAAc;AAE/B,cAAM7M,UAAU,GAAG,IAAI,+DAAJ,GAAiBC,GAAjB,CAAqB,QAArB,EAA+B4M,MAA/B,CAAnB;AACA,iBAAO,KAAKP,UAAL,CAAgB9M,GAAhB,CAA0C,kBAA1C,EAA8DQ,UAA9D,CAAP;AACH;;;8CAE4B3E,I,EAAS;AAClC,iBAAO,KAAKiR,UAAL,WAA0C,gCAA1C,EAA4EjR,IAA5E,CAAP;AACH;;;sCAEoByR,Q,EAAgB;AACjC,cAAM9M,UAAU,GAAG,IAAI,+DAAJ,GAAiBC,GAAjB,CAAqB,UAArB,EAAiC6M,QAAjC,CAAnB;AACA,iBAAO,KAAKR,UAAL,CAAgB9M,GAAhB,CAA0C,wBAA1C,EAAoEQ,UAApE,CAAP;AACH;;;kDAC6B;AAC1B,iBAAO,KAAKsM,UAAL,CAAgB9M,GAAhB,CAA6C,kCAA7C,CAAP;AACH;;;kDAE6B;AAC1B,iBAAO,KAAK8M,UAAL,CAAgB9M,GAAhB,CAA6C,kCAA7C,CAAP;AACH;;;4CAE0BnE,I,EAAS;AAChC,iBAAO,KAAKiR,UAAL,CAAgBxM,GAAhB,CAA0C,8BAA1C,EAA0EzE,IAA1E,CAAP;AACD;;;;;;;uBAxCMuR,Y,EAAY,uH,EAAA,oI;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFT;;;;;sEAEHA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACRxO,oBAAU,EAAE;AADJ,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;;;;;ACVzB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM2O,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAI9N,OAAO,CAACJ,KAAR,CAAckO,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { PagesModule } from './pages/pages.module';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AppComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'home',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'home',\r\n        // loadChildren: './dashboard/dashboard.module#DashboardModule',\r\n        loadChildren: () => PagesModule,\r\n        data: {\r\n          breadcrumb: 'Home'\r\n        },\r\n      }\r\n    ]\r\n  },\r\n  { path: 'login', component: LoginComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes, { preloadingStrategy: PreloadAllModules })],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  isCollapsed = false;\n}\n","<app-layout>\r\n    <main class=\"setHeight\">\r\n\r\n        <router-outlet></router-outlet>\r\n    </main>\r\n</app-layout>","// tslint:disable-next-line: eofline\r\nexport const API_ENDPOINT = 'http://localhost:51954/';\r\nexport const localStorageKey = 'access_token';\r\nexport const SITENAME = 'KOIAPP';\r\n","export const TypeMessage = {\r\n    Success: 'success',\r\n    Error: 'error',\r\n    Warning: 'warning'\r\n};\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\r\nimport { DashboardRoutingModule } from './dashboard/dashboard-routing.module';\r\nimport { IconsProviderModule } from './icons-provider.module';\r\nimport { NzLayoutModule } from 'ng-zorro-antd/layout';\r\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NZ_I18N } from 'ng-zorro-antd/i18n';\r\nimport { en_US } from 'ng-zorro-antd/i18n';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport en from '@angular/common/locales/en';\r\n\r\nimport { DashboardModule } from './dashboard/dashboard.module';\r\nimport { PagesModule } from './pages/pages.module';\r\nimport { PagesRoutingModule } from './pages/pages-routing.module';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { NhanvienService } from './shared/services/nhanvien.service';\r\n\r\nregisterLocaleData(en);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent, LoginComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    NgZorroAntdModule,\r\n    DashboardRoutingModule,\r\n    IconsProviderModule,\r\n    NzLayoutModule,\r\n    NzMenuModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    PagesModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [{ provide: NZ_I18N, useValue: en_US },\r\n  NhanvienService],\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ],\r\n  bootstrap: [AppComponent],\r\n \r\n})\r\nexport class AppModule { }\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { UserDTO } from 'src/app/models/UserDTO';\nimport { LoginService } from 'src/app/shared/services/login.service';\nimport * as CONFIG from '../../app.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private currentUserSubject: BehaviorSubject<UserDTO>;\n  public currentUser: Observable<UserDTO>;\n\n  constructor(private http: HttpClient, private loginService: LoginService, ) {\n    this.currentUserSubject = new BehaviorSubject<UserDTO>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n  public get currentUserValue(): UserDTO {\n    return this.currentUserSubject.value;\n  }\n\n  public getTokenFromLocalStorage() {\n    return localStorage.getItem(CONFIG.localStorageKey);\n  }\n\n  public setTokenFromLocalStorage(value: string) {\n    localStorage.setItem(CONFIG.localStorageKey, value);\n  }\n\n  public login(loginDto) {\n    this.loginService.getToken(loginDto).subscribe(response => {\n      if (response && response.Data && response.Data !== 'null') {\n        this.setTokenFromLocalStorage(response.Data);\n        this.getUser();\n      }\n    });\n    return this.currentUser;\n  }\n\n  private getUser() {\n    this.loginService.getUser().subscribe(response => {\n      if (response.Status === false) {\n        return;\n      }\n      if (response && response.Data) {\n        localStorage.setItem('currentUser', JSON.stringify(response.Data));\n        this.currentUserSubject.next(response.Data);\n      }\n    });\n  }\n\n  public logout() {\n    // remove user from local storage to log user out\n    this.setTokenFromLocalStorage('');\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n\n}\n","import { HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from '../shared/services/login.service';\r\nimport * as CONFIG from './../app.config';\r\n\r\nexport class BaseComponent {\r\n\r\n    constructor(\r\n        public router: Router,\r\n        public loginService: LoginService) {\r\n        this.isLogin();\r\n    }\r\n\r\n    setTokenFromLocalStorage(value: string) {\r\n        localStorage.setItem(CONFIG.localStorageKey, value);\r\n    }\r\n\r\n    isLogin() {\r\n        const tokenData = this.getTokenFromLocalStorage();\r\n        if (tokenData && tokenData !== 'null') {\r\n        } else {\r\n            this.setTokenFromLocalStorage('');\r\n            this.router.navigateByUrl('/login');\r\n        }\r\n    }\r\n    public getTokenFromLocalStorage() {\r\n        return localStorage.getItem(CONFIG.localStorageKey);\r\n    }\r\n\r\n    public setTokenLocalStorageWhenLogout() {\r\n        localStorage.removeItem(CONFIG.localStorageKey);\r\n    }\r\n\r\n    private getHeader(): HttpHeaders {\r\n        const headers = new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Credentials': 'true',\r\n            'Access-Control-Allow-Headers': '*',\r\n            'Access-Control-Allow-Methods': '*',\r\n            'Access-Control-Allow-Origin': '*',\r\n            Authorization: 'Bearer ' + this.getTokenFromLocalStorage()\r\n        });\r\n        return headers;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\r\nimport { NzMessageService, NzModalService } from 'ng-zorro-antd';\r\nimport * as CONFIG from '../app.config';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map, catchError, retry } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BaseService {\r\n  constructor(private http: HttpClient, private message: NzMessageService, private modal: NzModalService) { }\r\n\r\n  private getHeader(): HttpHeaders {\r\n      const headers = new HttpHeaders({\r\n          'Content-Type': 'application/json',\r\n          'Access-Control-Allow-Credentials': 'true',\r\n          'Access-Control-Allow-Headers': '*',\r\n          'Access-Control-Allow-Methods': '*',\r\n          'Access-Control-Allow-Origin': '*'\r\n      });\r\n      return headers;\r\n  }\r\n  private handleError(error: HttpErrorResponse) {\r\n      if (error.error instanceof ErrorEvent) {\r\n          // A client-side or network error occurred. Handle it accordingly.\r\n          this.modal.error({\r\n              nzTitle: 'This is an error message',\r\n              nzContent: error.error.message\r\n          });\r\n\r\n          console.error('An error occurred:', error.error.message);\r\n      } else {\r\n          // The backend returned an unsuccessful response code.\r\n          // The response body may contain clues as to what went wrong,\r\n          console.error(\r\n              `Backend returned code ${error.status}, ` +\r\n              `body was: ${error.error}`);\r\n      }\r\n      // return an observable with a user-facing error message\r\n      return throwError(\r\n          'Something bad happened; please try again later.');\r\n  };\r\n\r\n  public get<T>(url: string, params?: any): any {\r\n      return this.http.get(CONFIG.API_ENDPOINT + url, { params, headers: this.getHeader() })\r\n          .pipe(\r\n              retry(3), // retry a failed request up to 3 times\r\n              catchError(this.handleError) // then handle the error\r\n          );\r\n  }\r\n\r\n  public post<T>(url: string, data: any): Observable<T> {\r\n      return this.http.post(CONFIG.API_ENDPOINT + url, data, { headers: this.getHeader() })\r\n          .pipe(\r\n              map(result => result as T),\r\n              catchError(this.handleError)\r\n          );\r\n  }\r\n\r\n  /** POST: add a new object to the database */\r\n  public put<T>(url: string, data: any): Observable<T> {\r\n      return this.http.put(CONFIG.API_ENDPOINT + url, data, { headers: this.getHeader() })\r\n          .pipe(\r\n              map(result => result as T),\r\n              catchError(this.handleError));\r\n  }\r\n\r\n  /** DELETE: delete the hero from the server */\r\n  public delete<T>(url: string, data: any): Observable<T> {\r\n      return this.http.delete(CONFIG.API_ENDPOINT + url, { headers: this.getHeader(), params: data })\r\n          .pipe(\r\n              map(result => result as T),\r\n              catchError(this.handleError)\r\n          );\r\n  }\r\n\r\n  public getDetail<T>(url: string, id: string, nameParam: string): Observable<T> {\r\n      const httpParams = new HttpParams().set(nameParam, id);\r\n\r\n      return this.http.get(CONFIG.API_ENDPOINT + url, { headers: this.getHeader(), params: httpParams })\r\n          .pipe(\r\n              map(result => result as T),\r\n              catchError(this.handleError)\r\n          );\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: DashboardComponent,\n\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n\n  isCollapsed = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  toggleCollapsed(): void {\n    this.isCollapsed = !this.isCollapsed;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NZ_ICONS, NzIconModule } from 'ng-zorro-antd/icon';\n\nimport {\n  MenuFoldOutline,\n  MenuUnfoldOutline,\n  FormOutline,\n  DashboardOutline\n} from '@ant-design/icons-angular/icons';\n\nconst icons = [MenuFoldOutline, MenuUnfoldOutline, DashboardOutline, FormOutline];\n\n@NgModule({\n  imports: [NzIconModule],\n  exports: [NzIconModule],\n  providers: [\n    { provide: NZ_ICONS, useValue: icons }\n  ]\n})\nexport class IconsProviderModule {\n}\n","import { BienTheDTO } from './BienTheDTO';\r\n\r\nexport class HinhAnhBienTheDTO {\r\n    MaHinhAnhBT: string;\r\n    DuongDan: string;\r\n    TenHinhAnh: string;\r\n    NgayTao: Date;\r\n    ChonAvt: string;\r\n    MaBienThe: string;\r\n    BienThe: BienTheDTO;\r\n}\r\n","export class NhanVienDTO {\r\n    MaNhanVien: string;\r\n    HoLot: string;\r\n    TenNhanVien: string;\r\n    NgaySinh: Date;\r\n    GioiTinh: string;\r\n    CMND: string;\r\n    Sdt: string;\r\n    DiaChi: string;\r\n    Email: string;\r\n}\r\n","import { NhanVienDTO } from './NhanVienDTO';\r\nimport { RoleDTO } from './RoleDTO';\r\nexport class  UserDTO {\r\n    Id: string;\r\n    UserName: string;\r\n    Password: string;\r\n    CreatedBy: string;\r\n    CreatedDate?: Date;\r\n    PasswordHash: string;\r\n    Status: string;\r\n    UpdatedBy: string;\r\n    UpdatedDate ?: Date;\r\n    MaNhanVien: string;\r\n    NhanVien: NhanVienDTO;\r\n    ListRoles: RoleDTO[];\r\n    RoleIds: string[];\r\n}\r\n","export class BaseResponse<T> {\r\n    public Status: boolean;\r\n    public Data: T;\r\n    public Error: Error;\r\n}\r\n\r\nclass Error {\r\n    public code: string;\r\n    public message: string;\r\n}\r\n","// tslint:disable-next-line: eofline\r\nexport * from './base_response';\r\nexport * from './NhanVienDTO';\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { NzMessageService, NzModalRef } from 'ng-zorro-antd';\nimport { Observable, Observer } from 'rxjs';\nimport { TypeMessage } from 'src/app/app.constant';\nimport { RoleDTO } from 'src/app/models/RoleDTO';\nimport { UserDTO } from 'src/app/models/UserDTO';\nimport { NhanvienService } from 'src/app/shared/services/nhanvien.service';\nimport { RoleService } from 'src/app/shared/services/role.service';\nimport { UsersService } from 'src/app/shared/services/users.service';\n\n@Component({\n  selector: 'app-user-dialog',\n  templateUrl: './user-dialog.component.html',\n  styleUrls: ['./user-dialog.component.css']\n})\nexport class UserDialogComponent implements OnInit {\n\n  isConfirmLoading = false;\n  isShowAdduser = false;\n  isSaveLoading = false;\n  hasEmployeeNotAccount = false;\n\n  listUser: UserDTO[] = [];\n  modelRoleModal: any = [];\n  listRole: RoleDTO[] = [];\n\n  @Input() isAdd: boolean;\n  @Input() userDto: UserDTO;\n  @Input() isShowAddRole: boolean;\n  @Input() listRoles: any;\n\n\n  resetPassword = false;\n  validateForm: FormGroup;\n  loading = false;\n  avatarUrl: string;\n  listEmployeeNotAccount: any;\n  checkUserNameValue: any;\n  userNameExist: string;\n  selectValue = null;\n  selectedEmployee: any = [];\n  hasEmployee: any = false;\n  constructor(\n    private userService: UsersService,\n    private fb: FormBuilder,\n    private message: NzMessageService,\n    private modal: NzModalRef,\n    private nhanvienService: NhanvienService,\n    private roleService: RoleService\n  ) { }\n\n  ngOnInit(): void {\n    if (this.isAdd) {\n      this.initFormValidate();\n    } else {\n      this.initFormValidateEdit();\n    }\n    this.getEmployeeNotAccount();\n    this.getRoles();\n  }\n\n  private initFormValidate(): void {\n    this.validateForm = this.fb.group({\n      _ipText_userName: ['', [Validators.required], [this.userNameAsyncValidator]],\n      _selectBox_Employee: ['', Validators.required],\n      _selectBox_role: ['', [Validators.required]],\n    });\n  }\n  private initFormValidateEdit(): void {\n    this.validateForm = this.fb.group({\n      _ipText_userName: ['', [Validators.required], [this.userNameAsyncValidator]],\n      _selectBox_Employee: [''],\n      _selectBox_role: [''],\n    });\n  }\n\n  private getEmployeeNotAccount(): any {\n    this.nhanvienService.getEmployeeNotAccount().subscribe(response => {\n      if (response && response.Status && response.Data) {\n        this.listEmployeeNotAccount = response.Data;\n        this.hasEmployeeNotAccount = true;\n        console.log(this.listEmployeeNotAccount);\n      }\n    });\n  }\n\n\n  userNameAsyncValidator = (control: FormControl) =>\n    new Observable((observer: Observer<ValidationErrors | null>) => {\n      setTimeout(() => {\n        this.userService.getByUserName(control.value).subscribe(response => {\n          if (response.Status && response.Data) {\n            this.selectedEmployee = response.Data;\n            // tslint:disable-next-line: triple-equals\n            if (this.selectedEmployee.Id != this.userDto.Id) {\n              observer.next({ error: true, duplicated: true });\n            } else {\n              observer.next(null);\n            }\n          } else {\n            observer.next(null);\n          }\n          observer.complete();\n        });\n      }, 1000);\n    })\n\n  private getRoles(): any {\n    this.roleService.getAll().subscribe(response => {\n      if (response && response.Status) {\n        this.listRole = JSON.parse(JSON.stringify(response.Data));\n        this.modelRoleModal = JSON.parse(JSON.stringify(response.Data.map(p => {\n          return { name: p.Name, id: p.Id };\n        })));\n      }\n    });\n  }\n\n  public handleCancelButton(): void {\n    this.resetForm();\n    this.modal.destroy();\n  }\n\n  public handleSubmitButton(): void {\n    this.isSaveLoading = true;\n    this.saveData();\n    setTimeout(() => {\n      this.isSaveLoading = false;\n    }, 1000);\n    this.modal.destroy();\n  }\n\n  resetForm(): void {\n    this.validateForm.reset();\n    // tslint:disable-next-line: forin\n    for (const key in this.validateForm.controls) {\n      this.validateForm.controls[key].markAsPristine();\n      this.validateForm.controls[key].updateValueAndValidity();\n    }\n  }\n\n  private saveData() {\n    this.isConfirmLoading = true;\n    if (!this.userDto || this.isAdd) {\n      this.insertUser();\n\n    } else {\n      this.updateUser();\n    }\n  }\n\n  private insertUser(): void {\n    if (this.userDto) {\n      this.userDto.Status = 'Active';\n      this.userService.createEmployeeAccount(this.userDto).subscribe(response => {\n        if (response && response.Status) {\n          this.message.create(TypeMessage.Success, 'Thêm tài khoản thành công');\n        } else {\n          this.message.create(TypeMessage.Error, 'Thêm tài khoản thất bại!');\n        }\n        this.isConfirmLoading = false;\n      });\n      this.resetForm();\n    }\n\n  }\n  private updateUser() {\n    if (this.userDto) {\n      this.userService.updateEmployeeAccount(this.userDto).subscribe(response => {\n          if (response && response.Status) {\n            this.message.create(TypeMessage.Success, 'Cập nhật tài khoản người dùng thành công');\n          } else {\n            this.message.create(TypeMessage.Error, 'Cập nhật tài khoản người dùng không thành công!');\n          }\n          this.isConfirmLoading = false;\n        });\n    }\n  }\n\n}\n","<form nz-form [formGroup]=\"validateForm\" class=\"ant-advanced-search-form\">\n    <div nz-row [nzGutter]=\"24\">\n        <div nz-col>\n            <nz-form-item *ngIf=\"isAdd; else employeeEdit\">\n                <nz-form-label nzRequired>Chọn nhân viên</nz-form-label>\n                <nz-form-control>\n                    <nz-select nzPlaceHolder=\"Danh sách nhân viên chưa có tài khoản\" nzShowSearch formControlName=\"_selectBox_Employee\" [(ngModel)]=\"userDto.MaNhanVien\">\n                        <ng-container *ngFor=\"let item of listEmployeeNotAccount\">\n                            <nz-option nzLabel=\"{{item.CMND}} - {{item.HoLot}} {{item.TenNhanVien}}\" nzValue=\"{{item.MaNhanVien}}\"></nz-option>\n                        </ng-container>\n                    </nz-select>\n                </nz-form-control>\n            </nz-form-item>\n            <ng-template #employeeEdit>\n                <nz-form-item>\n                    <nz-form-label>Chọn nhân viên</nz-form-label>\n                    <nz-form-control>\n                        <nz-select nzPlaceHolder=\"Danh sách nhân viên chưa có tài khoản\" nzShowSearch formControlName=\"_selectBox_Employee\" [(ngModel)]=\"userDto.MaNhanVien\" nzDisabled=\"!isAdd\">\n                            <nz-option nzLabel=\"{{userDto.NhanVien.CMND}} - {{userDto.NhanVien.HoLot}} {{userDto.NhanVien.TenNhanVien}}\" nzValue=\"{{userDto.MaNhanVien}}\"></nz-option>\n                        </nz-select>\n                    </nz-form-control>\n                </nz-form-item>\n            </ng-template>\n\n        </div>\n        <div nz-col>\n            <nz-form-item>\n                <nz-form-label nzRequired>Tên đăng nhập</nz-form-label>\n                <nz-form-control nzHasFeedback [nzErrorTip]=\"userNameErrorTpl\" nzValidatingTip=\"Đang kiểm tra...\">\n                    <input nz-input placeholder=\"Tên đăng nhập\" [(ngModel)]=\"userDto.UserName\" type=\"text\" formControlName=\"_ipText_userName\" />\n                    <ng-template #userNameErrorTpl let-control>\n                        <ng-container *ngIf=\"control.hasError('required')\">\n                            Tên đăng nhập không được trống!\n                        </ng-container>\n                        <ng-container *ngIf=\"control.hasError('duplicated')\">\n                            Tên đăng nhập đã tồn tại!\n                        </ng-container>\n                    </ng-template>\n                </nz-form-control>\n\n            </nz-form-item>\n        </div>\n        <div nz-col [nzSpan]=\"12\" *ngIf=\"isAdd\">\n            <nz-form-item>\n                <nz-form-label nzRequired>Thiết lập vai trò</nz-form-label>\n                <nz-form-control>\n                    <nz-select [nzMaxTagCount]=\"3\" nzMode=\"multiple\" [nzMaxTagPlaceholder]=\"tagPlaceHolder\" nzPlaceHolder=\"Please select\" [(ngModel)]=\"userDto.RoleIds\" formControlName=\"_selectBox_role\" nzHasFeedback nzErrorTip=\"Vui lòng chọn vai trò cho tài khoản!\">\n                        <ng-container *ngFor=\"let option of modelRoleModal\">\n                            <nz-option [nzLabel]=\"option.name\" [nzValue]=\"option.id\"></nz-option>\n                        </ng-container>\n                    </nz-select>\n                    <ng-template #tagPlaceHolder let-selectedList> and {{ selectedList.length }} more selected </ng-template>\n                </nz-form-control>\n            </nz-form-item>\n        </div>\n    </div>\n    <div *nzModalFooter>\n        <button nz-button nzType=\"default\" (click)=\"handleCancelButton()\">Hủy</button>\n        <button nz-button nzType=\"primary\" [nzLoading]=\"isConfirmLoading\" [disabled]=\"!validateForm.valid\" (click)=\"handleSubmitButton()\">Lưu</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { NzMessageService, NzModalService } from 'ng-zorro-antd';\nimport { TypeMessage } from 'src/app/app.constant';\nimport { UserDTO } from 'src/app/models/UserDTO';\nimport { UsersService } from 'src/app/shared/services/users.service';\nimport { UserDialogComponent } from '../user-dialog/user-dialog.component';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n  pageTitle: string = \"Danh sách tài khoản người dùng hoạt động\";\n  headerListUserLocked: string = \"Danh sách tài khoản bị khóa\";\n  validateForm: FormGroup;\n\n  isShowAddRole = false;\n  isSaveLoading = false;\n  isLockAccount = false;\n  public isShowAddUser = false;\n  public isConfirmLoading = false;\n\n  listUser: UserDTO[] = [];\n  listUserAccountLocked: UserDTO[] = [];\n  modelRoleModal: any = [];\n  listUserRoles: any = [];\n\n  user: UserDTO;\n  idUserSelected: string;\n  roleIds: any;\n\n\n  constructor(\n    private fb: FormBuilder,\n    private userService: UsersService,\n    private modalService: NzModalService,\n    private message: NzMessageService,\n  ) {}\n\n  ngOnInit(): void {\n      //get danh sách tài khoản người dùng\n      this.getListUsers();\n\n  }\n\n  private getListUsers(): any {\n    this.isConfirmLoading = true;\n    setTimeout(() => {\n      this.userService.getAllUserAccountActive().subscribe(response => {\n        if (response && response.Status) {\n          this.listUser = JSON.parse(JSON.stringify(response.Data));        }\n      });\n    }, 2000);\n    this.isConfirmLoading = false;\n    this.getListUsersAccountLocked();\n  }\n\n  // private getListUsers(): any {\n  //   this.userService.getAllEmployeeAccount().subscribe(response => {\n  //     if (response && response.Status) {\n  //       this.listUser = JSON.parse(JSON.stringify(response.Data));\n  //     }\n  //   });\n  // }\n\n  createUser(): void {\n    const modalCreate = this.modalService.create({\n      nzTitle: 'Thêm tài khoản người dùng',\n      nzContent: UserDialogComponent,\n      nzComponentParams: {\n        isAdd: true,\n        userDto: new UserDTO()\n      },\n      nzWidth: '800',\n    });\n    // Return a result when closed\n    modalCreate.afterClose.subscribe(() => {\n      return this.ngOnInit();\n    });\n  }\n\n  private getListUsersAccountLocked(): any {\n    this.isConfirmLoading = true;\n    setTimeout(() => {\n      this.userService.getAllUserAccountLocked().subscribe(response => {\n        if (response && response.Status) {\n          this.listUserAccountLocked = JSON.parse(JSON.stringify(response.Data));\n        }\n      });\n    }, 1000);\n    this.isConfirmLoading = false;\n  }\n\n  editUser(data: any) {\n    const modalEdit = this.modalService.create({\n      nzTitle: 'Chỉnh sửa thông tin tài khoản ' + data.UserName,\n      nzContent: UserDialogComponent,\n      nzComponentParams: {\n        userDto: JSON.parse(JSON.stringify(data))\n      },\n      nzWidth: '480',\n    });\n    // Return a result when closed\n    modalEdit.afterClose.subscribe(() => {\n      return this.ngOnInit();\n    });\n  }\n\n\n  lockAccount(data: any) {\n    this.isConfirmLoading = true;\n    setTimeout(() => {\n      this.changeStatusAccountToLocked(data);\n    }, 2000);\n  }\n\n  private changeStatusAccountToLocked(userSelected: any) {\n    if (userSelected) {\n      userSelected.Status = 'Locked';\n      this.userService.updateStatusAccount(userSelected).subscribe(response => {\n        if (response && response.Status) {\n          this.message.create(TypeMessage.Success, 'Khóa tài khoản thành công!'\n          );\n        } else {\n          this.message.create(TypeMessage.Error, 'Khóa tài khoản không thành công!'\n          );\n        }\n        this.isConfirmLoading = false;\n        this.ngOnInit();\n      });\n\n    }\n  }\n\n  unLockAccount(data: any) {\n    this.isConfirmLoading = true;\n    setTimeout(() => {\n      this.changeStatusAccountToActive(data);\n    }, 2000);\n  }\n\n\n  private changeStatusAccountToActive(userSelected: any) {\n    if (userSelected) {\n      userSelected.Status = 'Active';\n      this.userService.updateStatusAccount(userSelected).subscribe(response => {\n        if (response && response.Status) {\n          this.message.create(TypeMessage.Success, 'Mở khóa tài khoản thành công!'\n          );\n        } else {\n          this.message.create(TypeMessage.Error, 'Mở khóa tài khoản không thành công!'\n          );\n        }\n        this.isConfirmLoading = false;\n        this.ngOnInit();\n      });\n    }\n  }\n\n\n}\n","<nz-page-header>\n    <nz-page-header-title>{{pageTitle | uppercase}}</nz-page-header-title>\n    <nz-page-header-extra>\n        <!-- button create -->\n        <button class=\"btn-create\" nz-button nzType=\"primary\" nzShape=\"round\" (click)=\"createUser()\">\n      <i nz-icon nzType=\"plus\"></i>Thêm Tài Khoản Nhân viên\n    </button>\n    </nz-page-header-extra>\n    <!--content-->\n    <nz-page-header-content>\n        <!-- data table -->\n        <nz-table #userTable nzBordered [nzData]=\"listUser\" [nzLoading]=\"isConfirmLoading\">\n            <thead>\n                <tr>\n                    <th>STT</th>\n                    <th>Tên đăng nhập</th>\n                    <th>Họ và tên</th>\n                    <th>Số CMND</th>\n                    <th>Email</th>\n                    <th>Vai trò</th>\n                    <th>Status</th>\n                    <th> </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let data of userTable.data; index as i; \">\n                    <td>{{i+1}}</td>\n                    <td>{{data.UserName}}</td>\n                    <!-- <td>{{data.NhanVien.TenNhanVien}}</td>\n                    <td>{{data.NhanVien.CMND}}</td>\n                    <td>{{data.NhanVien.Email}}</td> -->\n\n                    <td>\n                        <ul>\n                            <ng-container *ngFor=\"let item of data.ListRoles\">\n                                <li>{{item.Name}} </li>\n                            </ng-container>\n                        </ul>\n                    </td>\n                    <td>\n                        <ng-container *ngIf=\"data.Status == 'Active'\">\n                            <span class=\"active\"><i nz-icon nzType=\"check-circle\" nzTheme=\"outline\"></i>Đang hoạt động</span>\n                        </ng-container>\n                        <ng-container *ngIf=\"data.Status == 'Locked'\">\n                            <span class=\"locked\"><i nz-icon nzType=\"lock\" nzTheme=\"outline\"></i>Đã khóa</span>\n                        </ng-container>\n                    </td>\n                    <td>\n                        <button nz-button nzType=\"primary\" nzShape=\"round\">\n              <i nz-icon nzType=\"edit\" (click)=\"editUser(data)\"></i>Sửa\n            </button>\n                        <button nz-button nzType=\"primary\" nzShape=\"round\">\n              <i nz-icon nzType=\"setting\"></i>Vai trò\n            </button>\n                        <button nz-button nzType=\"warning\" nzShape=\"round\">\n                <i nz-icon nzType=\"key\"></i>Đặt lại mật khẩu\n              </button>\n                        <button nz-button nzType=\"danger\" nzShape=\"round\">\n                <i nz-icon nzType=\"lock\" (click)=\" lockAccount(data)\"></i>Khóa\n              </button>\n                    </td>\n                </tr>\n            </tbody>\n        </nz-table>\n    </nz-page-header-content>\n</nz-page-header>\n\n<nz-page-header>\n    <nz-page-header-title>{{headerListUserLocked | uppercase}}</nz-page-header-title>\n    <!--content-->\n    <nz-page-header-content>\n        <!-- data table -->\n        <nz-table #userLockedTable nzBordered [nzData]=\"listUserAccountLocked\" [nzLoading]=\"isConfirmLoading\">\n            <thead>\n                <tr>\n                    <th>STT</th>\n                    <th>Tên đăng nhập</th>\n                    <th>Họ và tên</th>\n                    <th>Số CMND</th>\n                    <th>Email</th>\n                    <th>Vai trò</th>\n                    <th>Status</th>\n                    <th> </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let data of userLockedTable.data; index as i; \">\n                    <td>{{i+1}}</td>\n                    <td>{{data.UserName}}</td>\n                    <!-- <td>{{data.NhanVien.TenNhanVien}}</td>\n                    <td>{{data.NhanVien.CMND}}</td>\n                    <td>{{data.NhanVien.Email}}</td> -->\n                    <td>\n                        <ul>\n                            <ng-container *ngFor=\"let item of data.ListRoles\">\n                                <li>{{item.Name}} </li>\n                            </ng-container>\n                        </ul>\n                    </td>\n                    <td>\n                        <ng-container *ngIf=\"data.Status == 'Active'\">\n                            <span class=\"active\"><i nz-icon nzType=\"check-circle\" nzTheme=\"outline\"></i>Đang hoạt động</span>\n                        </ng-container>\n                        <ng-container *ngIf=\"data.Status == 'Locked'\">\n                            <span class=\"locked\"><i nz-icon nzType=\"lock\" nzTheme=\"outline\"></i>Đã khóa</span>\n                        </ng-container>\n                    </td>\n                    <td>\n                        <button nz-button nzType=\"primary\" nzShape=\"round\">\n              <i nz-icon nzType=\"unlock\" (click)=\"unLockAccount(data)\"></i>Mở khóa tài khoản\n            </button>\n                    </td>\n                </tr>\n            </tbody>\n        </nz-table>\n    </nz-page-header-content>\n</nz-page-header>","import { Component, OnInit } from '@angular/core';\nimport { NzModalService } from 'ng-zorro-antd';\nimport { HinhAnhBienTheDTO } from 'src/app/models/HinhAnhBienTheDTO';\nimport { UploadImgBTComponent } from '../upload-img-bt/upload-img-bt.component';\n\n@Component({\n  selector: 'app-img-list',\n  templateUrl: './img-list.component.html',\n  styleUrls: ['./img-list.component.css']\n})\nexport class ImgListComponent implements OnInit {\n\n  constructor(\n    private modalService: NzModalService\n  ) { }\n\n  ngOnInit(): void {\n  }\n  createNhanVien(): void {\n    const modalCreate = this.modalService.create({\n      nzTitle: 'Thêm nhân viên',\n      nzContent: UploadImgBTComponent,\n      nzComponentParams: {\n        isAdd: true,\n        hinhanhDto: new HinhAnhBienTheDTO()\n      },\n      nzWidth: '800',\n    });\n    // Return a result when closed\n    modalCreate.afterClose.subscribe(() => {\n      return this.ngOnInit();\n    });\n  }\n\n\n}\n","<!-- button create -->\n<button nz-button nzType=\"primary\" nzShape=\"round\" class=\"btn-create\" (click)=\"createNhanVien()\">\n    <i nz-icon nzType=\"plus\"></i>Thêm nhân viên\n  </button>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { NzMessageService, NzModalRef, UploadFile } from 'ng-zorro-antd';\nimport { Observable, Observer } from 'rxjs';\nimport { TypeMessage } from 'src/app/app.constant';\nimport { HinhAnhBienTheDTO } from 'src/app/models/HinhAnhBienTheDTO';\nimport { BientheService } from 'src/app/shared/services/bienthe.service';\nimport { HinhanhService } from 'src/app/shared/services/hinhanh.service';\n\n@Component({\n  selector: 'app-upload-img-bt',\n  templateUrl: './upload-img-bt.component.html',\n  styleUrls: ['./upload-img-bt.component.css']\n})\nexport class UploadImgBTComponent implements OnInit {\n\n  imageUrl : string = \"/assets/image/imageBT/default-image=image.png\";\n  fileToUpload: File = null;\n  listbt: any;\n  loading = false;\n  avatarUrl: string;\n\n  isConfirmLoading = false;\n  isShowAddNhanVien = false;\n  isSaveLoading = false;\n\n  @Input() hinhanhDto: HinhAnhBienTheDTO;\n  @Input() isAdd: boolean;\n  constructor(\n    private bientheService: BientheService,\n    private message: NzMessageService,\n    private fb: FormBuilder,\n    private hinhanhService: HinhanhService,\n    private modal: NzModalRef,\n   ) { }\n\n  ngOnInit(): void {\n    this.getBT();\n  }\n\n  handleFileInput(file: FileList) {\n    this.fileToUpload = file.item(0);\n\n    // tslint:disable-next-line: prefer-const\n    let reader = new FileReader();\n    reader.onload = (event: any) => {\n      this.imageUrl = event.target.result;\n    };\n    reader.readAsDataURL(this.fileToUpload);\n  }\n\n  private getBT(): any {\n    this.bientheService.getAll().subscribe(response => {\n      if (response && response.Status) {\n        this.listbt = response.Data;\n      }\n    });\n  }\n\n  beforeUpload = (file: File) => {\n    return new Observable((observer: Observer<boolean>) => {\n      const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n      if (!isJpgOrPng) {\n        this.message.error('Vui lòng tải lên hình ảnh có định dạng PNG hoặc JPEG!');\n        observer.complete();\n        return;\n      }\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isLt2M) {\n        this.message.error('Vui lòng tải lên hình ảnh có dung lượng nhỏ hơn hoặc bằng 2MB!');\n        observer.complete();\n        return;\n      }\n      observer.next(isJpgOrPng && isLt2M);\n      observer.complete();\n    });\n  };\n\n  getBase64(img: File, callback: (img: string) => void): void {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result!.toString()));\n    reader.readAsDataURL(img);\n  }\n\n  handleChange(info: { file: UploadFile }): void {\n    switch (info.file.status) {\n      case 'uploading':\n        this.loading = true;\n        break;\n      case 'done':\n        // Get this url from response in real world.\n        this.getBase64(info.file!.originFileObj!, (img: string) => {\n          this.loading = false;\n          this.avatarUrl = img;\n          this.hinhanhDto.DuongDan = this.avatarUrl;\n        });\n        break;\n      case 'error':\n        this.message.error('Network error');\n        this.loading = false;\n        break;\n    }\n  }\n\n\n  public handleSubmitButton(): void {\n    this.isSaveLoading = true;\n    this.saveData();\n    setTimeout(() => {\n      this.isSaveLoading = false;\n    }, 1000);\n    this.modal.destroy();\n  }\n\n  /**\n   * check them hoac chinh sua nhan vien\n   */\n  private saveData() {\n    this.isConfirmLoading = true;\n    if (!this.hinhanhDto || this.isAdd) {\n      this.InsertNhanVien();\n    } else {\n      this.UpdateNhanVien();\n    }\n  }\n\n  // tao nhan vien moi\n  private InsertNhanVien(): void {\n    if (this.hinhanhDto) {\n      this.hinhanhService.create(this.hinhanhDto).subscribe(response => {\n\n        if (response && response.Status) {\n          this.message.create(TypeMessage.Success, 'Thêm nhân viên thành công!'\n          );\n        } else {\n          this.message.create(TypeMessage.Error, 'Thêm nhân viên không thành công!'\n          );\n        }\n        this.isConfirmLoading = false;\n        //this.resetForm();\n      });\n    }\n  }\n\n  private UpdateNhanVien() {\n    if (this.hinhanhDto) {\n      this.hinhanhService.update(this.hinhanhDto).subscribe(response => {\n        if (response && response.Status) {\n          this.message.create(TypeMessage.Success, 'Cập nhật nhân viên thành công!'\n          );\n          console.log(this.hinhanhDto);\n        } else {\n          this.message.create(TypeMessage.Error, 'Cập nhật nhân viên không thành công!'\n          );\n        }\n        this.isConfirmLoading = false;\n      });\n    }\n  }\n\n}\n","<!-- <div class=\"clearfix\">\n<nz-upload nzAction=\"\">\n        <button nz-button><i nz-icon nzType=\"upload\"></i>Upload</button>\n    </nz-upload> \n    <input placeholder=\"caption\" type=\"text\" formControlName=\"caption\" />\n    <img [src]=\"imageUrl\" style=\"width: 250px; height: 200px;\">\n\n    <input type=\"file\" #Image accept=\"image/*\" (change)=\"handleFileInput($event.target.files)\">\n</div> -->\n\n<!-- Tao hoac chinh sua thong tin nhan vien -->\n<form nz-form class=\"ant-advanced-search-form\">\n    <div nz-col [nzSpan]=\"8\">\n        <nz-form-item>\n            <nz-form-label>Tên nhân viên</nz-form-label>\n            <nz-form-control>\n                <input nz-input placeholder=\"Tên nhân viên\" [(ngModel)]=\"hinhanhDto.TenHinhAnh\" type=\"text\" />\n            </nz-form-control>\n        </nz-form-item>\n    </div>\n    <div nz-row [nzGutter]=\"24\">\n\n        <!-- //radio -->\n        <div nz-col [nzSpan]=\"8\">\n            <nz-form-item>\n                <nz-form-label>chon avt</nz-form-label>\n                <nz-form-control>\n                    <nz-radio-group [(ngModel)]=\"hinhanhDto.ChonAvt\">\n                        <label nz-radio [nzValue]=\"false\">Nữ</label>\n                        <label nz-radio [nzValue]=\"true\">Nam</label>\n\n                    </nz-radio-group>\n                </nz-form-control>\n            </nz-form-item>\n        </div>\n        <div nz-col [nzSpan]=\"8\">\n            <nz-form-item>\n                <nz-form-label>Chức vụ</nz-form-label>\n                <nz-form-control>\n                    <nz-select style=\"width: 100%\" nzPlaceHolder=\"Chọn chức vụ cho nhân viên\" nzShowSearch [(ngModel)]=\"hinhanhDto.MaBienThe\">\n                        <ng-container *ngFor=\"let item of listbt\">\n                            <nz-option nzLabel=\"{{item.TenBienThe}}\" nzValue=\"{{item.MaBienThe}}\"></nz-option>\n                        </ng-container>\n                    </nz-select>\n                </nz-form-control>\n            </nz-form-item>\n        </div>\n    </div>\n    <div nz-row [nzGutter]=\"24\">\n\n        <div nz-col [nzSpan]=\"8\">\n            <nz-form-item>\n                <nz-form-label>Hình ảnh</nz-form-label>\n                <nz-form-control>\n                    <nz-upload class=\"avatar-uploader\" nzAction=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\" nzName=\"_ipUpload_image\" nzListType=\"picture-card\" [nzShowUploadList]=\"false\" [nzBeforeUpload]=\"beforeUpload\" (nzChange)=\"handleChange($event)\">\n                        <ng-container *ngIf=\"!avatarUrl\">\n                            <i class=\"upload-icon\" nz-icon [nzType]=\"loading ? 'loading' : 'plus'\"></i>\n                            <div class=\"ant-upload-text\">Upload</div>\n                        </ng-container>\n                        <img *ngIf=\"avatarUrl\" [src]=\"avatarUrl\" style=\"width: 100%\" />\n                    </nz-upload>\n                </nz-form-control>\n            </nz-form-item>\n        </div>\n    </div>\n\n    <div *nzModalFooter>\n        <button nz-button nzType=\"default\">Hủy</button>\n        <button nz-button nzType=\"primary\" (click)=\"handleSubmitButton()\">Lưu</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport * as CONFIG from './../../app.config';\r\nimport { Router } from '@angular/router';\r\nimport { LoginDTO } from 'src/app/models/LoginDTO';\r\nimport { LoginService } from 'src/app/shared/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  pageTitle = CONFIG.SITENAME;\r\n  year: number = new Date().getFullYear();\r\n  pageFooter = CONFIG.SITENAME + ' ©' + this.year;\r\n  validateForm: FormGroup;\r\n   isShowMessage = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private loginService: LoginService,\r\n    private router: Router) {\r\n    document.body.className = \"login-body\";\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initFormValidate();\r\n    if (this.isLogin()) {\r\n      this.router.navigateByUrl('/home');\r\n    }\r\n  }\r\n\r\n  private initFormValidate(): void {\r\n    this.validateForm = this.fb.group({\r\n      _ipText_userName: [null, [Validators.required]],\r\n      _ipText_password: [null, [Validators.required]]\r\n    });\r\n  }\r\n\r\n  public getTokenFromLocalStorage() {\r\n    return localStorage.getItem(CONFIG.localStorageKey);\r\n  }\r\n\r\n  public setTokenFromLocalStorage(value: string) {\r\n    localStorage.setItem(CONFIG.localStorageKey, value);\r\n  }\r\n\r\n  public isLogin(): boolean {\r\n    const tokenData = this.getTokenFromLocalStorage();\r\n    if (tokenData && tokenData !== 'null') {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  submitForm(): void {\r\n    for (const i in this.validateForm.controls) {\r\n      this.validateForm.controls[i].markAsDirty();\r\n      this.validateForm.controls[i].updateValueAndValidity();\r\n    }\r\n\r\n    // check valid\r\n    if (this.validateForm.status === 'INVALID') {\r\n      return;\r\n    }\r\n    this.login();\r\n  }\r\n\r\n  private login() {\r\n    const loginDto: LoginDTO = {\r\n      username: this.validateForm.controls._ipText_userName.value,\r\n      password: this.validateForm.controls._ipText_password.value,\r\n    };\r\n\r\n    this.loginService.getToken(loginDto).subscribe(response => {\r\n\r\n      if (response.Status === true && response.Data == null) {\r\n        this.isShowMessage = true;\r\n      }\r\n      if (response && response.Data && response.Data !== 'null') {\r\n        this.setTokenFromLocalStorage(response.Data);\r\n        this.router.navigateByUrl('/home');\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<nz-layout class=\"login-page\">\r\n    <nz-content>\r\n        <div class=\"inner-content\">\r\n            <i class=\"lock-icon\" nz-icon nzType=\"unlock\" nzTheme=\"outline\"></i>\r\n            <h1 class=\"page-header\">{{pageTitle | uppercase}}</h1>\r\n            <form nz-form [formGroup]=\"validateForm\" class=\"login-form\" (ngSubmit)=\"submitForm()\">\r\n                <nz-alert class=\"alert-login\" *ngIf=\"isShowMessage\" nzType=\"error\" nzMessage=\"Tên đăng nhập hoặc mật khẩu không đúng\"></nz-alert>\r\n                <nz-form-item>\r\n                    <nz-form-control nzHasFeedback nzErrorTip=\"Vui lòng nhập tên đăng nhập!\">\r\n                        <nz-input-group [nzPrefix]=\"prefixUser\">\r\n                            <input type=\"text\" nz-input formControlName=\"_ipText_userName\" placeholder=\"Tên đăng nhập\" />\r\n                        </nz-input-group>\r\n                    </nz-form-control>\r\n                </nz-form-item>\r\n                <nz-form-item>\r\n                    <nz-form-control nzHasFeedback nzErrorTip=\"Vui lòng nhập mật khẩu!\">\r\n                        <nz-input-group [nzPrefix]=\"prefixLock\">\r\n                            <input type=\"password\" nz-input formControlName=\"_ipText_password\" placeholder=\"Mật khẩu\" />\r\n                        </nz-input-group>\r\n                    </nz-form-control>\r\n                </nz-form-item>\r\n                <nz-form-item>\r\n                    <nz-form-control>\r\n                        <button nz-button class=\"login-form-button\" [nzType]=\"'primary'\">Đăng nhập</button>\r\n                    </nz-form-control>\r\n                </nz-form-item>\r\n            </form>\r\n            <ng-template #prefixUser><i nz-icon nzType=\"user\"></i></ng-template>\r\n            <ng-template #prefixLock><i nz-icon nzType=\"lock\"></i></ng-template>\r\n        </div>\r\n    </nz-content>\r\n    <nz-footer style=\"text-align: center;\">{{pageFooter | uppercase}}</nz-footer>\r\n</nz-layout>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NzModalService } from 'ng-zorro-antd';\nimport { NhanvienService } from 'src/app/shared/services/nhanvien.service';\nimport { NhanvienDialogComponent } from '../nhanvien-dialog/nhanvien-dialog.component';\n\nconst userList = ['User', 'Admin', 'Accounter', 'Admin1'];\nconst colorList = ['#f56a00', '#7265e6', '#ffbf00', '#00a2ae'];\n\n@Component({\n  selector: 'app-nhanvien-detail',\n  templateUrl: './nhanvien-detail.component.html',\n  styleUrls: ['./nhanvien-detail.component.css']\n})\n\n\nexport class NhanvienDetailComponent implements OnInit {\n\n  pageTitle = 'Chi tiết nhân viên';\n  selectedNhanvien: any = [];\n  hasNhanvien: any = false;\n\n  text: string = userList[3];\n  color: string = colorList[3];\n\n  constructor(\n    public nhanvienService: NhanvienService,\n    public activatedRoute: ActivatedRoute,\n    private modalService: NzModalService) { }\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.getDetail(params.manhanvien);\n    });\n  }\n  public getDetail(manhanvien: string) {\n    this.nhanvienService.getDetail(manhanvien).subscribe(response => {\n      if (response.Status === true) {\n        this.selectedNhanvien = response.Data;\n        this.hasNhanvien = true;\n      }\n      console.log(this.selectedNhanvien);\n    });\n  }\n\n\n  change(): void {\n    let idx = userList.indexOf(this.text);\n    ++idx;\n    if (idx === userList.length) {\n      idx = 0;\n    }\n    this.text = userList[idx];\n    this.color = colorList[idx];\n  }\n\n\n}\n","<nz-page-header>\n    <nz-page-header-title>{{pageTitle}}</nz-page-header-title>\n    <nz-page-header-extra>\n        <button nz-button nzType=\"default\" nzShape=\"round\" [routerLink]=\"'/nhanvien-management'\">\n        <i nz-icon nzType=\"arrow-left\"></i>Quay lại danh sách nhân viên\n      </button>\n        <button nz-button nzType=\"primary\" nzShape=\"round\">\n        <i nz-icon nzType=\"edit\"></i>Sửa\n      </button>\n    </nz-page-header-extra>\n    <!--content-->\n    <nz-page-header-content *ngIf=\"hasNhanvien\">\n        <div class=\"wrap\">\n            <div class=\"extra-content\">\n                <nz-avatar [ngStyle]=\"{ 'background-color': color }\" [nzText]=\"text\" nzSize=\"large\" style=\"vertical-align: middle;\"></nz-avatar>\n                <button nz-button [nzType]=\"'dashed'\" (click)=\"change()\" style=\"margin-left: 16px; vertical-align: middle;\">\n                    <span>Change</span>\n                  </button>\n            </div>\n            <div class=\"content\">\n                <div class=\"content\">\n                    <nz-descriptions [nzColumn]=\"3\">\n                        <nz-descriptions-item nzTitle=\"Số CMND\" [nzSpan]=\"1\">{{selectedNhanvien.CMND}}\n                        </nz-descriptions-item>\n                        <nz-descriptions-item nzTitle=\"Họ và tên\" [nzSpan]=\"1\">{{selectedNhanvien.HoLot}} {{selectedNhanvien.TenNhanVien}}\n                        </nz-descriptions-item>\n\n                        <nz-descriptions-item nzTitle=\"Ngày sinh\" [nzSpan]=\"1\">{{selectedNhanvien.NgaySinh | date :'dd/MM/yyyy'}}\n                        </nz-descriptions-item>\n                        <nz-descriptions-item nzTitle=\"Giới tính\" [nzSpan]=\"1\">\n                            <!-- <ng-container *ngIf=\"selectedNhanvien.GioiTinh == 'False'\">Nam</ng-container>\n                            \n                            <ng-container *ngIf=\"selectedNhanvien.GioiTinh == 'True'\">Nữ</ng-container> -->\n\n                            <ng-container *ngIf=\"selectedNhanvien.GioiTinh == true\">\n                                Nam\n                            </ng-container>\n                            <ng-container *ngIf=\"selectedNhanvien.GioiTinh == false\">Nữ</ng-container>\n\n                        </nz-descriptions-item>\n                        <nz-descriptions-item nzTitle=\"SĐT\" [nzSpan]=\"1\">{{selectedNhanvien.Sdt}}</nz-descriptions-item>\n                        <nz-descriptions-item nzTitle=\"Địa chỉ\" [nzSpan]=\"1\">{{selectedNhanvien.DiaChi}}</nz-descriptions-item>\n                        <nz-descriptions-item nzTitle=\"Email\" [nzSpan]=\"1\">{{selectedNhanvien.Email}}</nz-descriptions-item>\n\n                    </nz-descriptions>\n                </div>\n            </div>\n        </div>\n    </nz-page-header-content>\n</nz-page-header>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NzMessageService, NzModalRef } from 'ng-zorro-antd';\nimport { TypeMessage } from 'src/app/app.constant';\nimport { NhanVienDTO } from 'src/app/models';\nimport { NhanvienService } from 'src/app/shared/services/nhanvien.service';\n\n@Component({\n  selector: 'app-nhanvien-dialog',\n  templateUrl: './nhanvien-dialog.component.html',\n  styleUrls: ['./nhanvien-dialog.component.css']\n})\nexport class NhanvienDialogComponent implements OnInit {\n\n  isConfirmLoading = false;\n  isShowAddNhanVien = false;\n  isSaveLoading = false;\n\n  @Input() isAdd: boolean;\n  @Input() nhanvienDto: NhanVienDTO;\n\n  dateFormat = 'dd/MM/yyyy';\n\n  validateForm: FormGroup;\n\n  loading = false;\n  avatarUrl: string;\n\n  constructor(\n    private nhanvienService: NhanvienService,\n    private fb: FormBuilder,\n    private message: NzMessageService,\n    private modal: NzModalRef,\n\n  ) { }\n\n  ngOnInit(): void {\n    this.initFormValidate();\n  }\n\n  private initFormValidate(): void {\n    this.validateForm = this.fb.group({\n      _ipText_CMND: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(20)]],\n      _ipText_HoLot: ['', Validators.required],\n      _ipText_TenNhanVien: ['', Validators.required],\n      _ipDate_NgaySinh: [null, Validators.required],\n      _rdo_gender: ['False', Validators.required],\n      _ipText_email: [null, [Validators.email, Validators.required]],\n      _ipText_Sdt: ['', [Validators.required, Validators.maxLength(13)]],\n      _ipTextarea_DiaChi: ['', '']\n    });\n  }\n\n  resetForm(): void {\n    this.validateForm.reset();\n    // tslint:disable-next-line: forin\n    for (const key in this.validateForm.controls) {\n      this.validateForm.controls[key].markAsPristine();\n      this.validateForm.controls[key].updateValueAndValidity();\n    }\n  }\n\n  public handleCancelButton(): void {\n    this.resetForm();\n    this.modal.destroy();\n  }\n\n  public handleSubmitButton(): void {\n    this.isSaveLoading = true;\n    this.saveData();\n    setTimeout(() => {\n      this.isSaveLoading = false;\n    }, 1000);\n    this.modal.destroy();\n  }\n\n  /**\n   * check them hoac chinh sua nhan vien\n   */\n  private saveData() {\n    this.isConfirmLoading = true;\n    if (!this.nhanvienDto || this.isAdd) {\n      this.InsertNhanVien();\n    } else {\n      this.UpdateNhanVien();\n    }\n  }\n\n  // tao nhan vien moi\n  private InsertNhanVien(): void {\n    if (this.nhanvienDto) {\n      this.nhanvienService.create(this.nhanvienDto).subscribe(response => {\n\n        if (response && response.Status) {\n          this.message.create(TypeMessage.Success, 'Thêm nhân viên thành công!'\n          );\n        } else {\n          this.message.create(TypeMessage.Error, 'Thêm nhân viên không thành công!'\n          );\n        }\n        this.isConfirmLoading = false;\n        this.resetForm();\n      });\n    }\n  }\n\n  private UpdateNhanVien() {\n    if (this.nhanvienDto) {\n      this.nhanvienService.update(this.nhanvienDto).subscribe(response => {\n        if (response && response.Status) {\n          this.message.create(TypeMessage.Success, 'Cập nhật nhân viên thành công!'\n          );\n          console.log(this.nhanvienDto);\n        } else {\n          this.message.create(TypeMessage.Error, 'Cập nhật nhân viên không thành công!'\n          );\n        }\n        this.isConfirmLoading = false;\n      });\n    }\n  }\n\n}\n","<!-- Tao hoac chinh sua thong tin nhan vien -->\n<form nz-form [formGroup]=\"validateForm\" class=\"ant-advanced-search-form\">\n    <div nz-row [nzGutter]=\"24\">\n        <div nz-col [nzSpan]=\"8\">\n            <nz-form-item>\n                <nz-form-label nzRequired>Số CMND:</nz-form-label>\n                <nz-form-control nzHasFeedback [nzErrorTip]=\"employeeIdErrorTpl\">\n                    <input nz-input placeholder=\"Số chứng minh nhân dân\" [(ngModel)]=\"nhanvienDto.CMND\" type=\"text\" formControlName=\"_ipText_CMND\" />\n                    <ng-template #employeeIdErrorTpl let-control>\n                        <ng-container *ngIf=\"control.hasError('maxlength')\">Số chứng minh nhân dân tối đa 20 kí tự</ng-container>\n                        <ng-container *ngIf=\"control.hasError('minlength')\">Số chứng minh nhân dân ít nhất 8 kí tự</ng-container>\n                        <ng-container *ngIf=\"control.hasError('required')\">Vui lòng nhập Số chứng minh nhân dân!</ng-container>\n                    </ng-template>\n                </nz-form-control>\n            </nz-form-item>\n        </div>\n        <div nz-col [nzSpan]=\"8\">\n            <nz-form-item>\n                <nz-form-label nzRequired>Họ lót</nz-form-label>\n                <nz-form-control nzHasFeedback nzErrorTip=\"Vui lòng nhập Họ lót nhân viên!\">\n                    <input nz-input placeholder=\"Họ lót nhân viên\" [(ngModel)]=\"nhanvienDto.HoLot\" type=\"text\" formControlName=\"_ipText_HoLot\" />\n                </nz-form-control>\n            </nz-form-item>\n        </div>\n        <div nz-col [nzSpan]=\"8\">\n            <nz-form-item>\n                <nz-form-label nzRequired>Tên nhân viên</nz-form-label>\n                <nz-form-control nzHasFeedback nzErrorTip=\"Vui lòng nhập tên nhân viên!\">\n                    <input nz-input placeholder=\"Tên nhân viên\" [(ngModel)]=\"nhanvienDto.TenNhanVien\" type=\"text\" formControlName=\"_ipText_TenNhanVien\" />\n                </nz-form-control>\n            </nz-form-item>\n        </div>\n    </div>\n    <div nz-row [nzGutter]=\"24\">\n        <div nz-col [nzSpan]=\"8\">\n            <nz-form-item>\n                <nz-form-label nzRequired>Ngày sinh</nz-form-label>\n                <nz-form-control nzHasFeedback nzErrorTip=\"Vui lòng nhập ngày sinh nhân viên!\">\n                    <nz-date-picker formControlName=\"_ipDate_NgaySinh\" [(ngModel)]=\"nhanvienDto.NgaySinh\" [nzFormat]=\"dateFormat\" nzPlaceHolder=\"Chọn ngày sinh\"></nz-date-picker>\n                </nz-form-control>\n            </nz-form-item>\n        </div>\n        <!-- //radio -->\n        <div nz-col [nzSpan]=\"8\">\n            <nz-form-item>\n                <nz-form-label nzRequired>Giới tính</nz-form-label>\n                <nz-form-control nzErrorTip=\"Vui lòng chọn giới tính nhân viên!\">\n                    <nz-radio-group formControlName=\"_rdo_gender\" [(ngModel)]=\"nhanvienDto.GioiTinh\">\n                        <label nz-radio [nzValue]=\"false\">Nữ</label>\n                        <label nz-radio [nzValue]=\"true\">Nam</label>\n\n                    </nz-radio-group>\n                </nz-form-control>\n            </nz-form-item>\n        </div>\n        <div nz-col [nzSpan]=\"8\">\n            <nz-form-item>\n                <nz-form-label nzRequired>Email</nz-form-label>\n                <nz-form-control nzHasFeedback [nzErrorTip]=\"emailErrorTpl\">\n                    <input nz-input placeholder=\"Email\" [(ngModel)]=\"nhanvienDto.Email\" type=\"text\" formControlName=\"_ipText_email\" />\n                    <ng-template #emailErrorTpl let-control>\n                        <ng-container *ngIf=\"control.hasError('email')\">\n                            Vui lòng nhập email hợp lệ!\n                        </ng-container>\n                        <ng-container *ngIf=\"control.hasError('required')\">\n                            Vui lòng nhập email nhân viên!\n                        </ng-container>\n                    </ng-template>\n                </nz-form-control>\n            </nz-form-item>\n        </div>\n        <div nz-col [nzSpan]=\"8\">\n            <nz-form-item>\n                <nz-form-label nzRequired>Số điện thoại</nz-form-label>\n                <nz-form-control nzHasFeedback [nzErrorTip]=\"SdtErrorTpl\">\n                    <input nz-input placeholder=\"SĐT\" [(ngModel)]=\"nhanvienDto.Sdt\" type=\"text\" formControlName=\"_ipText_Sdt\" />\n                    <ng-template #SdtErrorTpl let-control>\n                        <ng-container *ngIf=\"control.hasError('maxlength')\">Số điện thoại tối đa 13 kí tự</ng-container>\n                        <ng-container *ngIf=\"control.hasError('required')\">Vui lòng nhập Số điện thoại nhân viên!</ng-container>\n                    </ng-template>\n                </nz-form-control>\n            </nz-form-item>\n        </div>\n    </div>\n\n\n\n    <div nz-row [nzGutter]=\"24\">\n        <div nz-col [nzSpan]=\"8\">\n            <nz-form-item>\n                <nz-form-label>Địa chỉ</nz-form-label>\n                <nz-form-control>\n                    <textarea rows=\"4\" nz-input [(ngModel)]=\"nhanvienDto.DiaChi\" placeholder=\"Địa chỉ\" formControlName=\"_ipTextarea_DiaChi\"></textarea>\n                </nz-form-control>\n            </nz-form-item>\n        </div>\n\n    </div>\n    <div nz-row [nzGutter]=\"24\">\n\n    </div>\n    <div *nzModalFooter>\n        <button nz-button nzType=\"default\" (click)=\"handleCancelButton()\">Hủy</button>\n        <button nz-button nzType=\"primary\" [nzLoading]=\"isConfirmLoading\" [disabled]=\"!validateForm.valid\" (click)=\"handleSubmitButton()\">Lưu</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NzMessageService, NzModalService } from 'ng-zorro-antd';\nimport { TypeMessage } from 'src/app/app.constant';\nimport { NhanVienDTO } from 'src/app/models';\nimport { NhanvienService } from 'src/app/shared/services/nhanvien.service';\nimport { NhanvienDialogComponent } from '../nhanvien-dialog/nhanvien-dialog.component';\n\n@Component({\n  selector: 'app-nhanvien-list',\n  templateUrl: './nhanvien-list.component.html',\n  styleUrls: ['./nhanvien-list.component.css']\n})\nexport class NhanvienListComponent implements OnInit {\n  pageTitle = 'Danh sách nhân viên';\n  dataSource: any = [];\n  isConfirmLoading = false;\n\n  constructor(public nhanVienService: NhanvienService,\n              public router: Router,\n              private message: NzMessageService,\n              private modalService: NzModalService\n              ) { }\n\nngOnInit() {\n    this.isConfirmLoading = true;\n    this.loadNhanVienList();\n  }\n\n  // get danh sach nhan vien\n  public loadNhanVienList(): any {\n    this.nhanVienService.getAll().subscribe(response => {\n      if (response && response.Status) {\n        this.dataSource = response.Data;\n        this.isConfirmLoading = false;\n       // console.log(this.dataSource);\n      }\n    });\n  }\n\n  // xem chi tiết nhân viên\n  public viewNhanvien(manhanvien: any) {\n    this.navigateDetail(manhanvien);\n  }\n\n  private navigateDetail(manhanvien: any) {\n    if (manhanvien) {\n      // chuyen sang màn hình chi tiết nhan vien\n      this.router.navigate(['nhanvien-management/detail/'], { queryParams: { manhanvien: manhanvien } });\n    } else {\n      this.message.create(TypeMessage.Error, 'Có lỗi xảy ra!');\n    }\n  }\n\n  createNhanVien(): void {\n    const modalCreate = this.modalService.create({\n      nzTitle: 'Thêm nhân viên',\n      nzContent: NhanvienDialogComponent,\n      nzComponentParams: {\n        isAdd: true,\n        nhanvienDto: new NhanVienDTO()\n      },\n      nzWidth: '800',\n    });\n    // Return a result when closed\n    modalCreate.afterClose.subscribe(() => {\n      return this.ngOnInit();\n    });\n  }\n\n  editNhanVien(data: any) {\n    const modalEdit = this.modalService.create({\n      nzTitle: 'Chinh sửa nhân viên',\n      nzContent: NhanvienDialogComponent,\n      nzComponentParams: {\n        nhanvienDto: JSON.parse(JSON.stringify(data))\n      },\n      nzWidth: '800',\n    });\n    // Return a result when closed\n    modalEdit.afterClose.subscribe(() => {\n      return this.ngOnInit();\n    });\n  }\n\n  public confirmDelete(manhanvien: any) {\n    const modalDelete = this.modalService.confirm({\n      nzTitle: 'Bạn có chắc chắn xóa nhân viên này?',\n      nzContent: `<b style='color: red;'> Mã nhân viên: ${manhanvien}</b>`,\n      nzOkText: 'Xóa',\n      nzOkType: 'danger',\n      nzOnOk: () => this.deleteNhanVien(manhanvien),\n      nzCancelText: 'Hủy',\n    });\n    // Return a result when closed\n    modalDelete.afterClose.subscribe(() => {\n      return this.ngOnInit();\n    });\n  }\n\n\n  /**\n * delete data\n */\nprivate deleteNhanVien(manhanvien: any) {\n  const param: any = { manhanvien: manhanvien };\n  this.nhanVienService.delete(param).subscribe(response => {\n    if (response.Status === true) {\n      this.message.create(TypeMessage.Success, 'Xóa nhân viên thành công!');\n      // get lai danh sach nhan vien\n      this.loadNhanVienList();\n    } else {\n      this.message.create(TypeMessage.Error, 'Xóa nhân viên không thành công!');\n    }\n  });\n}\n\n\n}\n","<nz-page-header>\n    <nz-page-header-title>{{pageTitle | uppercase}}</nz-page-header-title>\n    <nz-page-header-extra>\n        <!-- button create -->\n        <button nz-button nzType=\"primary\" nzShape=\"round\" class=\"btn-create\" (click)=\"createNhanVien()\">\n  <i nz-icon nzType=\"plus\"></i>Thêm nhân viên\n</button>\n\n    </nz-page-header-extra>\n\n    <nz-page-header-content>\n        <!-- data table -->\n        <nz-table #nhanvienTable [nzData]=\"dataSource\" [nzLoading]=\"isConfirmLoading\">\n            <thead>\n                <tr>\n                    <th>STT</th>\n                    <th>Họ và tên </th>\n                    <th>Ngày Sinh</th>\n                    <th>Giới Tính</th>\n                    <th>SĐT</th>\n                    <th>Email</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let data of nhanvienTable.data; index as i; \">\n                    <td>{{i+1}}</td>\n                    <td>{{data.HoLot}} {{data.TenNhanVien}}</td>\n                    <td> {{data.NgaySinh | date :'dd/MM/yyyy'}}</td>\n                    <td>\n\n                        <ng-container *ngIf=\"data.GioiTinh == 'False'\"> Nam </ng-container>\n\n                        <ng-container *ngIf=\"data.GioiTinh == 'True'\"> Nữ </ng-container>\n\n\n                    </td>\n                    <td>\n\n\n                        <ng-container *ngIf=\"data.GioiTinh == true\">\n                            Nam\n                        </ng-container>\n                        <ng-container *ngIf=\"data.GioiTinh == false\">Nữ</ng-container>\n                    </td>\n\n                    <td>{{data.Sdt }} </td>\n                    <td>{{data.Email }}</td>\n\n                    <td>\n                        <button nz-button nzType=\"default\" nzShape=\"round\" (click)=\"viewNhanvien(data.MaNhanVien)\">\n                <i nz-icon nzType=\"eye\"></i>Xem\n              </button>\n                        <button nz-button nzType=\"primary\" nzShape=\"round\" (click)=\"editNhanVien(data)\">\n                <i nz-icon nzType=\"edit\"></i>Sửa\n              </button>\n                        <button nz-button nzType=\"danger\" nzShape=\"round\" (click)=\"confirmDelete(data.MaNhanVien)\">\n                <i nz-icon nzType=\"delete\"></i>Xóa\n              </button>\n                    </td>\n                </tr>\n            </tbody>\n        </nz-table>\n    </nz-page-header-content>\n</nz-page-header>","import { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\r\nimport { AppComponent } from '../app.component';\r\nimport { UserListComponent } from './account-management/users/user-list/user-list.component';\r\nimport { ImgListComponent } from './image-management/img-bienthe/img-list/img-list.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NhanvienDetailComponent } from './nhanvien-management/nhanvien-detail/nhanvien-detail.component';\r\nimport { NhanvienListComponent } from './nhanvien-management/nhanvien-list/nhanvien-list.component';\r\n\r\nimport { PagesComponent } from './pages.component';\r\nimport { PagesModule } from './pages.module';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PagesComponent,\r\n    children: [\r\n      {\r\n        path: 'nhanvien-management',\r\n        component: NhanvienListComponent\r\n      },\r\n      {\r\n        path: 'nhanvien-management/detail',\r\n        component: NhanvienDetailComponent\r\n      },\r\n      {\r\n        path: 'users-management',\r\n        component: UserListComponent\r\n },\r\n {\r\n  path: 'imgBT-management',\r\n  component: ImgListComponent\r\n}\r\n\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    NgZorroAntdModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  exports: [RouterModule],\r\n  declarations: [\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\n\r\n\r\nexport class PagesRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NzModalService } from 'ng-zorro-antd';\r\nimport { AuthenticationService } from '../common_base/authentication/authentication.service';\r\nimport { BaseComponent } from '../common_base/base.component';\r\nimport { UserDTO } from '../models/UserDTO';\r\nimport { LoginService } from '../shared/services/login.service';\r\nimport * as CONFIG from './../app.config';\r\n\r\n@Component({\r\n  selector: 'app-pages',\r\n  templateUrl: './pages.component.html',\r\n  styleUrls: ['./pages.component.css']\r\n})\r\nexport class PagesComponent extends BaseComponent implements OnInit {\r\n  pageTitle = CONFIG.SITENAME;\r\n  year: number = new Date().getFullYear();\r\n  pageFooter = CONFIG.SITENAME + ' ©' + this.year;\r\n  isCollapsed = false;\r\n  public user: UserDTO = new UserDTO;\r\n  currentUser: UserDTO;\r\n  constructor(\r\n    public router: Router,\r\n    public loginService: LoginService,\r\n    public modalService: NzModalService,\r\n    private authenticationService: AuthenticationService\r\n   ) {\r\n    super(router, loginService);\r\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\r\n   // console.log(' this.currentUser ' + this.currentUser.RoleIds);\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  toggleCollapsed(): void {\r\n    this.isCollapsed = !this.isCollapsed;\r\n  }\r\n\r\n  logout() {\r\n    this.setTokenFromLocalStorage('');\r\n    const token = this.getTokenFromLocalStorage();\r\n    if (token === '' || token) {\r\n      this.router.navigateByUrl('/login');\r\n    }\r\n  }\r\n\r\n}\r\n","<nz-layout class=\"app-layout\">\r\n    <nz-sider class=\"menu-sidebar\" nzCollapsible nzWidth=\"256px\" nzBreakpoint=\"md\" [(nzCollapsed)]=\"isCollapsed\" [nzTrigger]=\"null\" style=\"background: #fff;\">\r\n        <div class=\"sidebar-logo\" style=\"background: #1890ff;\">\r\n            <a href=\"#\" target=\"_blank\">\r\n                <!-- <img src=\"https://ng.ant.design/assets/img/logo.svg\" alt=\"logo\"> -->\r\n                <h1>KOI App</h1>\r\n            </a>\r\n        </div>\r\n        <ul nz-menu nzTheme=\"light-mode\" nzMode=\"inline\" [nzInlineCollapsed]=\"isCollapsed\">\r\n            <li nz-submenu nzOpen nzTitle=\"QL Danh Mục\" nzIcon=\"dashboard\">\r\n                <ul>\r\n                    <li nz-menu-item nzMatchRouter>\r\n                        <a>Loại cá</a>\r\n                    </li>\r\n                    <li nz-menu-item nzMatchRouter>\r\n                        <a>Tài sản</a>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n            <li nz-submenu nzOpen nzTitle=\"QL Nhân Viên\" nzIcon=\"form\">\r\n                <ul>\r\n                    <li nz-menu-item nzMatchRouter>\r\n                        <a routerLink=\"/nhanvien-management\">Nhân viên</a>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n            <li nz-submenu nzOpen nzTitle=\"QL bệnh\" nzIcon=\"form\">\r\n                <ul>\r\n                    <li nz-menu-item nzMatchRouter>\r\n                        <a>Bệnh cá</a>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n            <li nz-submenu nzOpen nzTitle=\"QL hình ảnh\" nzIcon=\"user\">\r\n                <ul>\r\n                    <li nz-menu-item nzMatchRouter>\r\n                        <a routerLink=\"/imgBT-management\">Hình ảnh biến thể</a>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n            <li nz-submenu nzOpen nzTitle=\"QL Tài khoản\" nzIcon=\"user\">\r\n                <ul>\r\n                    <li nz-menu-item nzMatchRouter>\r\n                        <a routerLink=\"/users-management\">Danh sách người dùng</a>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n\r\n        </ul>\r\n    </nz-sider>\r\n    <nz-layout>\r\n        <nz-header style=\"background: #fff; padding:0;\">\r\n            <i class=\"trigger\" nz-icon [type]=\"isCollapsed ? 'menu-unfold' : 'menu-fold'\" (click)=\"isCollapsed = !isCollapsed\"></i>\r\n            <div class=\"profile\">\r\n                <h6 class=\"displayname\"><span>Xin chào,  </span></h6>\r\n                <nz-button-group>\r\n                    <button nz-button nz-dropdown nzShape=\"circle\" [nzDropdownMenu]=\"userMenu\" nzPlacement=\"bottomRight\">\r\n                    <i nz-icon nzType=\"user\"></i>\r\n                  </button>\r\n                </nz-button-group>\r\n                <nz-dropdown-menu #userMenu=\"nzDropdownMenu\">\r\n                    <ul nz-menu>\r\n                        <li nz-menu-item>Cập nhật tài khoản</li>\r\n                        <li nz-menu-item><a>Đổi mật khẩu</a>\r\n                        </li>\r\n                        <li nz-menu-divider></li>\r\n                        <li nz-menu-item><a (click)=\"logout()\">Đăng xuất</a></li>\r\n                    </ul>\r\n                </nz-dropdown-menu>\r\n            </div>\r\n        </nz-header>\r\n        <nz-content>\r\n            <div class=\"inner-content\">\r\n                <router-outlet></router-outlet>\r\n            </div>\r\n        </nz-content>\r\n        <nz-footer style=\"text-align: center;\">{{pageFooter | uppercase}}</nz-footer>\r\n    </nz-layout>\r\n</nz-layout>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PagesRoutingModule } from './pages-routing.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NgZorroAntdModule, NzButtonModule } from 'ng-zorro-antd';\r\n\r\nimport { PagesComponent } from './pages.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NhanvienListComponent } from './nhanvien-management/nhanvien-list/nhanvien-list.component';\r\nimport { NhanvienDetailComponent } from './nhanvien-management/nhanvien-detail/nhanvien-detail.component';\r\nimport { NhanvienDialogComponent } from './nhanvien-management/nhanvien-dialog/nhanvien-dialog.component';\r\nimport { UserListComponent } from './account-management/users/user-list/user-list.component';\r\n\r\nimport { ImgListComponent } from './image-management/img-bienthe/img-list/img-list.component';\r\nimport { UploadImgBTComponent } from './image-management/img-bienthe/upload-img-bt/upload-img-bt.component';\r\nimport { UserDialogComponent } from './account-management/users/user-dialog/user-dialog.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PagesComponent,\r\n    NhanvienListComponent,\r\n    NhanvienDetailComponent,\r\n    NhanvienDialogComponent,\r\n    UserListComponent,\r\n    UserDialogComponent,\r\n    ImgListComponent,\r\n    UploadImgBTComponent],\r\n  imports: [\r\n    CommonModule,\r\n    PagesRoutingModule,\r\n    NgZorroAntdModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    NzButtonModule\r\n\r\n  ],\r\n  providers: [],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n\r\n})\r\nexport class PagesModule { }\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BaseService } from 'src/app/common_base/base.service';\nimport { BaseResponse } from 'src/app/models';\nimport { BienTheDTO } from 'src/app/models/BienTheDTO';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BientheService {\n\n  constructor(private http: HttpClient, private baseSevice: BaseService) { }\n\n  public getAll(): Observable<BaseResponse<BienTheDTO>> {\n      return this.baseSevice.get<BaseResponse<BienTheDTO[]>>('api/BienThe/GetAll');\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BaseService } from 'src/app/common_base/base.service';\nimport { BaseResponse } from 'src/app/models';\nimport { HinhAnhBienTheDTO } from 'src/app/models/HinhAnhBienTheDTO';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HinhanhService {\n\n  constructor(private http: HttpClient, private baseService: BaseService) { }\n\n  public create(data: HinhAnhBienTheDTO): Observable<BaseResponse<string>> {\n    return this.baseService.post<BaseResponse<string>>('api/HinhAnhBienThe', data);\n  }\n\n  public update(data: HinhAnhBienTheDTO): Observable<BaseResponse<string>> {\n    return this.baseService.put<BaseResponse<string>>('api/HinhAnhBienThe', data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BaseResponse } from 'src/app/models';\nimport { LoginDTO } from 'src/app/models/LoginDTO';\nimport { UserDTO } from 'src/app/models/UserDTO';\nimport { BaseService } from 'src/app/common_base/base.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private baseSevice: BaseService) { }\n\n  public getUser(): Observable<BaseResponse<UserDTO>> {\n    return this.baseSevice.get<BaseResponse<UserDTO>>('api/Account/GetUser');\n  }\n\n  public getToken(data: LoginDTO): Observable<BaseResponse<string>> {\n    return this.baseSevice.post<BaseResponse<string>>('api/Login', data);\n  }\n\n  public validateToken(): Observable<BaseResponse<boolean>> {\n    return this.baseSevice.get<BaseResponse<boolean>>('api/Account/ValidateToken');\n  }\n}\n\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BaseService } from 'src/app/common_base/base.service';\nimport { BaseResponse, NhanVienDTO } from 'src/app/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NhanvienService {\n\n  constructor(private http: HttpClient, private baseService: BaseService) { }\n\n  public getAll(): Observable<BaseResponse<NhanVienDTO>> {\n    return this.baseService.get<BaseResponse<NhanVienDTO[]>>('api/NhanVien/GetAll');\n  }\n\n  public getEmployeeNotAccount(): Observable<BaseResponse<NhanVienDTO>> {\n    return this.baseService.get<BaseResponse<NhanVienDTO[]>>('api/NhanVien/GetEmployeeNotAccount');\n}\n\n  public create(data: NhanVienDTO): Observable<BaseResponse<string>> {\n    return this.baseService.post<BaseResponse<string>>('api/NhanVien', data);\n  }\n\n  public update(data: NhanVienDTO): Observable<BaseResponse<string>> {\n    return this.baseService.put<BaseResponse<string>>('api/NhanVien', data);\n  }\n\n  public getDetail(manhanvien: string): Observable<BaseResponse<string>> {\n\n    const httpParams = new HttpParams().set('manhanvien', manhanvien);\n    return this.baseService.get<BaseResponse<string>>('api/NhanVien/GetById', httpParams);\n  }\n\n  public delete(data: any): Observable<BaseResponse<any>> {\n    return this.baseService.delete<BaseResponse<any>>('api/NhanVien', data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BaseService } from 'src/app/common_base/base.service';\nimport { BaseResponse } from 'src/app/models';\nimport { RoleDTO } from 'src/app/models/RoleDTO';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n  constructor(private baseSevice: BaseService) { }\n\n  // GET\n  public getAll(): Observable<BaseResponse<RoleDTO[]>> {\n    return this.baseSevice.get<BaseResponse<RoleDTO[]>>('api/Role/GetAll');\n  }\n\n  public getById(data: RoleDTO): Observable<BaseResponse<RoleDTO>> {\n    return this.baseSevice.get<BaseResponse<RoleDTO>>('api/Role/GetByRoleId', data);\n  }\n\n  // POST\n  public create(data: any): Observable<BaseResponse<any>> {\n    return this.baseSevice.post<BaseResponse<any>>('api/Role', data);\n  }\n\n  public update(data: RoleDTO): Observable<BaseResponse<any>> {\n    return this.baseSevice.put<BaseResponse<any>>('api/Role', data);\n  }\n\n  public delete(data: any): Observable<BaseResponse<any>> {\n    return this.baseSevice.delete<BaseResponse<any>>('api/Role', data);\n  }\n\n  public getRolesOfUser(data: any): Observable<BaseResponse<any>> {\n    return this.baseSevice.get<BaseResponse<any>>('api/UserRole/GetRolesOfUser', data);\n  }\n\n  public createRoleUser(data: any): Observable<BaseResponse<any>> {\n    return this.baseSevice.post<BaseResponse<any>>('api/UserRole', data);\n  }\n\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BaseService } from 'src/app/common_base/base.service';\nimport { BaseResponse } from 'src/app/models';\nimport { UserDTO } from 'src/app/models/UserDTO';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UsersService {\n\n    constructor(private http: HttpClient, private baseSevice: BaseService) { }\n\n    public getAllEmployeeAccount(): Observable<BaseResponse<UserDTO>> {\n        return this.baseSevice.get<BaseResponse<UserDTO[]>>('api/User/GetAll');\n    }\n\n    public createEmployeeAccount(data: UserDTO): Observable<BaseResponse<string>> {\n        return this.baseSevice.post<BaseResponse<string>>('api/User/CreateEmployeeAccount', data);\n    }\n\n    public updateEmployeeAccount(data: UserDTO): Observable<BaseResponse<string>> {\n        return this.baseSevice.put<BaseResponse<string>>('api/User/UpdateEmployeeAccount', data);\n    }\n\n    public getDetailUser(userId: string): Observable<BaseResponse<string>> {\n\n        const httpParams = new HttpParams().set('userId', userId);\n        return this.baseSevice.get<BaseResponse<string>>('api/User/GetById', httpParams);\n    }\n\n    public deleteEmployeeAccount(data: any): Observable<BaseResponse<any>> {\n        return this.baseSevice.delete<BaseResponse<any>>('api/User/DeleteEmployeeAccount', data);\n    }\n\n    public getByUserName(userName: string): Observable<BaseResponse<string>> {\n        const httpParams = new HttpParams().set('userName', userName);\n        return this.baseSevice.get<BaseResponse<string>>('api/User/GetByUserName', httpParams);\n    }\n    public getAllUserAccountActive(): Observable<BaseResponse<UserDTO>> {\n        return this.baseSevice.get<BaseResponse<UserDTO[]>>('api/User/GetAllUserAccountActive');\n    }\n\n    public getAllUserAccountLocked(): Observable<BaseResponse<UserDTO>> {\n        return this.baseSevice.get<BaseResponse<UserDTO[]>>('api/User/GetAllUserAccountLocked');\n    }\n\n    public updateStatusAccount(data: any): Observable<BaseResponse<string>> {\n        return this.baseSevice.put<BaseResponse<string>>('api/User/UpdateStatusAccount', data);\n      }\n    \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}